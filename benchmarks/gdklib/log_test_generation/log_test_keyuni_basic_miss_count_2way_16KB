KLEE: output directory is "/Users/sudiptac/sudiptac/Work/side-channel-repo/temp/cache-side-channel/benchmarks/gdklib/klee-out-45"

.....read cache configuration 256:32:2:90:l.....

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: entry, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: entry, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: entry, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: entry, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: entry, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb3, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb3, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb1, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb1, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb3, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb3, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 5 #####



##### Number of (input)-independent cold misses = 5 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [14]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 5 #####



##### Number of (input)-independent cold misses = 5 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 7 #####



##### Number of (input)-independent cold misses = 7 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 8 #####



##### Number of (input)-independent cold misses = 8 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 8 #####



##### Number of (input)-independent cold misses = 8 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 9 #####



##### Number of (input)-independent cold misses = 9 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 9 #####



##### Number of (input)-independent cold misses = 9 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 9 #####



##### Number of (input)-independent cold misses = 9 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 9 #####



##### Number of (input)-independent cold misses = 9 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 10 #####



##### Number of (input)-independent cold misses = 10 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 10 #####



##### Number of (input)-independent cold misses = 10 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 10 #####



##### Number of (input)-independent cold misses = 10 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 10 #####



##### Number of (input)-independent cold misses = 10 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 10 #####



##### Number of (input)-independent cold misses = 10 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 10 #####



##### Number of (input)-independent cold misses = 10 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 10 #####



##### Number of (input)-independent cold misses = 10 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Number of (input)-independent cache misses = 10 #####



##### Number of (input)-independent cold misses = 10 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 11 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 14 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 2 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 15 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 2 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 14 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 2 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 14 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 2 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 14 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 2 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 15 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 2 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 15 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 2 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 14 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 2 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 14 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 2 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [88]




########## Now building the constraint system ##########



########## after path processing, constraint size 7 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 14 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 2 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [78]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [114]




########## Now building the constraint system ##########



########## after path processing, constraint size 10 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 14 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 2 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 14 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 2 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 15 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 2 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [31]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [88]




########## Now building the constraint system ##########



########## after path processing, constraint size 7 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


##### Number of (input)-independent cache misses = 15 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 2 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 15 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 2 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [108]




########## Now building the constraint system ##########



########## after path processing, constraint size 9 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 14 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 2 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [98]




########## Now building the constraint system ##########



########## after path processing, constraint size 8 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [78]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [78]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####

=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [31]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 15 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 2 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [101]




########## Now building the constraint system ##########



########## after path processing, constraint size 8 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 15 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 2 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [88]




########## Now building the constraint system ##########



########## after path processing, constraint size 7 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [51]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [81]




########## Now building the constraint system ##########



########## after path processing, constraint size 7 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 14 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 2 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [78]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Number of (input)-independent cache misses = 15 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 2 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 14 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 2 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [78]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [88]




########## Now building the constraint system ##########



########## after path processing, constraint size 8 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [78]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 15 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 2 #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [61]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [71]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 15 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 2 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Number of (input)-independent cache misses = 15 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 2 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [81]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [51]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [51]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [51]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Number of (input)-independent cache misses = 13 #####



##### Number of (input)-independent cold misses = 13 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 11 #####



##### Number of (input)-independent conflict misses = 1 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########



########## after conflict miss processing, constraint-log size 0 ##########



......Now processing constraints for set-associative LRU caches......



......End processing constraints for set-associative LRU caches......

Number of symbolic cache conflicts = 0
Number of atomic constraints = 0

KLEE: done: total instructions = 45975
KLEE: done: completed paths = 886
KLEE: done: generated tests = 886


##### Number of (input)-independent cache misses = 12 #####



##### Number of (input)-independent cold misses = 12 #####



##### Number of (input)-independent conflict misses = 0 #####

real        13.61
user        10.63
sys          2.71
