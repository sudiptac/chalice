KLEE: output directory is "/Users/sudiptac/sudiptac/Work/side-channel-repo/temp/cache-side-channel/benchmarks/gdklib/klee-out-12"

.....read cache configuration 256:32:1:90:l.....

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: entry, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: entry, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: entry, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: entry, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: entry, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb3, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb3, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb1, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb1, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb3, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb3, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (Ult 31
           N0:(ReadLSB w32 0 keystroke))
      (Ule N0 126))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [14]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (Eq false
               (And (Ult 31
                         N0:(ReadLSB w32 0 keystroke))
                    (Ule N0 126)))
           (Ult 159 N0))
      (Ule N0 255))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (Eq false
                    (And (Ult 31
                              N0:(ReadLSB w32 0 keystroke))
                         (Ule N0 126)))
                (Eq false
                    (And (Ult 159 N0) (Ule N0 255))))
           (Eq false (Ult 3599 N0)))
      (Eq false (Ult N0 3599)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (Eq false
                         (And (Ult 31
                                   N0:(ReadLSB w32 0 keystroke))
                              (Ule N0 126)))
                     (Eq false
                         (And (Ult 159 N0) (Ule N0 255))))
                (Ult 3599 N0))
           (Eq false (Ult 8867 N0)))
      (Eq false (Ult N0 8867)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (Eq false
                              (And (Ult 31
                                        N0:(ReadLSB w32 0 keystroke))
                                   (Ule N0 126)))
                          (Eq false
                              (And (Ult 159 N0) (Ule N0 255))))
                     (Eq false (Ult 3599 N0)))
                (Ult N0 3599))
           (Eq false (Ult 968 N0)))
      (Eq false (Ult N0 968)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (Eq false
                              (And (Ult 31
                                        N0:(ReadLSB w32 0 keystroke))
                                   (Ule N0 126)))
                          (Eq false
                              (And (Ult 159 N0) (Ule N0 255))))
                     (Ult 3599 N0))
                (Ult 8867 N0))
           (Eq false (Ult 12483 N0)))
      (Eq false (Ult N0 12483)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (Eq false
                                   (And (Ult 31
                                             N0:(ReadLSB w32 0 keystroke))
                                        (Ule N0 126)))
                               (Eq false
                                   (And (Ult 159 N0) (Ule N0 255))))
                          (Eq false (Ult 3599 N0)))
                     (Ult N0 3599))
                (Ult 968 N0))
           (Eq false (Ult 1114 N0)))
      (Eq false (Ult N0 1114)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (Eq false
                                   (And (Ult 31
                                             N0:(ReadLSB w32 0 keystroke))
                                        (Ule N0 126)))
                               (Eq false
                                   (And (Ult 159 N0) (Ule N0 255))))
                          (Ult 3599 N0))
                     (Eq false (Ult 8867 N0)))
                (Ult N0 8867))
           (Eq false (Ult 4545 N0)))
      (Eq false (Ult N0 4545)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (Eq false
                                        (And (Ult 31
                                                  N0:(ReadLSB w32 0 keystroke))
                                             (Ule N0 126)))
                                    (Eq false
                                        (And (Ult 159 N0) (Ule N0 255))))
                               (Eq false (Ult 3599 N0)))
                          (Ult N0 3599))
                     (Eq false (Ult 968 N0)))
                (Ult N0 968))
           (Eq false (Ult 354 N0)))
      (Eq false (Ult N0 354)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (Eq false
                                   (And (Ult 31
                                             N0:(ReadLSB w32 0 keystroke))
                                        (Ule N0 126)))
                               (Eq false
                                   (And (Ult 159 N0) (Ule N0 255))))
                          (Ult 3599 N0))
                     (Ult 8867 N0))
                (Ult 12483 N0))
           (Eq false (Ult 12605 N0)))
      (Eq false (Ult N0 12605)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (Eq false
                                        (And (Ult 31
                                                  N0:(ReadLSB w32 0 keystroke))
                                             (Ule N0 126)))
                                    (Eq false
                                        (And (Ult 159 N0) (Ule N0 255))))
                               (Eq false (Ult 3599 N0)))
                          (Ult N0 3599))
                     (Ult 968 N0))
                (Ult 1114 N0))
           (Eq false (Ult 1581 N0)))
      (Eq false (Ult N0 1581)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (Eq false
                                             (And (Ult 31
                                                       N0:(ReadLSB w32 0 keystroke))
                                                  (Ule N0 126)))
                                         (Eq false
                                             (And (Ult 159 N0) (Ule N0 255))))
                                    (Eq false (Ult 3599 N0)))
                               (Ult N0 3599))
                          (Ult 968 N0))
                     (Eq false (Ult 1114 N0)))
                (Ult N0 1114))
           (Eq false (Ult 1066 N0)))
      (Eq false (Ult N0 1066)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (Eq false
                                             (And (Ult 31
                                                       N0:(ReadLSB w32 0 keystroke))
                                                  (Ule N0 126)))
                                         (Eq false
                                             (And (Ult 159 N0) (Ule N0 255))))
                                    (Ult 3599 N0))
                               (Eq false (Ult 8867 N0)))
                          (Ult N0 8867))
                     (Eq false (Ult 4545 N0)))
                (Ult N0 4545))
           (Eq false (Ult 3650 N0)))
      (Eq false (Ult N0 3650)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (Eq false
                                             (And (Ult 31
                                                       N0:(ReadLSB w32 0 keystroke))
                                                  (Ule N0 126)))
                                         (Eq false
                                             (And (Ult 159 N0) (Ule N0 255))))
                                    (Eq false (Ult 3599 N0)))
                               (Ult N0 3599))
                          (Eq false (Ult 968 N0)))
                     (Ult N0 968))
                (Ult 354 N0))
           (Eq false (Ult 920 N0)))
      (Eq false (Ult N0 920)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (Eq false
                                        (And (Ult 31
                                                  N0:(ReadLSB w32 0 keystroke))
                                             (Ule N0 126)))
                                    (Eq false
                                        (And (Ult 159 N0) (Ule N0 255))))
                               (Ult 3599 N0))
                          (Eq false (Ult 8867 N0)))
                     (Ult N0 8867))
                (Ult 4545 N0))
           (Eq false (Ult 8471 N0)))
      (Eq false (Ult N0 8471)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (Eq false
                                        (And (Ult 31
                                                  N0:(ReadLSB w32 0 keystroke))
                                             (Ule N0 126)))
                                    (Eq false
                                        (And (Ult 159 N0) (Ule N0 255))))
                               (Ult 3599 N0))
                          (Ult 8867 N0))
                     (Eq false (Ult 12483 N0)))
                (Ult N0 12483))
           (Eq false (Ult 9675 N0)))
      (Eq false (Ult N0 9675)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (Eq false
                                        (And (Ult 31
                                                  N0:(ReadLSB w32 0 keystroke))
                                             (Ule N0 126)))
                                    (Eq false
                                        (And (Ult 159 N0) (Ule N0 255))))
                               (Ult 3599 N0))
                          (Ult 8867 N0))
                     (Ult 12483 N0))
                (Ult 12605 N0))
           (Eq false (Ult 12628 N0)))
      (Eq false (Ult N0 12628)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (Eq false
                                                  (And (Ult 31
                                                            N0:(ReadLSB w32 0 keystroke))
                                                       (Ule N0 126)))
                                              (Eq false
                                                  (And (Ult 159 N0) (Ule N0 255))))
                                         (Eq false (Ult 3599 N0)))
                                    (Ult N0 3599))
                               (Ult 968 N0))
                          (Eq false (Ult 1114 N0)))
                     (Ult N0 1114))
                (Ult 1066 N0))
           (Eq false (Ult 1089 N0)))
      (Eq false (Ult N0 1089)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (Eq false
                                                  (And (Ult 31
                                                            N0:(ReadLSB w32 0 keystroke))
                                                       (Ule N0 126)))
                                              (Eq false
                                                  (And (Ult 159 N0) (Ule N0 255))))
                                         (Eq false (Ult 3599 N0)))
                                    (Ult N0 3599))
                               (Eq false (Ult 968 N0)))
                          (Ult N0 968))
                     (Eq false (Ult 354 N0)))
                (Ult N0 354))
           (Eq false (Ult 298 N0)))
      (Eq false (Ult N0 298)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (Eq false
                                             (And (Ult 31
                                                       N0:(ReadLSB w32 0 keystroke))
                                                  (Ule N0 126)))
                                         (Eq false
                                             (And (Ult 159 N0) (Ule N0 255))))
                                    (Eq false (Ult 3599 N0)))
                               (Ult N0 3599))
                          (Ult 968 N0))
                     (Ult 1114 N0))
                (Ult 1581 N0))
           (Eq false (Ult 1609 N0)))
      (Eq false (Ult N0 1609)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (Eq false
                                             (And (Ult 31
                                                       N0:(ReadLSB w32 0 keystroke))
                                                  (Ule N0 126)))
                                         (Eq false
                                             (And (Ult 159 N0) (Ule N0 255))))
                                    (Ult 3599 N0))
                               (Eq false (Ult 8867 N0)))
                          (Ult N0 8867))
                     (Ult 4545 N0))
                (Ult 8471 N0))
           (Eq false (Ult 8728 N0)))
      (Eq false (Ult N0 8728)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (Eq false
                                                  (And (Ult 31
                                                            N0:(ReadLSB w32 0 keystroke))
                                                       (Ule N0 126)))
                                              (Eq false
                                                  (And (Ult 159 N0) (Ule N0 255))))
                                         (Eq false (Ult 3599 N0)))
                                    (Ult N0 3599))
                               (Eq false (Ult 968 N0)))
                          (Ult N0 968))
                     (Ult 354 N0))
                (Ult 920 N0))
           (Eq false (Ult 944 N0)))
      (Eq false (Ult N0 944)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (Eq false
                                                  (And (Ult 31
                                                            N0:(ReadLSB w32 0 keystroke))
                                                       (Ule N0 126)))
                                              (Eq false
                                                  (And (Ult 159 N0) (Ule N0 255))))
                                         (Ult 3599 N0))
                                    (Eq false (Ult 8867 N0)))
                               (Ult N0 8867))
                          (Ult 4545 N0))
                     (Eq false (Ult 8471 N0)))
                (Ult N0 8471))
           (Eq false (Ult 8224 N0)))
      (Eq false (Ult N0 8224)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (Eq false
                                             (And (Ult 31
                                                       N0:(ReadLSB w32 0 keystroke))
                                                  (Ule N0 126)))
                                         (Eq false
                                             (And (Ult 159 N0) (Ule N0 255))))
                                    (Ult 3599 N0))
                               (Ult 8867 N0))
                          (Ult 12483 N0))
                     (Eq false (Ult 12605 N0)))
                (Ult N0 12605))
           (Eq false (Ult 12519 N0)))
      (Eq false (Ult N0 12519)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (Eq false
                                                  (And (Ult 31
                                                            N0:(ReadLSB w32 0 keystroke))
                                                       (Ule N0 126)))
                                              (Eq false
                                                  (And (Ult 159 N0) (Ule N0 255))))
                                         (Eq false (Ult 3599 N0)))
                                    (Ult N0 3599))
                               (Ult 968 N0))
                          (Ult 1114 N0))
                     (Eq false (Ult 1581 N0)))
                (Ult N0 1581))
           (Eq false (Ult 1506 N0)))
      (Eq false (Ult N0 1506)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Ult 3599 N0))
                                         (Eq false (Ult 8867 N0)))
                                    (Ult N0 8867))
                               (Eq false (Ult 4545 N0)))
                          (Ult N0 4545))
                     (Eq false (Ult 3650 N0)))
                (Ult N0 3650))
           (Eq false (Ult 3622 N0)))
      (Eq false (Ult N0 3622)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (Eq false
                                                  (And (Ult 31
                                                            N0:(ReadLSB w32 0 keystroke))
                                                       (Ule N0 126)))
                                              (Eq false
                                                  (And (Ult 159 N0) (Ule N0 255))))
                                         (Ult 3599 N0))
                                    (Eq false (Ult 8867 N0)))
                               (Ult N0 8867))
                          (Eq false (Ult 4545 N0)))
                     (Ult N0 4545))
                (Ult 3650 N0))
           (Eq false (Ult 4521 N0)))
      (Eq false (Ult N0 4521)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Eq false (Ult 3599 N0)))
                                         (Ult N0 3599))
                                    (Eq false (Ult 968 N0)))
                               (Ult N0 968))
                          (Eq false (Ult 354 N0)))
                     (Ult N0 354))
                (Ult 298 N0))
           (Eq false (Ult 327 N0)))
      (Eq false (Ult N0 327)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (Eq false
                                             (And (Ult 31
                                                       N0:(ReadLSB w32 0 keystroke))
                                                  (Ule N0 126)))
                                         (Eq false
                                             (And (Ult 159 N0) (Ule N0 255))))
                                    (Ult 3599 N0))
                               (Ult 8867 N0))
                          (Eq false (Ult 12483 N0)))
                     (Ult N0 12483))
                (Ult 9675 N0))
           (Eq false (Ult 12443 N0)))
      (Eq false (Ult N0 12443)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Eq false (Ult 3599 N0)))
                                         (Ult N0 3599))
                                    (Ult 968 N0))
                               (Eq false (Ult 1114 N0)))
                          (Ult N0 1114))
                     (Eq false (Ult 1066 N0)))
                (Ult N0 1066))
           (Eq false (Ult 1042 N0)))
      (Eq false (Ult N0 1042)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (Eq false
                                                  (And (Ult 31
                                                            N0:(ReadLSB w32 0 keystroke))
                                                       (Ule N0 126)))
                                              (Eq false
                                                  (And (Ult 159 N0) (Ule N0 255))))
                                         (Ult 3599 N0))
                                    (Ult 8867 N0))
                               (Eq false (Ult 12483 N0)))
                          (Ult N0 12483))
                     (Eq false (Ult 9675 N0)))
                (Ult N0 9675))
           (Eq false (Ult 9492 N0)))
      (Eq false (Ult N0 9492)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Eq false (Ult 968 N0)))
                                    (Ult N0 968))
                               (Eq false (Ult 354 N0)))
                          (Ult N0 354))
                     (Eq false (Ult 298 N0)))
                (Ult N0 298))
           (Eq false (Ult 273 N0)))
      (Eq false (Ult N0 273)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (Eq false
                                                  (And (Ult 31
                                                            N0:(ReadLSB w32 0 keystroke))
                                                       (Ule N0 126)))
                                              (Eq false
                                                  (And (Ult 159 N0) (Ule N0 255))))
                                         (Eq false (Ult 3599 N0)))
                                    (Ult N0 3599))
                               (Ult 968 N0))
                          (Ult 1114 N0))
                     (Ult 1581 N0))
                (Ult 1609 N0))
           (Eq false (Ult 3587 N0)))
      (Eq false (Ult N0 3587)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (Eq false
                                                  (And (Ult 31
                                                            N0:(ReadLSB w32 0 keystroke))
                                                       (Ule N0 126)))
                                              (Eq false
                                                  (And (Ult 159 N0) (Ule N0 255))))
                                         (Ult 3599 N0))
                                    (Ult 8867 N0))
                               (Ult 12483 N0))
                          (Eq false (Ult 12605 N0)))
                     (Ult N0 12605))
                (Ult 12519 N0))
           (Eq false (Ult 12593 N0)))
      (Eq false (Ult N0 12593)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Eq false (Ult 3599 N0)))
                                         (Ult N0 3599))
                                    (Eq false (Ult 968 N0)))
                               (Ult N0 968))
                          (Ult 354 N0))
                     (Eq false (Ult 920 N0)))
                (Ult N0 920))
           (Eq false (Ult 381 N0)))
      (Eq false (Ult N0 381)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Eq false (Ult 3599 N0)))
                                         (Ult N0 3599))
                                    (Ult 968 N0))
                               (Eq false (Ult 1114 N0)))
                          (Ult N0 1114))
                     (Ult 1066 N0))
                (Ult 1089 N0))
           (Eq false (Ult 1101 N0)))
      (Eq false (Ult N0 1101)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (Eq false
                                                  (And (Ult 31
                                                            N0:(ReadLSB w32 0 keystroke))
                                                       (Ule N0 126)))
                                              (Eq false
                                                  (And (Ult 159 N0) (Ule N0 255))))
                                         (Ult 3599 N0))
                                    (Ult 8867 N0))
                               (Eq false (Ult 12483 N0)))
                          (Ult N0 12483))
                     (Ult 9675 N0))
                (Ult 12443 N0))
           (Eq false (Ult 12459 N0)))
      (Eq false (Ult N0 12459)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Ult 3599 N0))
                                         (Eq false (Ult 8867 N0)))
                                    (Ult N0 8867))
                               (Ult 4545 N0))
                          (Ult 8471 N0))
                     (Eq false (Ult 8728 N0)))
                (Ult N0 8728))
           (Eq false (Ult 8539 N0)))
      (Eq false (Ult N0 8539)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (Eq false
                                             (And (Ult 31
                                                       N0:(ReadLSB w32 0 keystroke))
                                                  (Ule N0 126)))
                                         (Eq false
                                             (And (Ult 159 N0) (Ule N0 255))))
                                    (Ult 3599 N0))
                               (Ult 8867 N0))
                          (Ult 12483 N0))
                     (Ult 12605 N0))
                (Ult 12628 N0))
           (Eq false (Ult 12640 N0)))
      (Eq false (Ult N0 12640)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Eq false (Ult 3599 N0)))
                                         (Ult N0 3599))
                                    (Ult 968 N0))
                               (Ult 1114 N0))
                          (Ult 1581 N0))
                     (Eq false (Ult 1609 N0)))
                (Ult N0 1609))
           (Eq false (Ult 1592 N0)))
      (Eq false (Ult N0 1592)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Ult 3599 N0))
                                         (Eq false (Ult 8867 N0)))
                                    (Ult N0 8867))
                               (Eq false (Ult 4545 N0)))
                          (Ult N0 4545))
                     (Ult 3650 N0))
                (Ult 4521 N0))
           (Eq false (Ult 4533 N0)))
      (Eq false (Ult N0 4533)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (Eq false
                                                  (And (Ult 31
                                                            N0:(ReadLSB w32 0 keystroke))
                                                       (Ule N0 126)))
                                              (Eq false
                                                  (And (Ult 159 N0) (Ule N0 255))))
                                         (Ult 3599 N0))
                                    (Ult 8867 N0))
                               (Ult 12483 N0))
                          (Ult 12605 N0))
                     (Eq false (Ult 12628 N0)))
                (Ult N0 12628))
           (Eq false (Ult 12616 N0)))
      (Eq false (Ult N0 12616)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Ult 3599 N0))
                                         (Eq false (Ult 8867 N0)))
                                    (Ult N0 8867))
                               (Ult 4545 N0))
                          (Eq false (Ult 8471 N0)))
                     (Ult N0 8471))
                (Ult 8224 N0))
           (Eq false (Ult 8356 N0)))
      (Eq false (Ult N0 8356)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Eq false (Ult 8867 N0)))
                                         (Ult N0 8867))
                                    (Eq false (Ult 4545 N0)))
                               (Ult N0 4545))
                          (Ult 3650 N0))
                     (Eq false (Ult 4521 N0)))
                (Ult N0 4521))
           (Eq false (Ult 3661 N0)))
      (Eq false (Ult N0 3661)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Eq false (Ult 968 N0)))
                                    (Ult N0 968))
                               (Ult 354 N0))
                          (Ult 920 N0))
                     (Eq false (Ult 944 N0)))
                (Ult N0 944))
           (Eq false (Ult 932 N0)))
      (Eq false (Ult N0 932)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Eq false (Ult 1114 N0)))
                                    (Ult N0 1114))
                               (Eq false (Ult 1066 N0)))
                          (Ult N0 1066))
                     (Eq false (Ult 1042 N0)))
                (Ult N0 1042))
           (Eq false (Ult 1029 N0)))
      (Eq false (Ult N0 1029)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Ult 968 N0))
                                    (Eq false (Ult 1114 N0)))
                               (Ult N0 1114))
                          (Ult 1066 N0))
                     (Eq false (Ult 1089 N0)))
                (Ult N0 1089))
           (Eq false (Ult 1077 N0)))
      (Eq false (Ult N0 1077)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Eq false (Ult 968 N0)))
                                    (Ult N0 968))
                               (Eq false (Ult 354 N0)))
                          (Ult N0 354))
                     (Ult 298 N0))
                (Ult 327 N0))
           (Eq false (Ult 342 N0)))
      (Eq false (Ult N0 342)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Ult 3599 N0))
                                         (Ult 8867 N0))
                                    (Eq false (Ult 12483 N0)))
                               (Ult N0 12483))
                          (Eq false (Ult 9675 N0)))
                     (Ult N0 9675))
                (Ult 9492 N0))
           (Eq false (Ult 9644 N0)))
      (Eq false (Ult N0 9644)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Eq false (Ult 8867 N0)))
                                         (Ult N0 8867))
                                    (Eq false (Ult 4545 N0)))
                               (Ult N0 4545))
                          (Eq false (Ult 3650 N0)))
                     (Ult N0 3650))
                (Ult 3622 N0))
           (Eq false (Ult 3634 N0)))
      (Eq false (Ult N0 3634)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Eq false (Ult 3599 N0)))
                                         (Ult N0 3599))
                                    (Ult 968 N0))
                               (Ult 1114 N0))
                          (Eq false (Ult 1581 N0)))
                     (Ult N0 1581))
                (Ult 1506 N0))
           (Eq false (Ult 1569 N0)))
      (Eq false (Ult N0 1569)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Eq false (Ult 968 N0)))
                                    (Ult N0 968))
                               (Ult 354 N0))
                          (Eq false (Ult 920 N0)))
                     (Ult N0 920))
                (Ult 381 N0))
           (Eq false (Ult 906 N0)))
      (Eq false (Ult N0 906)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Ult 968 N0))
                                    (Ult 1114 N0))
                               (Eq false (Ult 1581 N0)))
                          (Ult N0 1581))
                     (Eq false (Ult 1506 N0)))
                (Ult N0 1506))
           (Eq false (Ult 1494 N0)))
      (Eq false (Ult N0 1494)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Eq false (Ult 3599 N0)))
                                         (Ult N0 3599))
                                    (Eq false (Ult 968 N0)))
                               (Ult N0 968))
                          (Ult 354 N0))
                     (Ult 920 N0))
                (Ult 944 N0))
           (Eq false (Ult 956 N0)))
      (Eq false (Ult N0 956)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Ult 968 N0))
                                    (Eq false (Ult 1114 N0)))
                               (Ult N0 1114))
                          (Eq false (Ult 1066 N0)))
                     (Ult N0 1066))
                (Ult 1042 N0))
           (Eq false (Ult 1054 N0)))
      (Eq false (Ult N0 1054)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Ult 3599 N0))
                                         (Ult 8867 N0))
                                    (Ult 12483 N0))
                               (Eq false (Ult 12605 N0)))
                          (Ult N0 12605))
                     (Eq false (Ult 12519 N0)))
                (Ult N0 12519))
           (Eq false (Ult 12501 N0)))
      (Eq false (Ult N0 12501)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (Eq false
                                                  (And (Ult 31
                                                            N0:(ReadLSB w32 0 keystroke))
                                                       (Ule N0 126)))
                                              (Eq false
                                                  (And (Ult 159 N0) (Ule N0 255))))
                                         (Ult 3599 N0))
                                    (Eq false (Ult 8867 N0)))
                               (Ult N0 8867))
                          (Ult 4545 N0))
                     (Ult 8471 N0))
                (Ult 8728 N0))
           (Eq false (Ult 8747 N0)))
      (Eq false (Ult N0 8747)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Eq false (Ult 8867 N0)))
                                         (Ult N0 8867))
                                    (Ult 4545 N0))
                               (Eq false (Ult 8471 N0)))
                          (Ult N0 8471))
                     (Eq false (Ult 8224 N0)))
                (Ult N0 8224))
           (Eq false (Ult 8202 N0)))
      (Eq false (Ult N0 8202)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Eq false (Ult 12483 N0)))
                                    (Ult N0 12483))
                               (Eq false (Ult 9675 N0)))
                          (Ult N0 9675))
                     (Eq false (Ult 9492 N0)))
                (Ult N0 9492))
           (Eq false (Ult 9225 N0)))
      (Eq false (Ult N0 9225)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Eq false (Ult 354 N0)))
                                    (Ult N0 354))
                               (Eq false (Ult 298 N0)))
                          (Ult N0 298))
                     (Eq false (Ult 273 N0)))
                (Ult N0 273))
           (Eq false (Ult 261 N0)))
      (Eq false (Ult N0 261)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Eq false (Ult 968 N0)))
                                         (Ult N0 968))
                                    (Eq false (Ult 354 N0)))
                               (Ult N0 354))
                          (Eq false (Ult 298 N0)))
                     (Ult N0 298))
                (Ult 273 N0))
           (Eq false (Ult 286 N0)))
      (Eq false (Ult N0 286)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Eq false (Ult 968 N0)))
                                         (Ult N0 968))
                                    (Ult 354 N0))
                               (Eq false (Ult 920 N0)))
                          (Ult N0 920))
                     (Eq false (Ult 381 N0)))
                (Ult N0 381))
           (Eq false (Ult 365 N0)))
      (Eq false (Ult N0 365)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Eq false (Ult 4545 N0)))
                                    (Ult N0 4545))
                               (Eq false (Ult 3650 N0)))
                          (Ult N0 3650))
                     (Eq false (Ult 3622 N0)))
                (Ult N0 3622))
           (Eq false (Ult 3610 N0)))
      (Eq false (Ult N0 3610)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Ult 3599 N0))
                                         (Ult 8867 N0))
                                    (Ult 12483 N0))
                               (Eq false (Ult 12605 N0)))
                          (Ult N0 12605))
                     (Ult 12519 N0))
                (Ult 12593 N0))
           (Eq false (Ult 12599 N0)))
      (Eq false (Ult N0 12599)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Eq false (Ult 4545 N0)))
                                    (Ult N0 4545))
                               (Eq false (Ult 3650 N0)))
                          (Ult N0 3650))
                     (Ult 3622 N0))
                (Ult 3634 N0))
           (Eq false (Ult 3640 N0)))
      (Eq false (Ult N0 3640)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Ult 968 N0))
                                    (Ult 1114 N0))
                               (Ult 1581 N0))
                          (Eq false (Ult 1609 N0)))
                     (Ult N0 1609))
                (Ult 1592 N0))
           (Eq false (Ult 1603 N0)))
      (Eq false (Ult N0 1603)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Ult 968 N0))
                                    (Eq false (Ult 1114 N0)))
                               (Ult N0 1114))
                          (Ult 1066 N0))
                     (Ult 1089 N0))
                (Ult 1101 N0))
           (Eq false (Ult 1108 N0)))
      (Eq false (Ult N0 1108)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Eq false (Ult 968 N0)))
                                         (Ult N0 968))
                                    (Eq false (Ult 354 N0)))
                               (Ult N0 354))
                          (Ult 298 N0))
                     (Eq false (Ult 327 N0)))
                (Ult N0 327))
           (Eq false (Ult 313 N0)))
      (Eq false (Ult N0 313)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Eq false (Ult 968 N0)))
                                    (Ult N0 968))
                               (Ult 354 N0))
                          (Ult 920 N0))
                     (Ult 944 N0))
                (Ult 956 N0))
           (Eq false (Ult 962 N0)))
      (Eq false (Ult N0 962)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Eq false (Ult 1114 N0)))
                                    (Ult N0 1114))
                               (Eq false (Ult 1066 N0)))
                          (Ult N0 1066))
                     (Ult 1042 N0))
                (Ult 1054 N0))
           (Eq false (Ult 1060 N0)))
      (Eq false (Ult N0 1060)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Eq false (Ult 8867 N0)))
                                         (Ult N0 8867))
                                    (Eq false (Ult 4545 N0)))
                               (Ult N0 4545))
                          (Ult 3650 N0))
                     (Ult 4521 N0))
                (Ult 4533 N0))
           (Eq false (Ult 4539 N0)))
      (Eq false (Ult N0 4539)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Eq false (Ult 1114 N0)))
                                    (Ult N0 1114))
                               (Ult 1066 N0))
                          (Eq false (Ult 1089 N0)))
                     (Ult N0 1089))
                (Ult 1077 N0))
           (Eq false (Ult 1083 N0)))
      (Eq false (Ult N0 1083)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (Eq false
                                                  (And (Ult 31
                                                            N0:(ReadLSB w32 0 keystroke))
                                                       (Ule N0 126)))
                                              (Eq false
                                                  (And (Ult 159 N0) (Ule N0 255))))
                                         (Ult 3599 N0))
                                    (Ult 8867 N0))
                               (Ult 12483 N0))
                          (Ult 12605 N0))
                     (Ult 12628 N0))
                (Ult 12640 N0))
           (Eq false (Ult 12664 N0)))
      (Eq false (Ult N0 12664)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Eq false (Ult 968 N0)))
                                         (Ult N0 968))
                                    (Ult 354 N0))
                               (Eq false (Ult 920 N0)))
                          (Ult N0 920))
                     (Ult 381 N0))
                (Ult 906 N0))
           (Eq false (Ult 914 N0)))
      (Eq false (Ult N0 914)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Eq false (Ult 8867 N0)))
                                         (Ult N0 8867))
                                    (Ult 4545 N0))
                               (Eq false (Ult 8471 N0)))
                          (Ult N0 8471))
                     (Ult 8224 N0))
                (Ult 8356 N0))
           (Eq false (Ult 8361 N0)))
      (Eq false (Ult N0 8361)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Ult 968 N0))
                                    (Ult 1114 N0))
                               (Ult 1581 N0))
                          (Ult 1609 N0))
                     (Eq false (Ult 3587 N0)))
                (Ult N0 3587))
           (Eq false (Ult 1615 N0)))
      (Eq false (Ult N0 1615)))
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Ult 3599 N0))
                                         (Eq false (Ult 8867 N0)))
                                    (Ult N0 8867))
                               (Ult 4545 N0))
                          (Ult 8471 N0))
                     (Ult 8728 N0))
                (Ult 8747 N0))
           (Eq false (Ult 8805 N0)))
      (Eq false (Ult N0 8805)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Eq false (Ult 8867 N0)))
                                         (Ult N0 8867))
                                    (Ult 4545 N0))
                               (Ult 8471 N0))
                          (Eq false (Ult 8728 N0)))
                     (Ult N0 8728))
                (Ult 8539 N0))
           (Eq false (Ult 8594 N0)))
      (Eq false (Ult N0 8594)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Ult 3599 N0))
                                         (Ult 8867 N0))
                                    (Eq false (Ult 12483 N0)))
                               (Ult N0 12483))
                          (Ult 9675 N0))
                     (Eq false (Ult 12443 N0)))
                (Ult N0 12443))
           (Eq false (Ult 9829 N0)))
      (Eq false (Ult N0 9829)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Ult 968 N0))
                                    (Ult 1114 N0))
                               (Eq false (Ult 1581 N0)))
                          (Ult N0 1581))
                     (Ult 1506 N0))
                (Ult 1569 N0))
           (Eq false (Ult 1575 N0)))
      (Eq false (Ult N0 1575)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Eq false (Ult 12483 N0)))
                                    (Ult N0 12483))
                               (Ult 9675 N0))
                          (Eq false (Ult 12443 N0)))
                     (Ult N0 12443))
                (Ult 9829 N0))
           (Eq false (Ult 10013 N0)))
      (Eq false (Ult N0 10013)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Eq false (Ult 968 N0)))
                                         (Ult N0 968))
                                    (Eq false (Ult 354 N0)))
                               (Ult N0 354))
                          (Ult 298 N0))
                     (Ult 327 N0))
                (Ult 342 N0))
           (Eq false (Ult 348 N0)))
      (Eq false (Ult N0 348)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Eq false (Ult 1066 N0)))
                               (Ult N0 1066))
                          (Eq false (Ult 1042 N0)))
                     (Ult N0 1042))
                (Ult 1029 N0))
           (Eq false (Ult 1035 N0)))
      (Eq false (Ult N0 1035)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Eq false (Ult 354 N0)))
                                    (Ult N0 354))
                               (Eq false (Ult 298 N0)))
                          (Ult N0 298))
                     (Ult 273 N0))
                (Ult 286 N0))
           (Eq false (Ult 292 N0)))
      (Eq false (Ult N0 292)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Eq false (Ult 1581 N0)))
                               (Ult N0 1581))
                          (Eq false (Ult 1506 N0)))
                     (Ult N0 1506))
                (Ult 1494 N0))
           (Eq false (Ult 1500 N0)))
      (Eq false (Ult N0 1500)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Eq false (Ult 4545 N0)))
                                    (Ult N0 4545))
                               (Ult 3650 N0))
                          (Eq false (Ult 4521 N0)))
                     (Ult N0 4521))
                (Ult 3661 N0))
           (Eq false (Ult 3669 N0)))
      (Eq false (Ult N0 3669)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Ult 4545 N0))
                                    (Eq false (Ult 8471 N0)))
                               (Ult N0 8471))
                          (Eq false (Ult 8224 N0)))
                     (Ult N0 8224))
                (Ult 8202 N0))
           (Eq false (Ult 8216 N0)))
      (Eq false (Ult N0 8216)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Eq false (Ult 12483 N0)))
                                         (Ult N0 12483))
                                    (Eq false (Ult 9675 N0)))
                               (Ult N0 9675))
                          (Eq false (Ult 9492 N0)))
                     (Ult N0 9492))
                (Ult 9225 N0))
           (Eq false (Ult 9252 N0)))
      (Eq false (Ult N0 9252)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Eq false (Ult 9675 N0)))
                                    (Ult N0 9675))
                               (Eq false (Ult 9492 N0)))
                          (Ult N0 9492))
                     (Eq false (Ult 9225 N0)))
                (Ult N0 9225))
           (Eq false (Ult 8981 N0)))
      (Eq false (Ult N0 8981)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Eq false (Ult 3599 N0)))
                                         (Ult N0 3599))
                                    (Ult 968 N0))
                               (Ult 1114 N0))
                          (Ult 1581 N0))
                     (Ult 1609 N0))
                (Ult 3587 N0))
           (Eq false (Ult 3593 N0)))
      (Eq false (Ult N0 3593)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Eq false (Ult 1114 N0)))
                                    (Ult N0 1114))
                               (Ult 1066 N0))
                          (Ult 1089 N0))
                     (Eq false (Ult 1101 N0)))
                (Ult N0 1101))
           (Eq false (Ult 1095 N0)))
      (Eq false (Ult N0 1095)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Eq false (Ult 968 N0)))
                                         (Ult N0 968))
                                    (Ult 354 N0))
                               (Ult 920 N0))
                          (Eq false (Ult 944 N0)))
                     (Ult N0 944))
                (Ult 932 N0))
           (Eq false (Ult 938 N0)))
      (Eq false (Ult N0 938)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Eq false (Ult 920 N0)))
                               (Ult N0 920))
                          (Ult 381 N0))
                     (Eq false (Ult 906 N0)))
                (Ult N0 906))
           (Eq false (Ult 731 N0)))
      (Eq false (Ult N0 731)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Ult 12605 N0))
                               (Eq false (Ult 12628 N0)))
                          (Ult N0 12628))
                     (Eq false (Ult 12616 N0)))
                (Ult N0 12616))
           (Eq false (Ult 12610 N0)))
      (Eq false (Ult N0 12610)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Eq false (Ult 12605 N0)))
                               (Ult N0 12605))
                          (Ult 12519 N0))
                     (Eq false (Ult 12593 N0)))
                (Ult N0 12593))
           (Eq false (Ult 12525 N0)))
      (Eq false (Ult N0 12525)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Ult 3599 N0))
                                         (Ult 8867 N0))
                                    (Eq false (Ult 12483 N0)))
                               (Ult N0 12483))
                          (Ult 9675 N0))
                     (Ult 12443 N0))
                (Ult 12459 N0))
           (Eq false (Ult 12471 N0)))
      (Eq false (Ult N0 12471)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Eq false (Ult 12483 N0)))
                                    (Ult N0 12483))
                               (Ult 9675 N0))
                          (Ult 12443 N0))
                     (Eq false (Ult 12459 N0)))
                (Ult N0 12459))
           (Eq false (Ult 12453 N0)))
      (Eq false (Ult N0 12453)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Eq false (Ult 4545 N0)))
                                    (Ult N0 4545))
                               (Ult 3650 N0))
                          (Ult 4521 N0))
                     (Eq false (Ult 4533 N0)))
                (Ult N0 4533))
           (Eq false (Ult 4527 N0)))
      (Eq false (Ult N0 4527)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Eq false (Ult 12483 N0)))
                                         (Ult N0 12483))
                                    (Eq false (Ult 9675 N0)))
                               (Ult N0 9675))
                          (Ult 9492 N0))
                     (Eq false (Ult 9644 N0)))
                (Ult N0 9644))
           (Eq false (Ult 9532 N0)))
      (Eq false (Ult N0 9532)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Eq false (Ult 354 N0)))
                                    (Ult N0 354))
                               (Ult 298 N0))
                          (Ult 327 N0))
                     (Eq false (Ult 342 N0)))
                (Ult N0 342))
           (Eq false (Ult 336 N0)))
      (Eq false (Ult N0 336)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Ult 3599 N0))
                                         (Ult 8867 N0))
                                    (Ult 12483 N0))
                               (Ult 12605 N0))
                          (Eq false (Ult 12628 N0)))
                     (Ult N0 12628))
                (Ult 12616 N0))
           (Eq false (Ult 12622 N0)))
      (Eq false (Ult N0 12622)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Eq false (Ult 354 N0)))
                                    (Ult N0 354))
                               (Ult 298 N0))
                          (Eq false (Ult 327 N0)))
                     (Ult N0 327))
                (Ult 313 N0))
           (Eq false (Ult 321 N0)))
      (Eq false (Ult N0 321)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Eq false (Ult 298 N0)))
                               (Ult N0 298))
                          (Eq false (Ult 273 N0)))
                     (Ult N0 273))
                (Ult 261 N0))
           (Eq false (Ult 267 N0)))
      (Eq false (Ult N0 267)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Eq false (Ult 3650 N0)))
                               (Ult N0 3650))
                          (Ult 3622 N0))
                     (Eq false (Ult 3634 N0)))
                (Ult N0 3634))
           (Eq false (Ult 3628 N0)))
      (Eq false (Ult N0 3628)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Ult 3599 N0))
                                         (Ult 8867 N0))
                                    (Ult 12483 N0))
                               (Ult 12605 N0))
                          (Ult 12628 N0))
                     (Eq false (Ult 12640 N0)))
                (Ult N0 12640))
           (Eq false (Ult 12634 N0)))
      (Eq false (Ult N0 12634)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Eq false (Ult 8867 N0)))
                                         (Ult N0 8867))
                                    (Ult 4545 N0))
                               (Ult 8471 N0))
                          (Ult 8728 N0))
                     (Eq false (Ult 8747 N0)))
                (Ult N0 8747))
           (Eq false (Ult 8744 N0)))
      (Eq false (Ult N0 8744)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Eq false (Ult 12483 N0)))
                                    (Ult N0 12483))
                               (Eq false (Ult 9675 N0)))
                          (Ult N0 9675))
                     (Ult 9492 N0))
                (Ult 9644 N0))
           (Eq false (Ult 9660 N0)))
      (Eq false (Ult N0 9660)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Ult 920 N0))
                               (Eq false (Ult 944 N0)))
                          (Ult N0 944))
                     (Eq false (Ult 932 N0)))
                (Ult N0 932))
           (Eq false (Ult 925 N0)))
      (Eq false (Ult N0 925)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Eq false (Ult 1581 N0)))
                               (Ult N0 1581))
                          (Ult 1506 N0))
                     (Eq false (Ult 1569 N0)))
                (Ult N0 1569))
           (Eq false (Ult 1512 N0)))
      (Eq false (Ult N0 1512)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Ult 4545 N0))
                                    (Eq false (Ult 8471 N0)))
                               (Ult N0 8471))
                          (Ult 8224 N0))
                     (Eq false (Ult 8356 N0)))
                (Ult N0 8356))
           (Eq false (Ult 8248 N0)))
      (Eq false (Ult N0 8248)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Eq false (Ult 968 N0)))
                                         (Ult N0 968))
                                    (Ult 354 N0))
                               (Ult 920 N0))
                          (Ult 944 N0))
                     (Eq false (Ult 956 N0)))
                (Ult N0 956))
           (Eq false (Ult 950 N0)))
      (Eq false (Ult N0 950)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Eq false (Ult 1066 N0)))
                                    (Ult N0 1066))
                               (Eq false (Ult 1042 N0)))
                          (Ult N0 1042))
                     (Eq false (Ult 1029 N0)))
                (Ult N0 1029))
           (Eq false (Ult 973 N0)))
      (Eq false (Ult N0 973)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Eq false (Ult 298 N0)))
                               (Ult N0 298))
                          (Ult 273 N0))
                     (Eq false (Ult 286 N0)))
                (Ult N0 286))
           (Eq false (Ult 280 N0)))
      (Eq false (Ult N0 280)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Eq false (Ult 3650 N0)))
                                    (Ult N0 3650))
                               (Eq false (Ult 3622 N0)))
                          (Ult N0 3622))
                     (Eq false (Ult 3610 N0)))
                (Ult N0 3610))
           (Eq false (Ult 3604 N0)))
      (Eq false (Ult N0 3604)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Eq false (Ult 12605 N0)))
                               (Ult N0 12605))
                          (Eq false (Ult 12519 N0)))
                     (Ult N0 12519))
                (Ult 12501 N0))
           (Eq false (Ult 12513 N0)))
      (Eq false (Ult N0 12513)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Eq false (Ult 12605 N0)))
                               (Ult N0 12605))
                          (Ult 12519 N0))
                     (Ult 12593 N0))
                (Ult 12599 N0))
           (Eq false (Ult 12602 N0)))
      (Eq false (Ult N0 12602)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Ult 3650 N0))
                               (Eq false (Ult 4521 N0)))
                          (Ult N0 4521))
                     (Eq false (Ult 3661 N0)))
                (Ult N0 3661))
           (Eq false (Ult 3655 N0)))
      (Eq false (Ult N0 3655)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Eq false (Ult 920 N0)))
                                    (Ult N0 920))
                               (Eq false (Ult 381 N0)))
                          (Ult N0 381))
                     (Eq false (Ult 365 N0)))
                (Ult N0 365))
           (Eq false (Ult 359 N0)))
      (Eq false (Ult N0 359)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Ult 298 N0))
                               (Eq false (Ult 327 N0)))
                          (Ult N0 327))
                     (Eq false (Ult 313 N0)))
                (Ult N0 313))
           (Eq false (Ult 305 N0)))
      (Eq false (Ult N0 305)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Eq false (Ult 12605 N0)))
                                    (Ult N0 12605))
                               (Eq false (Ult 12519 N0)))
                          (Ult N0 12519))
                     (Eq false (Ult 12501 N0)))
                (Ult N0 12501))
           (Eq false (Ult 12491 N0)))
      (Eq false (Ult N0 12491)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Ult 1066 N0))
                               (Eq false (Ult 1089 N0)))
                          (Ult N0 1089))
                     (Eq false (Ult 1077 N0)))
                (Ult N0 1077))
           (Eq false (Ult 1071 N0)))
      (Eq false (Ult N0 1071)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Ult 4545 N0))
                                    (Ult 8471 N0))
                               (Eq false (Ult 8728 N0)))
                          (Ult N0 8728))
                     (Eq false (Ult 8539 N0)))
                (Ult N0 8539))
           (Eq false (Ult 8533 N0)))
      (Eq false (Ult N0 8533)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Ult 1581 N0))
                               (Eq false (Ult 1609 N0)))
                          (Ult N0 1609))
                     (Eq false (Ult 1592 N0)))
                (Ult N0 1592))
           (Eq false (Ult 1586 N0)))
      (Eq false (Ult N0 1586)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Eq false (Ult 3650 N0)))
                               (Ult N0 3650))
                          (Eq false (Ult 3622 N0)))
                     (Ult N0 3622))
                (Ult 3610 N0))
           (Eq false (Ult 3616 N0)))
      (Eq false (Ult N0 3616)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Eq false (Ult 4545 N0)))
                                    (Ult N0 4545))
                               (Ult 3650 N0))
                          (Ult 4521 N0))
                     (Ult 4533 N0))
                (Ult 4539 N0))
           (Eq false (Ult 4542 N0)))
      (Eq false (Ult N0 4542)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Eq false (Ult 1581 N0)))
                                    (Ult N0 1581))
                               (Eq false (Ult 1506 N0)))
                          (Ult N0 1506))
                     (Eq false (Ult 1494 N0)))
                (Ult N0 1494))
           (Eq false (Ult 1488 N0)))
      (Eq false (Ult N0 1488)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Eq false (Ult 8471 N0)))
                                    (Ult N0 8471))
                               (Eq false (Ult 8224 N0)))
                          (Ult N0 8224))
                     (Eq false (Ult 8202 N0)))
                (Ult N0 8202))
           (Eq false (Ult 8195 N0)))
      (Eq false (Ult N0 8195)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Eq false (Ult 1066 N0)))
                               (Ult N0 1066))
                          (Ult 1042 N0))
                     (Eq false (Ult 1054 N0)))
                (Ult N0 1054))
           (Eq false (Ult 1048 N0)))
      (Eq false (Ult N0 1048)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Eq false (Ult 920 N0)))
                               (Ult N0 920))
                          (Eq false (Ult 381 N0)))
                     (Ult N0 381))
                (Ult 365 N0))
           (Eq false (Ult 371 N0)))
      (Eq false (Ult N0 371)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Eq false (Ult 12483 N0)))
                                         (Ult N0 12483))
                                    (Ult 9675 N0))
                               (Eq false (Ult 12443 N0)))
                          (Ult N0 12443))
                     (Eq false (Ult 9829 N0)))
                (Ult N0 9829))
           (Eq false (Ult 9747 N0)))
      (Eq false (Ult N0 9747)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Eq false (Ult 1066 N0)))
                               (Ult N0 1066))
                          (Ult 1042 N0))
                     (Ult 1054 N0))
                (Ult 1060 N0))
           (Eq false (Ult 1063 N0)))
      (Eq false (Ult N0 1063)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Ult 4545 N0))
                                    (Ult 8471 N0))
                               (Eq false (Ult 8728 N0)))
                          (Ult N0 8728))
                     (Ult 8539 N0))
                (Ult 8594 N0))
           (Eq false (Ult 8660 N0)))
      (Eq false (Ult N0 8660)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Eq false (Ult 354 N0)))
                                    (Ult N0 354))
                               (Ult 298 N0))
                          (Ult 327 N0))
                     (Ult 342 N0))
                (Ult 348 N0))
           (Eq false (Ult 351 N0)))
      (Eq false (Ult N0 351)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (Eq false
                                                       (And (Ult 31
                                                                 N0:(ReadLSB w32 0 keystroke))
                                                            (Ule N0 126)))
                                                   (Eq false
                                                       (And (Ult 159 N0) (Ule N0 255))))
                                              (Ult 3599 N0))
                                         (Ult 8867 N0))
                                    (Ult 12483 N0))
                               (Ult 12605 N0))
                          (Ult 12628 N0))
                     (Ult 12640 N0))
                (Ult 12664 N0))
           (Eq false (Ult 12678 N0)))
      (Eq false (Ult N0 12678)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Eq false (Ult 8867 N0)))
                                         (Ult N0 8867))
                                    (Ult 4545 N0))
                               (Ult 8471 N0))
                          (Ult 8728 N0))
                     (Ult 8747 N0))
                (Ult 8805 N0))
           (Eq false (Ult 8835 N0)))
      (Eq false (Ult N0 8835)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Eq false (Ult 968 N0)))
                                         (Ult N0 968))
                                    (Ult 354 N0))
                               (Ult 920 N0))
                          (Ult 944 N0))
                     (Ult 956 N0))
                (Ult 962 N0))
           (Eq false (Ult 965 N0)))
      (Eq false (Ult N0 965)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Ult 4545 N0))
                                    (Eq false (Ult 8471 N0)))
                               (Ult N0 8471))
                          (Ult 8224 N0))
                     (Ult 8356 N0))
                (Ult 8361 N0))
           (Eq false (Ult 8364 N0)))
      (Eq false (Ult N0 8364)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Ult 968 N0))
                                    (Ult 1114 N0))
                               (Ult 1581 N0))
                          (Ult 1609 N0))
                     (Ult 3587 N0))
                (Ult 3593 N0))
           (Eq false (Ult 3596 N0)))
      (Eq false (Ult N0 3596)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Ult 1581 N0))
                               (Eq false (Ult 1609 N0)))
                          (Ult N0 1609))
                     (Ult 1592 N0))
                (Ult 1603 N0))
           (Eq false (Ult 1606 N0)))
      (Eq false (Ult N0 1606)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Eq false (Ult 298 N0)))
                               (Ult N0 298))
                          (Ult 273 N0))
                     (Ult 286 N0))
                (Ult 292 N0))
           (Eq false (Ult 295 N0)))
      (Eq false (Ult N0 295)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Eq false (Ult 8867 N0)))
                                         (Ult N0 8867))
                                    (Ult 4545 N0))
                               (Ult 8471 N0))
                          (Ult 8728 N0))
                     (Eq false (Ult 8747 N0)))
                (Ult N0 8747))
           (Ult 8744 N0))
      (Eq false (Ult 8745 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Eq false (Ult 1114 N0)))
                                    (Ult N0 1114))
                               (Ult 1066 N0))
                          (Ult 1089 N0))
                     (Ult 1101 N0))
                (Ult 1108 N0))
           (Eq false (Ult 1111 N0)))
      (Eq false (Ult N0 1111)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Eq false (Ult 1066 N0)))
                                         (Ult N0 1066))
                                    (Eq false (Ult 1042 N0)))
                               (Ult N0 1042))
                          (Ult 1029 N0))
                     (Eq false (Ult 1035 N0)))
                (Ult N0 1035))
           (Eq false (Ult 1032 N0)))
      (Eq false (Ult N0 1032)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Eq false (Ult 12605 N0)))
                                    (Ult N0 12605))
                               (Eq false (Ult 12519 N0)))
                          (Ult N0 12519))
                     (Ult 12501 N0))
                (Ult 12513 N0))
           (Eq false (Ult 12516 N0)))
      (Eq false (Ult N0 12516)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Eq false (Ult 12605 N0)))
                                    (Ult N0 12605))
                               (Ult 12519 N0))
                          (Ult 12593 N0))
                     (Eq false (Ult 12599 N0)))
                (Ult N0 12599))
           (Eq false (Ult 12596 N0)))
      (Eq false (Ult N0 12596)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Eq false (Ult 12605 N0)))
                                    (Ult N0 12605))
                               (Ult 12519 N0))
                          (Eq false (Ult 12593 N0)))
                     (Ult N0 12593))
                (Ult 12525 N0))
           (Eq false (Ult 12531 N0)))
      (Eq false (Ult N0 12531)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Ult 12605 N0))
                               (Ult 12628 N0))
                          (Ult 12640 N0))
                     (Eq false (Ult 12664 N0)))
                (Ult N0 12664))
           (Eq false (Ult 12643 N0)))
      (Eq false (Ult N0 12643)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Eq false (Ult 1581 N0)))
                               (Ult N0 1581))
                          (Ult 1506 N0))
                     (Ult 1569 N0))
                (Ult 1575 N0))
           (Eq false (Ult 1578 N0)))
      (Eq false (Ult N0 1578)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Eq false (Ult 3650 N0)))
                               (Ult N0 3650))
                          (Ult 3622 N0))
                     (Ult 3634 N0))
                (Ult 3640 N0))
           (Eq false (Ult 3647 N0)))
      (Eq false (Ult N0 3647)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Eq false (Ult 12483 N0)))
                                         (Ult N0 12483))
                                    (Ult 9675 N0))
                               (Ult 12443 N0))
                          (Eq false (Ult 12459 N0)))
                     (Ult N0 12459))
                (Ult 12453 N0))
           (Eq false (Ult 12456 N0)))
      (Eq false (Ult N0 12456)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Eq false (Ult 12628 N0)))
                               (Ult N0 12628))
                          (Eq false (Ult 12616 N0)))
                     (Ult N0 12616))
                (Ult 12610 N0))
           (Eq false (Ult 12613 N0)))
      (Eq false (Ult N0 12613)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Eq false (Ult 12443 N0)))
                               (Ult N0 12443))
                          (Ult 9829 N0))
                     (Eq false (Ult 10013 N0)))
                (Ult N0 10013))
           (Eq false (Ult 9839 N0)))
      (Eq false (Ult N0 9839)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Ult 298 N0))
                               (Eq false (Ult 327 N0)))
                          (Ult N0 327))
                     (Ult 313 N0))
                (Ult 321 N0))
           (Eq false (Ult 324 N0)))
      (Eq false (Ult N0 324)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Ult 1066 N0))
                               (Ult 1089 N0))
                          (Eq false (Ult 1101 N0)))
                     (Ult N0 1101))
                (Ult 1095 N0))
           (Eq false (Ult 1098 N0)))
      (Eq false (Ult N0 1098)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Eq false (Ult 4545 N0)))
                                    (Ult N0 4545))
                               (Ult 3650 N0))
                          (Ult 4521 N0))
                     (Ult 4533 N0))
                (Ult 4539 N0))
           (Ult 4542 N0))
      (Eq false (Ult 4543 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Eq false (Ult 12519 N0)))
                               (Ult N0 12519))
                          (Eq false (Ult 12501 N0)))
                     (Ult N0 12501))
                (Ult 12491 N0))
           (Eq false (Ult 12494 N0)))
      (Eq false (Ult N0 12494)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Ult 1609 N0))
                               (Eq false (Ult 3587 N0)))
                          (Ult N0 3587))
                     (Eq false (Ult 1615 N0)))
                (Ult N0 1615))
           (Eq false (Ult 1612 N0)))
      (Eq false (Ult N0 1612)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Ult 3650 N0))
                               (Ult 4521 N0))
                          (Ult 4533 N0))
                     (Eq false (Ult 4539 N0)))
                (Ult N0 4539))
           (Eq false (Ult 4536 N0)))
      (Eq false (Ult N0 4536)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Eq false (Ult 1066 N0)))
                                    (Ult N0 1066))
                               (Eq false (Ult 1042 N0)))
                          (Ult N0 1042))
                     (Ult 1029 N0))
                (Ult 1035 N0))
           (Eq false (Ult 1039 N0)))
      (Eq false (Ult N0 1039)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Eq false (Ult 920 N0)))
                                    (Ult N0 920))
                               (Ult 381 N0))
                          (Eq false (Ult 906 N0)))
                     (Ult N0 906))
                (Ult 731 N0))
           (Eq false (Ult 902 N0)))
      (Eq false (Ult N0 902)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Ult 920 N0))
                                    (Eq false (Ult 944 N0)))
                               (Ult N0 944))
                          (Eq false (Ult 932 N0)))
                     (Ult N0 932))
                (Ult 925 N0))
           (Eq false (Ult 928 N0)))
      (Eq false (Ult N0 928)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Eq false (Ult 9675 N0)))
                                    (Ult N0 9675))
                               (Ult 9492 N0))
                          (Eq false (Ult 9644 N0)))
                     (Ult N0 9644))
                (Ult 9532 N0))
           (Eq false (Ult 9633 N0)))
      (Eq false (Ult N0 9633)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Ult 920 N0))
                               (Ult 944 N0))
                          (Eq false (Ult 956 N0)))
                     (Ult N0 956))
                (Ult 950 N0))
           (Eq false (Ult 953 N0)))
      (Eq false (Ult N0 953)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Eq false (Ult 1506 N0)))
                               (Ult N0 1506))
                          (Ult 1494 N0))
                     (Eq false (Ult 1500 N0)))
                (Ult N0 1500))
           (Eq false (Ult 1497 N0)))
      (Eq false (Ult N0 1497)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Eq false (Ult 9492 N0)))
                               (Ult N0 9492))
                          (Eq false (Ult 9225 N0)))
                     (Ult N0 9225))
                (Ult 8981 N0))
           (Eq false (Ult 9001 N0)))
      (Eq false (Ult N0 9001)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Ult 920 N0))
                               (Eq false (Ult 944 N0)))
                          (Ult N0 944))
                     (Ult 932 N0))
                (Ult 938 N0))
           (Eq false (Ult 941 N0)))
      (Eq false (Ult N0 941)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Eq false (Ult 1609 N0)))
                               (Ult N0 1609))
                          (Eq false (Ult 1592 N0)))
                     (Ult N0 1592))
                (Ult 1586 N0))
           (Eq false (Ult 1589 N0)))
      (Eq false (Ult N0 1589)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Ult 1066 N0))
                               (Ult 1089 N0))
                          (Ult 1101 N0))
                     (Eq false (Ult 1108 N0)))
                (Ult N0 1108))
           (Eq false (Ult 1105 N0)))
      (Eq false (Ult N0 1105)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Eq false (Ult 1506 N0)))
                               (Ult N0 1506))
                          (Eq false (Ult 1494 N0)))
                     (Ult N0 1494))
                (Ult 1488 N0))
           (Eq false (Ult 1491 N0)))
      (Eq false (Ult N0 1491)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Eq false (Ult 12483 N0)))
                                         (Ult N0 12483))
                                    (Eq false (Ult 9675 N0)))
                               (Ult N0 9675))
                          (Ult 9492 N0))
                     (Ult 9644 N0))
                (Ult 9660 N0))
           (Eq false (Ult 9665 N0)))
      (Eq false (Ult N0 9665)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Ult 298 N0))
                               (Ult 327 N0))
                          (Eq false (Ult 342 N0)))
                     (Ult N0 342))
                (Ult 336 N0))
           (Eq false (Ult 339 N0)))
      (Eq false (Ult N0 339)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Eq false (Ult 920 N0)))
                               (Ult N0 920))
                          (Ult 381 N0))
                     (Ult 906 N0))
                (Ult 914 N0))
           (Eq false (Ult 917 N0)))
      (Eq false (Ult N0 917)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Eq false (Ult 1609 N0)))
                               (Ult N0 1609))
                          (Ult 1592 N0))
                     (Eq false (Ult 1603 N0)))
                (Ult N0 1603))
           (Eq false (Ult 1600 N0)))
      (Eq false (Ult N0 1600)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Ult 1581 N0))
                               (Ult 1609 N0))
                          (Eq false (Ult 3587 N0)))
                     (Ult N0 3587))
                (Ult 1615 N0))
           (Eq false (Ult 1618 N0)))
      (Eq false (Ult N0 1618)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Eq false (Ult 1581 N0)))
                                    (Ult N0 1581))
                               (Ult 1506 N0))
                          (Ult 1569 N0))
                     (Eq false (Ult 1575 N0)))
                (Ult N0 1575))
           (Eq false (Ult 1572 N0)))
      (Eq false (Ult N0 1572)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Eq false (Ult 8471 N0)))
                                    (Ult N0 8471))
                               (Ult 8224 N0))
                          (Eq false (Ult 8356 N0)))
                     (Ult N0 8356))
                (Ult 8248 N0))
           (Eq false (Ult 8353 N0)))
      (Eq false (Ult N0 8353)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Ult 1581 N0))
                               (Ult 1609 N0))
                          (Ult 3587 N0))
                     (Eq false (Ult 3593 N0)))
                (Ult N0 3593))
           (Eq false (Ult 3590 N0)))
      (Eq false (Ult N0 3590)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Eq false (Ult 920 N0)))
                                    (Ult N0 920))
                               (Ult 381 N0))
                          (Ult 906 N0))
                     (Eq false (Ult 914 N0)))
                (Ult N0 914))
           (Eq false (Ult 911 N0)))
      (Eq false (Ult N0 911)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Ult 4545 N0))
                                    (Ult 8471 N0))
                               (Ult 8728 N0))
                          (Ult 8747 N0))
                     (Eq false (Ult 8805 N0)))
                (Ult N0 8805))
           (Eq false (Ult 8800 N0)))
      (Eq false (Ult N0 8800)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Eq false (Ult 1581 N0)))
                                    (Ult N0 1581))
                               (Eq false (Ult 1506 N0)))
                          (Ult N0 1506))
                     (Ult 1494 N0))
                (Ult 1500 N0))
           (Eq false (Ult 1503 N0)))
      (Eq false (Ult N0 1503)))
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Ult 3650 N0))
                               (Ult 4521 N0))
                          (Eq false (Ult 4533 N0)))
                     (Ult N0 4533))
                (Ult 4527 N0))
           (Eq false (Ult 4530 N0)))
      (Eq false (Ult N0 4530)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Eq false (Ult 4521 N0)))
                               (Ult N0 4521))
                          (Eq false (Ult 3661 N0)))
                     (Ult N0 3661))
                (Ult 3655 N0))
           (Eq false (Ult 3658 N0)))
      (Eq false (Ult N0 3658)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Eq false (Ult 9675 N0)))
                                    (Ult N0 9675))
                               (Eq false (Ult 9492 N0)))
                          (Ult N0 9492))
                     (Ult 9225 N0))
                (Ult 9252 N0))
           (Eq false (Ult 9474 N0)))
      (Eq false (Ult N0 9474)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Ult 8471 N0))
                                    (Eq false (Ult 8728 N0)))
                               (Ult N0 8728))
                          (Ult 8539 N0))
                     (Eq false (Ult 8594 N0)))
                (Ult N0 8594))
           (Eq false (Ult 8542 N0)))
      (Eq false (Ult N0 8542)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Ult 1066 N0))
                                    (Eq false (Ult 1089 N0)))
                               (Ult N0 1089))
                          (Ult 1077 N0))
                     (Eq false (Ult 1083 N0)))
                (Ult N0 1083))
           (Eq false (Ult 1080 N0)))
      (Eq false (Ult N0 1080)))
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Eq false (Ult 8471 N0)))
                                         (Ult N0 8471))
                                    (Eq false (Ult 8224 N0)))
                               (Ult N0 8224))
                          (Eq false (Ult 8202 N0)))
                     (Ult N0 8202))
                (Ult 8195 N0))
           (Eq false (Ult 8199 N0)))
      (Eq false (Ult N0 8199)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Ult 920 N0))
                                    (Eq false (Ult 944 N0)))
                               (Ult N0 944))
                          (Ult 932 N0))
                     (Eq false (Ult 938 N0)))
                (Ult N0 938))
           (Eq false (Ult 935 N0)))
      (Eq false (Ult N0 935)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Eq false (Ult 12483 N0)))
                                    (Ult N0 12483))
                               (Ult 9675 N0))
                          (Ult 12443 N0))
                     (Ult 12459 N0))
                (Ult 12471 N0))
           (Eq false (Ult 12477 N0)))
      (Eq false (Ult N0 12477)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Eq false (Ult 3650 N0)))
                                    (Ult N0 3650))
                               (Ult 3622 N0))
                          (Ult 3634 N0))
                     (Eq false (Ult 3640 N0)))
                (Ult N0 3640))
           (Eq false (Ult 3637 N0)))
      (Eq false (Ult N0 3637)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Ult 298 N0))
                                    (Eq false (Ult 327 N0)))
                               (Ult N0 327))
                          (Eq false (Ult 313 N0)))
                     (Ult N0 313))
                (Ult 305 N0))
           (Eq false (Ult 310 N0)))
      (Eq false (Ult N0 310)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Eq false (Ult 920 N0)))
                                    (Ult N0 920))
                               (Eq false (Ult 381 N0)))
                          (Ult N0 381))
                     (Ult 365 N0))
                (Ult 371 N0))
           (Eq false (Ult 378 N0)))
      (Eq false (Ult N0 378)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Ult 12628 N0))
                               (Eq false (Ult 12640 N0)))
                          (Ult N0 12640))
                     (Eq false (Ult 12634 N0)))
                (Ult N0 12634))
           (Eq false (Ult 12631 N0)))
      (Eq false (Ult N0 12631)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Eq false (Ult 1581 N0)))
                                    (Ult N0 1581))
                               (Eq false (Ult 1506 N0)))
                          (Ult N0 1506))
                     (Ult 1494 N0))
                (Ult 1500 N0))
           (Ult 1503 N0))
      (Eq false (Ult 1504 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Eq false (Ult 8867 N0)))
                                         (Ult N0 8867))
                                    (Ult 4545 N0))
                               (Ult 8471 N0))
                          (Ult 8728 N0))
                     (Eq false (Ult 8747 N0)))
                (Ult N0 8747))
           (Ult 8744 N0))
      (Ult 8745 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Ult 1066 N0))
                                    (Eq false (Ult 1089 N0)))
                               (Ult N0 1089))
                          (Eq false (Ult 1077 N0)))
                     (Ult N0 1077))
                (Ult 1071 N0))
           (Eq false (Ult 1074 N0)))
      (Eq false (Ult N0 1074)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Ult 12605 N0))
                               (Eq false (Ult 12628 N0)))
                          (Ult N0 12628))
                     (Ult 12616 N0))
                (Ult 12622 N0))
           (Eq false (Ult 12625 N0)))
      (Eq false (Ult N0 12625)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Eq false (Ult 1066 N0)))
                                         (Ult N0 1066))
                                    (Eq false (Ult 1042 N0)))
                               (Ult N0 1042))
                          (Eq false (Ult 1029 N0)))
                     (Ult N0 1029))
                (Ult 973 N0))
           (Eq false (Ult 1026 N0)))
      (Eq false (Ult N0 1026)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Ult 1066 N0))
                               (Eq false (Ult 1089 N0)))
                          (Ult N0 1089))
                     (Ult 1077 N0))
                (Ult 1083 N0))
           (Eq false (Ult 1086 N0)))
      (Eq false (Ult N0 1086)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Eq false (Ult 3650 N0)))
                                    (Ult N0 3650))
                               (Ult 3622 N0))
                          (Eq false (Ult 3634 N0)))
                     (Ult N0 3634))
                (Ult 3628 N0))
           (Eq false (Ult 3631 N0)))
      (Eq false (Ult N0 3631)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Eq false (Ult 1066 N0)))
                                    (Ult N0 1066))
                               (Ult 1042 N0))
                          (Ult 1054 N0))
                     (Eq false (Ult 1060 N0)))
                (Ult N0 1060))
           (Eq false (Ult 1057 N0)))
      (Eq false (Ult N0 1057)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Eq false (Ult 12483 N0)))
                                         (Ult N0 12483))
                                    (Ult 9675 N0))
                               (Eq false (Ult 12443 N0)))
                          (Ult N0 12443))
                     (Ult 9829 N0))
                (Ult 10013 N0))
           (Eq false (Ult 12290 N0)))
      (Eq false (Ult N0 12290)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Eq false (Ult 12483 N0)))
                                         (Ult N0 12483))
                                    (Ult 9675 N0))
                               (Ult 12443 N0))
                          (Ult 12459 N0))
                     (Eq false (Ult 12471 N0)))
                (Ult N0 12471))
           (Eq false (Ult 12465 N0)))
      (Eq false (Ult N0 12465)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Ult 920 N0))
                               (Ult 944 N0))
                          (Ult 956 N0))
                     (Eq false (Ult 962 N0)))
                (Ult N0 962))
           (Eq false (Ult 959 N0)))
      (Eq false (Ult N0 959)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Ult 1066 N0))
                               (Ult 1089 N0))
                          (Ult 1101 N0))
                     (Eq false (Ult 1108 N0)))
                (Ult N0 1108))
           (Ult 1105 N0))
      (Eq false (Ult 1106 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Ult 8471 N0))
                                    (Eq false (Ult 8728 N0)))
                               (Ult N0 8728))
                          (Eq false (Ult 8539 N0)))
                     (Ult N0 8539))
                (Ult 8533 N0))
           (Eq false (Ult 8536 N0)))
      (Eq false (Ult N0 8536)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Eq false (Ult 298 N0)))
                                    (Ult N0 298))
                               (Ult 273 N0))
                          (Eq false (Ult 286 N0)))
                     (Ult N0 286))
                (Ult 280 N0))
           (Eq false (Ult 283 N0)))
      (Eq false (Ult N0 283)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Ult 12605 N0))
                                         (Eq false (Ult 12628 N0)))
                                    (Ult N0 12628))
                               (Eq false (Ult 12616 N0)))
                          (Ult N0 12616))
                     (Eq false (Ult 12610 N0)))
                (Ult N0 12610))
           (Eq false (Ult 12607 N0)))
      (Eq false (Ult N0 12607)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Ult 3650 N0))
                               (Eq false (Ult 4521 N0)))
                          (Ult N0 4521))
                     (Ult 3661 N0))
                (Ult 3669 N0))
           (Eq false (Ult 3672 N0)))
      (Eq false (Ult N0 3672)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Eq false (Ult 8471 N0)))
                                         (Ult N0 8471))
                                    (Eq false (Ult 8224 N0)))
                               (Ult N0 8224))
                          (Ult 8202 N0))
                     (Eq false (Ult 8216 N0)))
                (Ult N0 8216))
           (Eq false (Ult 8212 N0)))
      (Eq false (Ult N0 8212)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Eq false (Ult 298 N0)))
                                    (Ult N0 298))
                               (Ult 273 N0))
                          (Ult 286 N0))
                     (Eq false (Ult 292 N0)))
                (Ult N0 292))
           (Eq false (Ult 289 N0)))
      (Eq false (Ult N0 289)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Eq false (Ult 1114 N0)))
                                    (Ult N0 1114))
                               (Ult 1066 N0))
                          (Ult 1089 N0))
                     (Ult 1101 N0))
                (Ult 1108 N0))
           (Ult 1111 N0))
      (Eq false (Ult 1112 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Eq false (Ult 1581 N0)))
                                    (Ult N0 1581))
                               (Ult 1506 N0))
                          (Eq false (Ult 1569 N0)))
                     (Ult N0 1569))
                (Ult 1512 N0))
           (Eq false (Ult 1548 N0)))
      (Eq false (Ult N0 1548)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Eq false (Ult 8471 N0)))
                                    (Ult N0 8471))
                               (Eq false (Ult 8224 N0)))
                          (Ult N0 8224))
                     (Ult 8202 N0))
                (Ult 8216 N0))
           (Eq false (Ult 8220 N0)))
      (Eq false (Ult N0 8220)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Eq false (Ult 273 N0)))
                               (Ult N0 273))
                          (Eq false (Ult 261 N0)))
                     (Ult N0 261))
                (Ult 175 N0))
           (Eq false (Ult 258 N0)))
      (Eq false (Ult N0 258)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Eq false (Ult 1066 N0)))
                                    (Ult N0 1066))
                               (Ult 1042 N0))
                          (Eq false (Ult 1054 N0)))
                     (Ult N0 1054))
                (Ult 1048 N0))
           (Eq false (Ult 1051 N0)))
      (Eq false (Ult N0 1051)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Eq false (Ult 9492 N0)))
                               (Ult N0 9492))
                          (Ult 9225 N0))
                     (Eq false (Ult 9252 N0)))
                (Ult N0 9252))
           (Eq false (Ult 9228 N0)))
      (Eq false (Ult N0 9228)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Ult 298 N0))
                               (Ult 327 N0))
                          (Ult 342 N0))
                     (Eq false (Ult 348 N0)))
                (Ult N0 348))
           (Eq false (Ult 345 N0)))
      (Eq false (Ult N0 345)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Eq false (Ult 920 N0)))
                                         (Ult N0 920))
                                    (Eq false (Ult 381 N0)))
                               (Ult N0 381))
                          (Eq false (Ult 365 N0)))
                     (Ult N0 365))
                (Ult 359 N0))
           (Eq false (Ult 362 N0)))
      (Eq false (Ult N0 362)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Ult 8471 N0))
                                    (Ult 8728 N0))
                               (Eq false (Ult 8747 N0)))
                          (Ult N0 8747))
                     (Eq false (Ult 8744 N0)))
                (Ult N0 8744))
           (Eq false (Ult 8734 N0)))
      (Eq false (Ult N0 8734)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Ult 9492 N0))
                               (Eq false (Ult 9644 N0)))
                          (Ult N0 9644))
                     (Eq false (Ult 9532 N0)))
                (Ult N0 9532))
           (Eq false (Ult 9508 N0)))
      (Eq false (Ult N0 9508)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Eq false (Ult 8471 N0)))
                                    (Ult N0 8471))
                               (Ult 8224 N0))
                          (Ult 8356 N0))
                     (Eq false (Ult 8361 N0)))
                (Ult N0 8361))
           (Eq false (Ult 8359 N0)))
      (Eq false (Ult N0 8359)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Ult 1581 N0))
                               (Ult 1609 N0))
                          (Ult 3587 N0))
                     (Eq false (Ult 3593 N0)))
                (Ult N0 3593))
           (Ult 3590 N0))
      (Eq false (Ult 3591 N0)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Eq false (Ult 8471 N0)))
                                         (Ult N0 8471))
                                    (Ult 8224 N0))
                               (Eq false (Ult 8356 N0)))
                          (Ult N0 8356))
                     (Eq false (Ult 8248 N0)))
                (Ult N0 8248))
           (Eq false (Ult 8230 N0)))
      (Eq false (Ult N0 8230)))
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Eq false (Ult 920 N0)))
                                         (Ult N0 920))
                                    (Ult 381 N0))
                               (Eq false (Ult 906 N0)))
                          (Ult N0 906))
                     (Eq false (Ult 731 N0)))
                (Ult N0 731))
           (Eq false (Ult 711 N0)))
      (Eq false (Ult N0 711)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Ult 298 N0))
                                    (Ult 327 N0))
                               (Eq false (Ult 342 N0)))
                          (Ult N0 342))
                     (Eq false (Ult 336 N0)))
                (Ult N0 336))
           (Eq false (Ult 331 N0)))
      (Eq false (Ult N0 331)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Eq false (Ult 12519 N0)))
                               (Ult N0 12519))
                          (Ult 12501 N0))
                     (Eq false (Ult 12513 N0)))
                (Ult N0 12513))
           (Eq false (Ult 12510 N0)))
      (Eq false (Ult N0 12510)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Ult 8471 N0))
                                         (Eq false (Ult 8728 N0)))
                                    (Ult N0 8728))
                               (Eq false (Ult 8539 N0)))
                          (Ult N0 8539))
                     (Eq false (Ult 8533 N0)))
                (Ult N0 8533))
           (Eq false (Ult 8482 N0)))
      (Eq false (Ult N0 8482)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Eq false (Ult 298 N0)))
                                    (Ult N0 298))
                               (Eq false (Ult 273 N0)))
                          (Ult N0 273))
                     (Ult 261 N0))
                (Ult 267 N0))
           (Eq false (Ult 270 N0)))
      (Eq false (Ult N0 270)))
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Eq false (Ult 3650 N0)))
                                    (Ult N0 3650))
                               (Eq false (Ult 3622 N0)))
                          (Ult N0 3622))
                     (Ult 3610 N0))
                (Ult 3616 N0))
           (Eq false (Ult 3619 N0)))
      (Eq false (Ult N0 3619)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Eq false (Ult 354 N0)))
                                    (Ult N0 354))
                               (Ult 298 N0))
                          (Ult 327 N0))
                     (Ult 342 N0))
                (Ult 348 N0))
           (Ult 351 N0))
      (Eq false (Ult 352 N0)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Ult 12519 N0))
                               (Eq false (Ult 12593 N0)))
                          (Ult N0 12593))
                     (Eq false (Ult 12525 N0)))
                (Ult N0 12525))
           (Eq false (Ult 12522 N0)))
      (Eq false (Ult N0 12522)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Ult 298 N0))
                                         (Eq false (Ult 327 N0)))
                                    (Ult N0 327))
                               (Eq false (Ult 313 N0)))
                          (Ult N0 313))
                     (Eq false (Ult 305 N0)))
                (Ult N0 305))
           (Eq false (Ult 302 N0)))
      (Eq false (Ult N0 302)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Ult 9492 N0))
                               (Eq false (Ult 9644 N0)))
                          (Ult N0 9644))
                     (Ult 9532 N0))
                (Ult 9633 N0))
           (Eq false (Ult 9642 N0)))
      (Eq false (Ult N0 9642)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Eq false (Ult 4521 N0)))
                               (Ult N0 4521))
                          (Ult 3661 N0))
                     (Eq false (Ult 3669 N0)))
                (Ult N0 3669))
           (Eq false (Ult 3666 N0)))
      (Eq false (Ult N0 3666)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Ult 1506 N0))
                               (Eq false (Ult 1569 N0)))
                          (Ult N0 1569))
                     (Eq false (Ult 1512 N0)))
                (Ult N0 1512))
           (Eq false (Ult 1509 N0)))
      (Eq false (Ult N0 1509)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Ult 8471 N0))
                                    (Eq false (Ult 8728 N0)))
                               (Ult N0 8728))
                          (Ult 8539 N0))
                     (Ult 8594 N0))
                (Eq false (Ult 8660 N0)))
           (Ult N0 8660))
      (Eq false (Ult 8595 N0)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Eq false (Ult 1066 N0)))
                               (Ult N0 1066))
                          (Ult 1042 N0))
                     (Ult 1054 N0))
                (Ult 1060 N0))
           (Ult 1063 N0))
      (Eq false (Ult 1064 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Ult 1066 N0))
                                    (Ult 1089 N0))
                               (Eq false (Ult 1101 N0)))
                          (Ult N0 1101))
                     (Eq false (Ult 1095 N0)))
                (Ult N0 1095))
           (Eq false (Ult 1092 N0)))
      (Eq false (Ult N0 1092)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Eq false (Ult 381 N0)))
                                    (Ult N0 381))
                               (Eq false (Ult 365 N0)))
                          (Ult N0 365))
                     (Eq false (Ult 359 N0)))
                (Ult N0 359))
           (Eq false (Ult 356 N0)))
      (Eq false (Ult N0 356)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Ult 1581 N0))
                               (Eq false (Ult 1609 N0)))
                          (Ult N0 1609))
                     (Ult 1592 N0))
                (Ult 1603 N0))
           (Ult 1606 N0))
      (Eq false (Ult 1607 N0)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Ult 1581 N0))
                                         (Eq false (Ult 1609 N0)))
                                    (Ult N0 1609))
                               (Eq false (Ult 1592 N0)))
                          (Ult N0 1592))
                     (Eq false (Ult 1586 N0)))
                (Ult N0 1586))
           (Eq false (Ult 1583 N0)))
      (Eq false (Ult N0 1583)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Eq false (Ult 298 N0)))
                                    (Ult N0 298))
                               (Ult 273 N0))
                          (Eq false (Ult 286 N0)))
                     (Ult N0 286))
                (Ult 280 N0))
           (Ult 283 N0))
      (Eq false (Ult 284 N0)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Ult 12483 N0))
                                                   (Eq false (Ult 12605 N0)))
                                              (Ult N0 12605))
                                         (Eq false (Ult 12519 N0)))
                                    (Ult N0 12519))
                               (Eq false (Ult 12501 N0)))
                          (Ult N0 12501))
                     (Eq false (Ult 12491 N0)))
                (Ult N0 12491))
           (Eq false (Ult 12486 N0)))
      (Eq false (Ult N0 12486)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Ult 920 N0))
                                    (Ult 944 N0))
                               (Eq false (Ult 956 N0)))
                          (Ult N0 956))
                     (Eq false (Ult 950 N0)))
                (Ult N0 950))
           (Eq false (Ult 947 N0)))
      (Eq false (Ult N0 947)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Eq false (Ult 920 N0)))
                                    (Ult N0 920))
                               (Eq false (Ult 381 N0)))
                          (Ult N0 381))
                     (Ult 365 N0))
                (Ult 371 N0))
           (Ult 378 N0))
      (Eq false (Ult 379 N0)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Eq false (Ult 12628 N0)))
                               (Ult N0 12628))
                          (Ult 12616 N0))
                     (Eq false (Ult 12622 N0)))
                (Ult N0 12622))
           (Eq false (Ult 12619 N0)))
      (Eq false (Ult N0 12619)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Eq false (Ult 4545 N0)))
                                                        (Ult N0 4545))
                                                   (Eq false (Ult 3650 N0)))
                                              (Ult N0 3650))
                                         (Eq false (Ult 3622 N0)))
                                    (Ult N0 3622))
                               (Eq false (Ult 3610 N0)))
                          (Ult N0 3610))
                     (Eq false (Ult 3604 N0)))
                (Ult N0 3604))
           (Eq false (Ult 3601 N0)))
      (Eq false (Ult N0 3601)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Eq false (Ult 3622 N0)))
                               (Ult N0 3622))
                          (Eq false (Ult 3610 N0)))
                     (Ult N0 3610))
                (Ult 3604 N0))
           (Eq false (Ult 3607 N0)))
      (Eq false (Ult N0 3607)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Eq false (Ult 12443 N0)))
                                    (Ult N0 12443))
                               (Eq false (Ult 9829 N0)))
                          (Ult N0 9829))
                     (Eq false (Ult 9747 N0)))
                (Ult N0 9747))
           (Eq false (Ult 9702 N0)))
      (Eq false (Ult N0 9702)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Ult 1066 N0))
                                         (Eq false (Ult 1089 N0)))
                                    (Ult N0 1089))
                               (Eq false (Ult 1077 N0)))
                          (Ult N0 1077))
                     (Eq false (Ult 1071 N0)))
                (Ult N0 1071))
           (Eq false (Ult 1068 N0)))
      (Eq false (Ult N0 1068)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Ult 12605 N0))
                               (Ult 12628 N0))
                          (Eq false (Ult 12640 N0)))
                     (Ult N0 12640))
                (Ult 12634 N0))
           (Eq false (Ult 12637 N0)))
      (Eq false (Ult N0 12637)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Ult 920 N0))
                               (Ult 944 N0))
                          (Eq false (Ult 956 N0)))
                     (Ult N0 956))
                (Ult 950 N0))
           (Ult 953 N0))
      (Eq false (Ult 954 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Eq false (Ult 9492 N0)))
                                    (Ult N0 9492))
                               (Eq false (Ult 9225 N0)))
                          (Ult N0 9225))
                     (Eq false (Ult 8981 N0)))
                (Ult N0 8981))
           (Eq false (Ult 8869 N0)))
      (Eq false (Ult N0 8869)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Ult 3650 N0))
                                         (Eq false (Ult 4521 N0)))
                                    (Ult N0 4521))
                               (Eq false (Ult 3661 N0)))
                          (Ult N0 3661))
                     (Eq false (Ult 3655 N0)))
                (Ult N0 3655))
           (Eq false (Ult 3652 N0)))
      (Eq false (Ult N0 3652)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Eq false (Ult 1114 N0)))
                                                        (Ult N0 1114))
                                                   (Eq false (Ult 1066 N0)))
                                              (Ult N0 1066))
                                         (Eq false (Ult 1042 N0)))
                                    (Ult N0 1042))
                               (Eq false (Ult 1029 N0)))
                          (Ult N0 1029))
                     (Eq false (Ult 973 N0)))
                (Ult N0 973))
           (Eq false (Ult 970 N0)))
      (Eq false (Ult N0 970)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Eq false (Ult 12628 N0)))
                               (Ult N0 12628))
                          (Eq false (Ult 12616 N0)))
                     (Ult N0 12616))
                (Ult 12610 N0))
           (Ult 12613 N0))
      (Eq false (Ult 12614 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Eq false (Ult 298 N0)))
                                    (Ult N0 298))
                               (Eq false (Ult 273 N0)))
                          (Ult N0 273))
                     (Ult 261 N0))
                (Ult 267 N0))
           (Ult 270 N0))
      (Eq false (Ult 271 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Eq false (Ult 3650 N0)))
                               (Ult N0 3650))
                          (Ult 3622 N0))
                     (Ult 3634 N0))
                (Ult 3640 N0))
           (Ult 3647 N0))
      (Eq false (Ult 3648 N0)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Ult 8471 N0))
                                    (Eq false (Ult 8728 N0)))
                               (Ult N0 8728))
                          (Ult 8539 N0))
                     (Ult 8594 N0))
                (Ult 8660 N0))
           (Eq false (Ult 8706 N0)))
      (Eq false (Ult N0 8706)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Ult 12519 N0))
                               (Eq false (Ult 12593 N0)))
                          (Ult N0 12593))
                     (Ult 12525 N0))
                (Ult 12531 N0))
           (Eq false (Ult 12539 N0)))
      (Eq false (Ult N0 12539)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Ult 4545 N0))
                                    (Eq false (Ult 8471 N0)))
                               (Ult N0 8471))
                          (Ult 8224 N0))
                     (Ult 8356 N0))
                (Eq false (Ult 8361 N0)))
           (Ult N0 8361))
      (Ult 8359 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Eq false (Ult 12605 N0)))
                               (Ult N0 12605))
                          (Ult 12519 N0))
                     (Ult 12593 N0))
                (Ult 12599 N0))
           (Ult 12602 N0))
      (Eq false (Ult 12603 N0)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Eq false (Ult 9675 N0)))
                                    (Ult N0 9675))
                               (Ult 9492 N0))
                          (Ult 9644 N0))
                     (Eq false (Ult 9660 N0)))
                (Ult N0 9660))
           (Eq false (Ult 9651 N0)))
      (Eq false (Ult N0 9651)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Ult 12443 N0))
                               (Eq false (Ult 12459 N0)))
                          (Ult N0 12459))
                     (Eq false (Ult 12453 N0)))
                (Ult N0 12453))
           (Eq false (Ult 12450 N0)))
      (Eq false (Ult N0 12450)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Ult 12605 N0))
                               (Ult 12628 N0))
                          (Ult 12640 N0))
                     (Ult 12664 N0))
                (Ult 12678 N0))
           (Eq false (Ult 12685 N0)))
      (Eq false (Ult N0 12685)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Ult 1066 N0))
                               (Eq false (Ult 1089 N0)))
                          (Ult N0 1089))
                     (Ult 1077 N0))
                (Ult 1083 N0))
           (Ult 1086 N0))
      (Eq false (Ult 1087 N0)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Eq false (Ult 12443 N0)))
                               (Ult N0 12443))
                          (Eq false (Ult 9829 N0)))
                     (Ult N0 9829))
                (Ult 9747 N0))
           (Eq false (Ult 9792 N0)))
      (Eq false (Ult N0 9792)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Ult 1114 N0))
                                                   (Eq false (Ult 1581 N0)))
                                              (Ult N0 1581))
                                         (Eq false (Ult 1506 N0)))
                                    (Ult N0 1506))
                               (Eq false (Ult 1494 N0)))
                          (Ult N0 1494))
                     (Eq false (Ult 1488 N0)))
                (Ult N0 1488))
           (Eq false (Ult 1116 N0)))
      (Eq false (Ult N0 1116)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Ult 920 N0))
                                    (Eq false (Ult 944 N0)))
                               (Ult N0 944))
                          (Ult 932 N0))
                     (Eq false (Ult 938 N0)))
                (Ult N0 938))
           (Ult 935 N0))
      (Eq false (Ult 936 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Eq false (Ult 1581 N0)))
                                    (Ult N0 1581))
                               (Ult 1506 N0))
                          (Ult 1569 N0))
                     (Ult 1575 N0))
                (Eq false (Ult 1578 N0)))
           (Ult N0 1578))
      (Eq false (Ult 1576 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Ult 8471 N0))
                                    (Eq false (Ult 8728 N0)))
                               (Ult N0 8728))
                          (Ult 8539 N0))
                     (Ult 8594 N0))
                (Ult 8660 N0))
           (Eq false (Ult 8706 N0)))
      (Ult N0 8706))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Eq false (Ult 3622 N0)))
                               (Ult N0 3622))
                          (Ult 3610 N0))
                     (Eq false (Ult 3616 N0)))
                (Ult N0 3616))
           (Eq false (Ult 3613 N0)))
      (Eq false (Ult N0 3613)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Ult 273 N0))
                               (Eq false (Ult 286 N0)))
                          (Ult N0 286))
                     (Eq false (Ult 280 N0)))
                (Ult N0 280))
           (Eq false (Ult 275 N0)))
      (Eq false (Ult N0 275)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Eq false (Ult 8471 N0)))
                                    (Ult N0 8471))
                               (Ult 8224 N0))
                          (Ult 8356 N0))
                     (Ult 8361 N0))
                (Ult 8364 N0))
           (Eq false (Ult 8453 N0)))
      (Eq false (Ult N0 8453)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Eq false (Ult 1581 N0)))
                               (Ult N0 1581))
                          (Ult 1506 N0))
                     (Ult 1569 N0))
                (Ult 1575 N0))
           (Ult 1578 N0))
      (Eq false (Ult 1579 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Ult 12628 N0))
                               (Ult 12640 N0))
                          (Eq false (Ult 12664 N0)))
                     (Ult N0 12664))
                (Ult 12643 N0))
           (Eq false (Ult 12653 N0)))
      (Eq false (Ult N0 12653)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Ult 12443 N0))
                               (Ult 12459 N0))
                          (Eq false (Ult 12471 N0)))
                     (Ult N0 12471))
                (Ult 12465 N0))
           (Eq false (Ult 12467 N0)))
      (Eq false (Ult N0 12467)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Ult 12605 N0))
                                         (Eq false (Ult 12628 N0)))
                                    (Ult N0 12628))
                               (Eq false (Ult 12616 N0)))
                          (Ult N0 12616))
                     (Eq false (Ult 12610 N0)))
                (Ult N0 12610))
           (Ult 12607 N0))
      (Eq false (Ult 12608 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Ult 1066 N0))
                                    (Eq false (Ult 1089 N0)))
                               (Ult N0 1089))
                          (Ult 1077 N0))
                     (Eq false (Ult 1083 N0)))
                (Ult N0 1083))
           (Ult 1080 N0))
      (Eq false (Ult 1081 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Ult 968 N0))
                                    (Ult 1114 N0))
                               (Ult 1581 N0))
                          (Ult 1609 N0))
                     (Ult 3587 N0))
                (Ult 3593 N0))
           (Ult 3596 N0))
      (Eq false (Ult 3597 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Ult 920 N0))
                                         (Eq false (Ult 944 N0)))
                                    (Ult N0 944))
                               (Eq false (Ult 932 N0)))
                          (Ult N0 932))
                     (Eq false (Ult 925 N0)))
                (Ult N0 925))
           (Eq false (Ult 922 N0)))
      (Eq false (Ult N0 922)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Ult 298 N0))
                                    (Eq false (Ult 327 N0)))
                               (Ult N0 327))
                          (Ult 313 N0))
                     (Eq false (Ult 321 N0)))
                (Ult N0 321))
           (Eq false (Ult 316 N0)))
      (Eq false (Ult N0 316)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Ult 3622 N0))
                               (Eq false (Ult 3634 N0)))
                          (Ult N0 3634))
                     (Eq false (Ult 3628 N0)))
                (Ult N0 3628))
           (Eq false (Ult 3625 N0)))
      (Eq false (Ult N0 3625)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Ult 12605 N0))
                                         (Eq false (Ult 12628 N0)))
                                    (Ult N0 12628))
                               (Eq false (Ult 12616 N0)))
                          (Ult N0 12616))
                     (Eq false (Ult 12610 N0)))
                (Ult N0 12610))
           (Eq false (Ult 12607 N0)))
      (Ult N0 12607))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Eq false (Ult 8471 N0)))
                                    (Ult N0 8471))
                               (Eq false (Ult 8224 N0)))
                          (Ult N0 8224))
                     (Ult 8202 N0))
                (Ult 8216 N0))
           (Ult 8220 N0))
      (Eq false (Ult 8221 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Ult 920 N0))
                               (Eq false (Ult 944 N0)))
                          (Ult N0 944))
                     (Ult 932 N0))
                (Ult 938 N0))
           (Ult 941 N0))
      (Eq false (Ult 942 N0)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [88]




########## Now building the constraint system ##########



########## after path processing, constraint size 7 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Eq false (Ult 4545 N0)))
                                    (Ult N0 4545))
                               (Ult 3650 N0))
                          (Ult 4521 N0))
                     (Ult 4533 N0))
                (Ult 4539 N0))
           (Ult 4542 N0))
      (Ult 4543 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Ult 3650 N0))
                               (Ult 4521 N0))
                          (Ult 4533 N0))
                     (Ult 4539 N0))
                (Eq false (Ult 4542 N0)))
           (Ult N0 4542))
      (Eq false (Ult 4540 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Eq false (Ult 12483 N0)))
                                         (Ult N0 12483))
                                    (Ult 9675 N0))
                               (Ult 12443 N0))
                          (Eq false (Ult 12459 N0)))
                     (Ult N0 12459))
                (Ult 12453 N0))
           (Ult 12456 N0))
      (Eq false (Ult 12457 N0)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Eq false (Ult 4521 N0)))
                               (Ult N0 4521))
                          (Eq false (Ult 3661 N0)))
                     (Ult N0 3661))
                (Ult 3655 N0))
           (Ult 3658 N0))
      (Eq false (Ult 3659 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Ult 12605 N0))
                               (Eq false (Ult 12628 N0)))
                          (Ult N0 12628))
                     (Ult 12616 N0))
                (Ult 12622 N0))
           (Ult 12625 N0))
      (Eq false (Ult 12626 N0)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Ult 298 N0))
                               (Ult 327 N0))
                          (Ult 342 N0))
                     (Eq false (Ult 348 N0)))
                (Ult N0 348))
           (Ult 345 N0))
      (Eq false (Ult 346 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Eq false (Ult 3650 N0)))
                                    (Ult N0 3650))
                               (Eq false (Ult 3622 N0)))
                          (Ult N0 3622))
                     (Ult 3610 N0))
                (Ult 3616 N0))
           (Ult 3619 N0))
      (Eq false (Ult 3620 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Eq false (Ult 920 N0)))
                                    (Ult N0 920))
                               (Ult 381 N0))
                          (Ult 906 N0))
                     (Eq false (Ult 914 N0)))
                (Ult N0 914))
           (Ult 911 N0))
      (Eq false (Ult 912 N0)))
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Eq false (Ult 12605 N0)))
                                    (Ult N0 12605))
                               (Ult 12519 N0))
                          (Ult 12593 N0))
                     (Eq false (Ult 12599 N0)))
                (Ult N0 12599))
           (Ult 12596 N0))
      (Eq false (Ult 12597 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Ult 12628 N0))
                               (Eq false (Ult 12640 N0)))
                          (Ult N0 12640))
                     (Eq false (Ult 12634 N0)))
                (Ult N0 12634))
           (Ult 12631 N0))
      (Eq false (Ult 12632 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Ult 298 N0))
                               (Ult 327 N0))
                          (Eq false (Ult 342 N0)))
                     (Ult N0 342))
                (Ult 336 N0))
           (Ult 339 N0))
      (Eq false (Ult 340 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Eq false (Ult 8224 N0)))
                                    (Ult N0 8224))
                               (Eq false (Ult 8202 N0)))
                          (Ult N0 8202))
                     (Eq false (Ult 8195 N0)))
                (Ult N0 8195))
           (Eq false (Ult 4587 N0)))
      (Eq false (Ult N0 4587)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Eq false (Ult 12605 N0)))
                                    (Ult N0 12605))
                               (Ult 12519 N0))
                          (Ult 12593 N0))
                     (Ult 12599 N0))
                (Eq false (Ult 12602 N0)))
           (Ult N0 12602))
      (Eq false (Ult 12600 N0)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Eq false (Ult 298 N0)))
                                    (Ult N0 298))
                               (Ult 273 N0))
                          (Ult 286 N0))
                     (Eq false (Ult 292 N0)))
                (Ult N0 292))
           (Ult 289 N0))
      (Eq false (Ult 290 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Eq false (Ult 273 N0)))
                               (Ult N0 273))
                          (Ult 261 N0))
                     (Eq false (Ult 267 N0)))
                (Ult N0 267))
           (Eq false (Ult 264 N0)))
      (Eq false (Ult N0 264)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Eq false (Ult 968 N0)))
                                         (Ult N0 968))
                                    (Ult 354 N0))
                               (Ult 920 N0))
                          (Ult 944 N0))
                     (Ult 956 N0))
                (Ult 962 N0))
           (Ult 965 N0))
      (Eq false (Ult 966 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Eq false (Ult 9675 N0)))
                                    (Ult N0 9675))
                               (Ult 9492 N0))
                          (Ult 9644 N0))
                     (Ult 9660 N0))
                (Ult 9665 N0))
           (Eq false (Ult 9670 N0)))
      (Eq false (Ult N0 9670)))
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Ult 298 N0))
                               (Ult 327 N0))
                          (Ult 342 N0))
                     (Ult 348 N0))
                (Eq false (Ult 351 N0)))
           (Ult N0 351))
      (Eq false (Ult 349 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Ult 4545 N0))
                                    (Ult 8471 N0))
                               (Ult 8728 N0))
                          (Ult 8747 N0))
                     (Ult 8805 N0))
                (Eq false (Ult 8835 N0)))
           (Ult N0 8835))
      (Eq false (Ult N0 8834)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [88]




########## Now building the constraint system ##########



########## after path processing, constraint size 7 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Eq false (Ult 1114 N0)))
                                    (Ult N0 1114))
                               (Ult 1066 N0))
                          (Ult 1089 N0))
                     (Ult 1101 N0))
                (Ult 1108 N0))
           (Ult 1111 N0))
      (Ult 1112 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Eq false (Ult 12628 N0)))
                               (Ult N0 12628))
                          (Ult 12616 N0))
                     (Eq false (Ult 12622 N0)))
                (Ult N0 12622))
           (Ult 12619 N0))
      (Eq false (Ult 12620 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Eq false (Ult 8471 N0)))
                                    (Ult N0 8471))
                               (Ult 8224 N0))
                          (Ult 8356 N0))
                     (Ult 8361 N0))
                (Ult 8364 N0))
           (Eq false (Ult 8453 N0)))
      (Ult N0 8453))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Eq false (Ult 1581 N0)))
                                    (Ult N0 1581))
                               (Ult 1506 N0))
                          (Ult 1569 N0))
                     (Eq false (Ult 1575 N0)))
                (Ult N0 1575))
           (Ult 1572 N0))
      (Eq false (Ult 1573 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Eq false (Ult 920 N0)))
                               (Ult N0 920))
                          (Ult 381 N0))
                     (Ult 906 N0))
                (Ult 914 N0))
           (Ult 917 N0))
      (Eq false (Ult 918 N0)))
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Eq false (Ult 12605 N0)))
                                    (Ult N0 12605))
                               (Eq false (Ult 12519 N0)))
                          (Ult N0 12519))
                     (Ult 12501 N0))
                (Ult 12513 N0))
           (Ult 12516 N0))
      (Eq false (Ult 12517 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Ult 298 N0))
                                    (Ult 327 N0))
                               (Eq false (Ult 342 N0)))
                          (Ult N0 342))
                     (Eq false (Ult 336 N0)))
                (Ult N0 336))
           (Ult 331 N0))
      (Eq false (Ult 332 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Ult 1609 N0))
                               (Eq false (Ult 3587 N0)))
                          (Ult N0 3587))
                     (Ult 1615 N0))
                (Ult 1618 N0))
           (Eq false (Ult 3585 N0)))
      (Ult N0 3585))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Eq false (Ult 12519 N0)))
                               (Ult N0 12519))
                          (Eq false (Ult 12501 N0)))
                     (Ult N0 12501))
                (Ult 12491 N0))
           (Ult 12494 N0))
      (Eq false (Ult 12495 N0)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Ult 4545 N0))
                                    (Ult 8471 N0))
                               (Ult 8728 N0))
                          (Ult 8747 N0))
                     (Eq false (Ult 8805 N0)))
                (Ult N0 8805))
           (Ult 8800 N0))
      (Eq false (Ult 8801 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Eq false (Ult 9675 N0)))
                                    (Ult N0 9675))
                               (Ult 9492 N0))
                          (Ult 9644 N0))
                     (Ult 9660 N0))
                (Eq false (Ult 9665 N0)))
           (Ult N0 9665))
      (Eq false (Ult 9661 N0)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Ult 1506 N0))
                               (Eq false (Ult 1569 N0)))
                          (Ult N0 1569))
                     (Ult 1512 N0))
                (Ult 1548 N0))
           (Eq false (Ult 1563 N0)))
      (Eq false (Ult N0 1563)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Ult 1066 N0))
                                    (Ult 1089 N0))
                               (Eq false (Ult 1101 N0)))
                          (Ult N0 1101))
                     (Eq false (Ult 1095 N0)))
                (Ult N0 1095))
           (Ult 1092 N0))
      (Eq false (Ult 1093 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Ult 4521 N0))
                               (Eq false (Ult 4533 N0)))
                          (Ult N0 4533))
                     (Eq false (Ult 4527 N0)))
                (Ult N0 4527))
           (Eq false (Ult 4524 N0)))
      (Eq false (Ult N0 4524)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Ult 920 N0))
                               (Eq false (Ult 944 N0)))
                          (Ult N0 944))
                     (Ult 932 N0))
                (Ult 938 N0))
           (Ult 941 N0))
      (Ult 942 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Eq false (Ult 1066 N0)))
                                         (Ult N0 1066))
                                    (Ult 1042 N0))
                               (Eq false (Ult 1054 N0)))
                          (Ult N0 1054))
                     (Eq false (Ult 1048 N0)))
                (Ult N0 1048))
           (Eq false (Ult 1045 N0)))
      (Eq false (Ult N0 1045)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Ult 12519 N0))
                               (Ult 12593 N0))
                          (Eq false (Ult 12599 N0)))
                     (Ult N0 12599))
                (Eq false (Ult 12596 N0)))
           (Ult N0 12596))
      (Eq false (Ult 12594 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Eq false (Ult 1609 N0)))
                               (Ult N0 1609))
                          (Ult 1592 N0))
                     (Ult 1603 N0))
                (Eq false (Ult 1606 N0)))
           (Ult N0 1606))
      (Eq false (Ult 1604 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Eq false (Ult 4521 N0)))
                               (Ult N0 4521))
                          (Ult 3661 N0))
                     (Ult 3669 N0))
                (Eq false (Ult 3672 N0)))
           (Ult N0 3672))
      (Eq false (Ult 3670 N0)))
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Ult 8471 N0))
                                    (Ult 8728 N0))
                               (Eq false (Ult 8747 N0)))
                          (Ult N0 8747))
                     (Eq false (Ult 8744 N0)))
                (Ult N0 8744))
           (Ult 8734 N0))
      (Eq false (Ult N0 8743)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Eq false (Ult 1609 N0)))
                               (Ult N0 1609))
                          (Ult 1592 N0))
                     (Eq false (Ult 1603 N0)))
                (Ult N0 1603))
           (Ult 1600 N0))
      (Eq false (Ult 1601 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Eq false (Ult 1609 N0)))
                               (Ult N0 1609))
                          (Eq false (Ult 1592 N0)))
                     (Ult N0 1592))
                (Ult 1586 N0))
           (Ult 1589 N0))
      (Eq false (Ult 1590 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Ult 920 N0))
                               (Ult 944 N0))
                          (Ult 956 N0))
                     (Eq false (Ult 962 N0)))
                (Ult N0 962))
           (Ult 959 N0))
      (Eq false (Ult 960 N0)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [78]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Eq false (Ult 3650 N0)))
                               (Ult N0 3650))
                          (Ult 3622 N0))
                     (Ult 3634 N0))
                (Ult 3640 N0))
           (Ult 3647 N0))
      (Ult 3648 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Ult 1581 N0))
                               (Ult 1609 N0))
                          (Ult 3587 N0))
                     (Ult 3593 N0))
                (Eq false (Ult 3596 N0)))
           (Ult N0 3596))
      (Eq false (Ult 3594 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Ult 298 N0))
                               (Eq false (Ult 327 N0)))
                          (Ult N0 327))
                     (Ult 313 N0))
                (Ult 321 N0))
           (Ult 324 N0))
      (Eq false (Ult 325 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Eq false (Ult 12483 N0)))
                                         (Ult N0 12483))
                                    (Ult 9675 N0))
                               (Ult 12443 N0))
                          (Ult 12459 N0))
                     (Ult 12471 N0))
                (Ult 12477 N0))
           (Eq false (Ult 12479 N0)))
      (Eq false (Ult N0 12479)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Eq false (Ult 9492 N0)))
                               (Ult N0 9492))
                          (Eq false (Ult 9225 N0)))
                     (Ult N0 9225))
                (Ult 8981 N0))
           (Ult 9001 N0))
      (Eq false (Ult 9002 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Ult 1066 N0))
                               (Ult 1089 N0))
                          (Eq false (Ult 1101 N0)))
                     (Ult N0 1101))
                (Ult 1095 N0))
           (Ult 1098 N0))
      (Eq false (Ult 1099 N0)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Eq false (Ult 3650 N0)))
                                    (Ult N0 3650))
                               (Ult 3622 N0))
                          (Ult 3634 N0))
                     (Eq false (Ult 3640 N0)))
                (Ult N0 3640))
           (Ult 3637 N0))
      (Eq false (Ult 3638 N0)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Ult 1066 N0))
                                    (Eq false (Ult 1089 N0)))
                               (Ult N0 1089))
                          (Ult 1077 N0))
                     (Ult 1083 N0))
                (Eq false (Ult 1086 N0)))
           (Ult N0 1086))
      (Eq false (Ult 1084 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [78]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Eq false (Ult 12605 N0)))
                               (Ult N0 12605))
                          (Ult 12519 N0))
                     (Ult 12593 N0))
                (Ult 12599 N0))
           (Ult 12602 N0))
      (Ult 12603 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Ult 1609 N0))
                               (Eq false (Ult 3587 N0)))
                          (Ult N0 3587))
                     (Eq false (Ult 1615 N0)))
                (Ult N0 1615))
           (Ult 1612 N0))
      (Eq false (Ult 1613 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Ult 920 N0))
                                    (Eq false (Ult 944 N0)))
                               (Ult N0 944))
                          (Ult 932 N0))
                     (Ult 938 N0))
                (Eq false (Ult 941 N0)))
           (Ult N0 941))
      (Eq false (Ult 939 N0)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Eq false (Ult 920 N0)))
                                         (Ult N0 920))
                                    (Eq false (Ult 381 N0)))
                               (Ult N0 381))
                          (Ult 365 N0))
                     (Eq false (Ult 371 N0)))
                (Ult N0 371))
           (Eq false (Ult 368 N0)))
      (Eq false (Ult N0 368)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Ult 3650 N0))
                               (Ult 4521 N0))
                          (Eq false (Ult 4533 N0)))
                     (Ult N0 4533))
                (Ult 4527 N0))
           (Ult 4530 N0))
      (Eq false (Ult 4531 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Ult 1114 N0))
                                                   (Eq false (Ult 1581 N0)))
                                              (Ult N0 1581))
                                         (Eq false (Ult 1506 N0)))
                                    (Ult N0 1506))
                               (Ult 1494 N0))
                          (Eq false (Ult 1500 N0)))
                     (Ult N0 1500))
                (Eq false (Ult 1497 N0)))
           (Ult N0 1497))
      (Eq false (Ult 1495 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Eq false (Ult 3650 N0)))
                                    (Ult N0 3650))
                               (Ult 3622 N0))
                          (Ult 3634 N0))
                     (Ult 3640 N0))
                (Eq false (Ult 3647 N0)))
           (Ult N0 3647))
      (Eq false (Ult 3641 N0)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Eq false (Ult 8471 N0)))
                                         (Ult N0 8471))
                                    (Eq false (Ult 8224 N0)))
                               (Ult N0 8224))
                          (Eq false (Ult 8202 N0)))
                     (Ult N0 8202))
                (Ult 8195 N0))
           (Ult 8199 N0))
      (Eq false (Ult 8200 N0)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Ult 8471 N0))
                                         (Eq false (Ult 8728 N0)))
                                    (Ult N0 8728))
                               (Ult 8539 N0))
                          (Eq false (Ult 8594 N0)))
                     (Ult N0 8594))
                (Ult 8542 N0))
           (Eq false (Ult 8592 N0)))
      (Eq false (Ult N0 8592)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Ult 298 N0))
                                    (Eq false (Ult 327 N0)))
                               (Ult N0 327))
                          (Ult 313 N0))
                     (Ult 321 N0))
                (Eq false (Ult 324 N0)))
           (Ult N0 324))
      (Eq false (Ult 322 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Ult 8471 N0))
                                    (Ult 8728 N0))
                               (Eq false (Ult 8747 N0)))
                          (Ult N0 8747))
                     (Eq false (Ult 8744 N0)))
                (Ult N0 8744))
           (Ult 8734 N0))
      (Ult N0 8743))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Ult 9492 N0))
                               (Eq false (Ult 9644 N0)))
                          (Ult N0 9644))
                     (Ult 9532 N0))
                (Ult 9633 N0))
           (Eq false (Ult 9642 N0)))
      (Ult N0 9642))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Ult 3622 N0))
                               (Eq false (Ult 3634 N0)))
                          (Ult N0 3634))
                     (Eq false (Ult 3628 N0)))
                (Ult N0 3628))
           (Ult 3625 N0))
      (Eq false (Ult 3626 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Ult 1506 N0))
                               (Eq false (Ult 1569 N0)))
                          (Ult N0 1569))
                     (Eq false (Ult 1512 N0)))
                (Ult N0 1512))
           (Ult 1509 N0))
      (Eq false (Ult 1510 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Eq false (Ult 3650 N0)))
                                    (Ult N0 3650))
                               (Ult 3622 N0))
                          (Eq false (Ult 3634 N0)))
                     (Ult N0 3634))
                (Ult 3628 N0))
           (Ult 3631 N0))
      (Eq false (Ult 3632 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Eq false (Ult 9492 N0)))
                                         (Ult N0 9492))
                                    (Eq false (Ult 9225 N0)))
                               (Ult N0 9225))
                          (Eq false (Ult 8981 N0)))
                     (Ult N0 8981))
                (Ult 8869 N0))
           (Eq false (Ult 8968 N0)))
      (Eq false (Ult N0 8968)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Eq false (Ult 9675 N0)))
                                    (Ult N0 9675))
                               (Ult 9492 N0))
                          (Ult 9644 N0))
                     (Ult 9660 N0))
                (Ult 9665 N0))
           (Eq false (Ult 9670 N0)))
      (Ult N0 9670))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Eq false (Ult 1066 N0)))
                                         (Ult N0 1066))
                                    (Eq false (Ult 1042 N0)))
                               (Ult N0 1042))
                          (Ult 1029 N0))
                     (Eq false (Ult 1035 N0)))
                (Ult N0 1035))
           (Ult 1032 N0))
      (Eq false (Ult 1033 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Ult 298 N0))
                                    (Eq false (Ult 327 N0)))
                               (Ult N0 327))
                          (Eq false (Ult 313 N0)))
                     (Ult N0 313))
                (Ult 305 N0))
           (Ult 310 N0))
      (Eq false (Ult 311 N0)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [31]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Eq false (Ult 8867 N0)))
                                              (Ult N0 8867))
                                         (Ult 4545 N0))
                                    (Ult 8471 N0))
                               (Ult 8728 N0))
                          (Ult 8747 N0))
                     (Ult 8805 N0))
                (Eq false (Ult 8835 N0)))
           (Ult N0 8835))
      (Ult N0 8834))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Eq false (Ult 12483 N0)))
                                         (Ult N0 12483))
                                    (Ult 9675 N0))
                               (Ult 12443 N0))
                          (Ult 12459 N0))
                     (Ult 12471 N0))
                (Ult 12477 N0))
           (Eq false (Ult 12479 N0)))
      (Ult N0 12479))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Ult 12605 N0))
                                         (Eq false (Ult 12628 N0)))
                                    (Ult N0 12628))
                               (Eq false (Ult 12616 N0)))
                          (Ult N0 12616))
                     (Eq false (Ult 12610 N0)))
                (Ult N0 12610))
           (Ult 12607 N0))
      (Ult 12608 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Eq false (Ult 1114 N0)))
                                                        (Ult N0 1114))
                                                   (Eq false (Ult 1066 N0)))
                                              (Ult N0 1066))
                                         (Eq false (Ult 1042 N0)))
                                    (Ult N0 1042))
                               (Ult 1029 N0))
                          (Eq false (Ult 1035 N0)))
                     (Ult N0 1035))
                (Eq false (Ult 1032 N0)))
           (Ult N0 1032))
      (Eq false (Ult 1030 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Ult 1506 N0))
                               (Eq false (Ult 1569 N0)))
                          (Ult N0 1569))
                     (Ult 1512 N0))
                (Ult 1548 N0))
           (Eq false (Ult 1563 N0)))
      (Ult N0 1563))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Eq false (Ult 8471 N0)))
                                    (Ult N0 8471))
                               (Ult 8224 N0))
                          (Eq false (Ult 8356 N0)))
                     (Ult N0 8356))
                (Ult 8248 N0))
           (Ult 8353 N0))
      (Eq false (Ult 8354 N0)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Eq false (Ult 1066 N0)))
                                    (Ult N0 1066))
                               (Eq false (Ult 1042 N0)))
                          (Ult N0 1042))
                     (Ult 1029 N0))
                (Ult 1035 N0))
           (Ult 1039 N0))
      (Eq false (Ult 1040 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Eq false (Ult 273 N0)))
                               (Ult N0 273))
                          (Eq false (Ult 261 N0)))
                     (Ult N0 261))
                (Ult 175 N0))
           (Ult 258 N0))
      (Eq false (Ult 259 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Eq false (Ult 8471 N0)))
                                         (Ult N0 8471))
                                    (Eq false (Ult 8224 N0)))
                               (Ult N0 8224))
                          (Ult 8202 N0))
                     (Eq false (Ult 8216 N0)))
                (Ult N0 8216))
           (Ult 8212 N0))
      (Eq false (Ult 8213 N0)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Ult 1581 N0))
                                         (Ult 1609 N0))
                                    (Eq false (Ult 3587 N0)))
                               (Ult N0 3587))
                          (Eq false (Ult 1615 N0)))
                     (Ult N0 1615))
                (Eq false (Ult 1612 N0)))
           (Ult N0 1612))
      (Eq false (Ult 1610 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Ult 1066 N0))
                               (Eq false (Ult 1089 N0)))
                          (Ult N0 1089))
                     (Ult 1077 N0))
                (Ult 1083 N0))
           (Ult 1086 N0))
      (Ult 1087 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [88]




########## Now building the constraint system ##########



########## after path processing, constraint size 7 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Eq false (Ult 354 N0)))
                                    (Ult N0 354))
                               (Ult 298 N0))
                          (Ult 327 N0))
                     (Ult 342 N0))
                (Ult 348 N0))
           (Ult 351 N0))
      (Ult 352 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Ult 12605 N0))
                               (Ult 12628 N0))
                          (Eq false (Ult 12640 N0)))
                     (Ult N0 12640))
                (Ult 12634 N0))
           (Ult 12637 N0))
      (Eq false (Ult 12638 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Ult 8471 N0))
                                    (Eq false (Ult 8728 N0)))
                               (Ult N0 8728))
                          (Eq false (Ult 8539 N0)))
                     (Ult N0 8539))
                (Ult 8533 N0))
           (Ult 8536 N0))
      (Eq false (Ult 8537 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Ult 920 N0))
                                    (Ult 944 N0))
                               (Ult 956 N0))
                          (Eq false (Ult 962 N0)))
                     (Ult N0 962))
                (Eq false (Ult 959 N0)))
           (Ult N0 959))
      (Eq false (Ult 957 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Ult 1066 N0))
                               (Ult 1089 N0))
                          (Ult 1101 N0))
                     (Ult 1108 N0))
                (Eq false (Ult 1111 N0)))
           (Ult N0 1111))
      (Eq false (Ult 1109 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Ult 1066 N0))
                                    (Ult 1089 N0))
                               (Eq false (Ult 1101 N0)))
                          (Ult N0 1101))
                     (Ult 1095 N0))
                (Eq false (Ult 1098 N0)))
           (Ult N0 1098))
      (Eq false (Ult 1096 N0)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Ult 3650 N0))
                               (Ult 4521 N0))
                          (Ult 4533 N0))
                     (Ult 4539 N0))
                (Eq false (Ult 4542 N0)))
           (Ult N0 4542))
      (Ult 4540 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Ult 12605 N0))
                               (Ult 12628 N0))
                          (Ult 12640 N0))
                     (Ult 12664 N0))
                (Ult 12678 N0))
           (Eq false (Ult 12685 N0)))
      (Ult N0 12685))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Eq false (Ult 1066 N0)))
                                         (Ult N0 1066))
                                    (Eq false (Ult 1042 N0)))
                               (Ult N0 1042))
                          (Eq false (Ult 1029 N0)))
                     (Ult N0 1029))
                (Ult 973 N0))
           (Ult 1026 N0))
      (Eq false (Ult 1027 N0)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Ult 1609 N0))
                               (Eq false (Ult 3587 N0)))
                          (Ult N0 3587))
                     (Ult 1615 N0))
                (Eq false (Ult 1618 N0)))
           (Ult N0 1618))
      (Eq false (Ult 1616 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Ult 12605 N0))
                                         (Eq false (Ult 12628 N0)))
                                    (Ult N0 12628))
                               (Eq false (Ult 12616 N0)))
                          (Ult N0 12616))
                     (Ult 12610 N0))
                (Eq false (Ult 12613 N0)))
           (Ult N0 12613))
      (Eq false (Ult 12611 N0)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [114]




########## Now building the constraint system ##########



########## after path processing, constraint size 10 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Ult 12605 N0))
                               (Ult 12628 N0))
                          (Ult 12640 N0))
                     (Ult 12664 N0))
                (Ult 12678 N0))
           (Ult 12685 N0))
      (Ult 12686 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Eq false (Ult 1506 N0)))
                               (Ult N0 1506))
                          (Ult 1494 N0))
                     (Ult 1500 N0))
                (Eq false (Ult 1503 N0)))
           (Ult N0 1503))
      (Eq false (Ult 1501 N0)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Ult 1581 N0))
                               (Eq false (Ult 1609 N0)))
                          (Ult N0 1609))
                     (Ult 1592 N0))
                (Ult 1603 N0))
           (Ult 1606 N0))
      (Ult 1607 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Ult 4521 N0))
                               (Eq false (Ult 4533 N0)))
                          (Ult N0 4533))
                     (Eq false (Ult 4527 N0)))
                (Ult N0 4527))
           (Ult 4524 N0))
      (Eq false (Ult 4525 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Ult 1609 N0))
                               (Eq false (Ult 3587 N0)))
                          (Ult N0 3587))
                     (Ult 1615 N0))
                (Ult 1618 N0))
           (Eq false (Ult 3585 N0)))
      (Eq false (Ult N0 3585)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Eq false (Ult 1506 N0)))
                               (Ult N0 1506))
                          (Ult 1494 N0))
                     (Eq false (Ult 1500 N0)))
                (Ult N0 1500))
           (Ult 1497 N0))
      (Eq false (Ult 1498 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [31]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Eq false (Ult 298 N0)))
                                    (Ult N0 298))
                               (Eq false (Ult 273 N0)))
                          (Ult N0 273))
                     (Eq false (Ult 261 N0)))
                (Ult N0 261))
           (Eq false (Ult 175 N0)))
      (Eq false (Ult 60 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Ult 12519 N0))
                               (Eq false (Ult 12593 N0)))
                          (Ult N0 12593))
                     (Ult 12525 N0))
                (Ult 12531 N0))
           (Eq false (Ult 12539 N0)))
      (Ult N0 12539))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Eq false (Ult 9492 N0)))
                               (Ult N0 9492))
                          (Ult 9225 N0))
                     (Eq false (Ult 9252 N0)))
                (Ult N0 9252))
           (Ult 9228 N0))
      (Eq false (Ult 9229 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Ult 12443 N0))
                               (Ult 12459 N0))
                          (Eq false (Ult 12471 N0)))
                     (Ult N0 12471))
                (Ult 12465 N0))
           (Eq false (Ult 12467 N0)))
      (Ult N0 12467))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Eq false (Ult 968 N0)))
                                                                  (Ult N0 968))
                                                             (Eq false (Ult 354 N0)))
                                                        (Ult N0 354))
                                                   (Ult 298 N0))
                                              (Eq false (Ult 327 N0)))
                                         (Ult N0 327))
                                    (Eq false (Ult 313 N0)))
                               (Ult N0 313))
                          (Ult 305 N0))
                     (Eq false (Ult 310 N0)))
                (Ult N0 310))
           (Eq false (Ult 308 N0)))
      (Eq false (Ult N0 308)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Eq false (Ult 1066 N0)))
                                    (Ult N0 1066))
                               (Ult 1042 N0))
                          (Ult 1054 N0))
                     (Eq false (Ult 1060 N0)))
                (Ult N0 1060))
           (Ult 1057 N0))
      (Eq false (Ult 1058 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Eq false (Ult 12443 N0)))
                               (Ult N0 12443))
                          (Ult 9829 N0))
                     (Ult 10013 N0))
                (Ult 12290 N0))
           (Eq false (Ult 12300 N0)))
      (Eq false (Ult N0 12300)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Eq false (Ult 9492 N0)))
                                         (Ult N0 9492))
                                    (Eq false (Ult 9225 N0)))
                               (Ult N0 9225))
                          (Eq false (Ult 8981 N0)))
                     (Ult N0 8981))
                (Ult 8869 N0))
           (Eq false (Ult 8968 N0)))
      (Ult N0 8968))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Ult 12443 N0))
                               (Eq false (Ult 12459 N0)))
                          (Ult N0 12459))
                     (Eq false (Ult 12453 N0)))
                (Ult N0 12453))
           (Ult 12450 N0))
      (Eq false (Ult 12451 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Ult 3650 N0))
                               (Ult 4521 N0))
                          (Ult 4533 N0))
                     (Eq false (Ult 4539 N0)))
                (Ult N0 4539))
           (Ult 4536 N0))
      (Eq false (Ult 4537 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Ult 12628 N0))
                               (Ult 12640 N0))
                          (Eq false (Ult 12664 N0)))
                     (Ult N0 12664))
                (Eq false (Ult 12643 N0)))
           (Ult N0 12643))
      (Eq false (Ult 12641 N0)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Ult 1066 N0))
                               (Ult 1089 N0))
                          (Ult 1101 N0))
                     (Eq false (Ult 1108 N0)))
                (Ult N0 1108))
           (Ult 1105 N0))
      (Ult 1106 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Ult 298 N0))
                                         (Eq false (Ult 327 N0)))
                                    (Ult N0 327))
                               (Eq false (Ult 313 N0)))
                          (Ult N0 313))
                     (Eq false (Ult 305 N0)))
                (Ult N0 305))
           (Ult 302 N0))
      (Eq false (Ult 303 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Eq false (Ult 9492 N0)))
                                    (Ult N0 9492))
                               (Eq false (Ult 9225 N0)))
                          (Ult N0 9225))
                     (Eq false (Ult 8981 N0)))
                (Ult N0 8981))
           (Eq false (Ult 8869 N0)))
      (Ult N0 8869))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Ult 12628 N0))
                               (Ult 12640 N0))
                          (Eq false (Ult 12664 N0)))
                     (Ult N0 12664))
                (Ult 12643 N0))
           (Eq false (Ult 12653 N0)))
      (Ult N0 12653))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Ult 8471 N0))
                                         (Eq false (Ult 8728 N0)))
                                    (Ult N0 8728))
                               (Ult 8539 N0))
                          (Eq false (Ult 8594 N0)))
                     (Ult N0 8594))
                (Ult 8542 N0))
           (Eq false (Ult 8592 N0)))
      (Ult N0 8592))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Eq false (Ult 9492 N0)))
                               (Ult N0 9492))
                          (Ult 9225 N0))
                     (Ult 9252 N0))
                (Ult 9474 N0))
           (Eq false (Ult 9484 N0)))
      (Eq false (Ult N0 9484)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [78]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Eq false (Ult 1066 N0)))
                               (Ult N0 1066))
                          (Ult 1042 N0))
                     (Ult 1054 N0))
                (Ult 1060 N0))
           (Ult 1063 N0))
      (Ult 1064 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Ult 920 N0))
                               (Ult 944 N0))
                          (Ult 956 N0))
                     (Ult 962 N0))
                (Eq false (Ult 965 N0)))
           (Ult N0 965))
      (Eq false (Ult 963 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Eq false (Ult 12628 N0)))
                               (Ult N0 12628))
                          (Ult 12616 N0))
                     (Ult 12622 N0))
                (Eq false (Ult 12625 N0)))
           (Ult N0 12625))
      (Eq false (Ult 12623 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Ult 1581 N0))
                               (Ult 1609 N0))
                          (Ult 3587 N0))
                     (Eq false (Ult 3593 N0)))
                (Ult N0 3593))
           (Ult 3590 N0))
      (Ult 3591 N0))
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Ult 298 N0))
                                         (Ult 327 N0))
                                    (Eq false (Ult 342 N0)))
                               (Ult N0 342))
                          (Eq false (Ult 336 N0)))
                     (Ult N0 336))
                (Eq false (Ult 331 N0)))
           (Ult N0 331))
      (Eq false (Ult 328 N0)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Eq false (Ult 12605 N0)))
                                    (Ult N0 12605))
                               (Ult 12519 N0))
                          (Ult 12593 N0))
                     (Ult 12599 N0))
                (Eq false (Ult 12602 N0)))
           (Ult N0 12602))
      (Ult 12600 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Ult 12443 N0))
                               (Ult 12459 N0))
                          (Ult 12471 N0))
                     (Eq false (Ult 12477 N0)))
                (Ult N0 12477))
           (Eq false (Ult 12473 N0)))
      (Eq false (Ult N0 12473)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Ult 920 N0))
                                         (Eq false (Ult 944 N0)))
                                    (Ult N0 944))
                               (Eq false (Ult 932 N0)))
                          (Ult N0 932))
                     (Eq false (Ult 925 N0)))
                (Ult N0 925))
           (Ult 922 N0))
      (Eq false (Ult 923 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Ult 920 N0))
                                    (Ult 944 N0))
                               (Eq false (Ult 956 N0)))
                          (Ult N0 956))
                     (Ult 950 N0))
                (Eq false (Ult 953 N0)))
           (Ult N0 953))
      (Eq false (Ult 951 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Eq false (Ult 8867 N0)))
                                         (Ult N0 8867))
                                    (Ult 4545 N0))
                               (Ult 8471 N0))
                          (Ult 8728 N0))
                     (Ult 8747 N0))
                (Ult 8805 N0))
           (Ult 8835 N0))
      (Eq false (Ult N0 8866)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Ult 8471 N0))
                                    (Eq false (Ult 8728 N0)))
                               (Ult N0 8728))
                          (Ult 8539 N0))
                     (Ult 8594 N0))
                (Ult 8660 N0))
           (Ult 8706 N0))
      (Ult 8711 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Eq false (Ult 12443 N0)))
                                    (Ult N0 12443))
                               (Ult 9829 N0))
                          (Eq false (Ult 10013 N0)))
                     (Ult N0 10013))
                (Eq false (Ult 9839 N0)))
           (Ult N0 9839))
      (Eq false (Ult 9830 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Ult 12483 N0))
                                                        (Eq false (Ult 12605 N0)))
                                                   (Ult N0 12605))
                                              (Eq false (Ult 12519 N0)))
                                         (Ult N0 12519))
                                    (Eq false (Ult 12501 N0)))
                               (Ult N0 12501))
                          (Eq false (Ult 12491 N0)))
                     (Ult N0 12491))
                (Ult 12486 N0))
           (Eq false (Ult 12488 N0)))
      (Ult N0 12488))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Eq false (Ult 12483 N0)))
                                         (Ult N0 12483))
                                    (Ult 9675 N0))
                               (Ult 12443 N0))
                          (Eq false (Ult 12459 N0)))
                     (Ult N0 12459))
                (Ult 12453 N0))
           (Ult 12456 N0))
      (Ult 12457 N0))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Eq false (Ult 1066 N0)))
                                    (Ult N0 1066))
                               (Ult 1042 N0))
                          (Ult 1054 N0))
                     (Ult 1060 N0))
                (Eq false (Ult 1063 N0)))
           (Ult N0 1063))
      (Eq false (Ult 1061 N0)))
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Eq false (Ult 1506 N0)))
                               (Ult N0 1506))
                          (Eq false (Ult 1494 N0)))
                     (Ult N0 1494))
                (Ult 1488 N0))
           (Ult 1491 N0))
      (Eq false (Ult 1492 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Eq false (Ult 273 N0)))
                               (Ult N0 273))
                          (Ult 261 N0))
                     (Ult 267 N0))
                (Eq false (Ult 270 N0)))
           (Ult N0 270))
      (Eq false (Ult 268 N0)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Ult 1609 N0))
                               (Ult 3587 N0))
                          (Eq false (Ult 3593 N0)))
                     (Ult N0 3593))
                (Eq false (Ult 3590 N0)))
           (Ult N0 3590))
      (Eq false (Ult 3588 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Ult 3650 N0))
                                         (Eq false (Ult 4521 N0)))
                                    (Ult N0 4521))
                               (Eq false (Ult 3661 N0)))
                          (Ult N0 3661))
                     (Eq false (Ult 3655 N0)))
                (Ult N0 3655))
           (Eq false (Ult 3652 N0)))
      (Ult N0 3652))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Eq false (Ult 920 N0)))
                                         (Ult N0 920))
                                    (Ult 381 N0))
                               (Eq false (Ult 906 N0)))
                          (Ult N0 906))
                     (Ult 731 N0))
                (Ult 902 N0))
           (Eq false (Ult 904 N0)))
      (Eq false (Ult N0 904)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Ult 8224 N0))
                                    (Eq false (Ult 8356 N0)))
                               (Ult N0 8356))
                          (Eq false (Ult 8248 N0)))
                     (Ult N0 8248))
                (Ult 8230 N0))
           (Eq false (Ult 8242 N0)))
      (Eq false (Ult N0 8242)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Ult 12519 N0))
                               (Eq false (Ult 12593 N0)))
                          (Ult N0 12593))
                     (Eq false (Ult 12525 N0)))
                (Ult N0 12525))
           (Ult 12522 N0))
      (Eq false (Ult 12523 N0)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Eq false (Ult 9492 N0)))
                                    (Ult N0 9492))
                               (Ult 9225 N0))
                          (Eq false (Ult 9252 N0)))
                     (Ult N0 9252))
                (Eq false (Ult 9228 N0)))
           (Ult N0 9228))
      (Eq false (Ult 9226 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Ult 1066 N0))
                                         (Eq false (Ult 1089 N0)))
                                    (Ult N0 1089))
                               (Eq false (Ult 1077 N0)))
                          (Ult N0 1077))
                     (Eq false (Ult 1071 N0)))
                (Ult N0 1071))
           (Ult 1068 N0))
      (Eq false (Ult 1069 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Eq false (Ult 920 N0)))
                                         (Ult N0 920))
                                    (Eq false (Ult 381 N0)))
                               (Ult N0 381))
                          (Eq false (Ult 365 N0)))
                     (Ult N0 365))
                (Ult 359 N0))
           (Ult 362 N0))
      (Eq false (Ult 363 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Ult 1066 N0))
                                         (Eq false (Ult 1089 N0)))
                                    (Ult N0 1089))
                               (Ult 1077 N0))
                          (Eq false (Ult 1083 N0)))
                     (Ult N0 1083))
                (Eq false (Ult 1080 N0)))
           (Ult N0 1080))
      (Eq false (Ult 1078 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Ult 1066 N0))
                                    (Ult 1089 N0))
                               (Ult 1101 N0))
                          (Eq false (Ult 1108 N0)))
                     (Ult N0 1108))
                (Eq false (Ult 1105 N0)))
           (Ult N0 1105))
      (Eq false (Ult 1102 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Eq false (Ult 12628 N0)))
                               (Ult N0 12628))
                          (Eq false (Ult 12616 N0)))
                     (Ult N0 12616))
                (Ult 12610 N0))
           (Ult 12613 N0))
      (Ult 12614 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Ult 298 N0))
                                    (Ult 327 N0))
                               (Eq false (Ult 342 N0)))
                          (Ult N0 342))
                     (Ult 336 N0))
                (Eq false (Ult 339 N0)))
           (Ult N0 339))
      (Eq false (Ult 337 N0)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Ult 1581 N0))
                                         (Eq false (Ult 1609 N0)))
                                    (Ult N0 1609))
                               (Eq false (Ult 1592 N0)))
                          (Ult N0 1592))
                     (Eq false (Ult 1586 N0)))
                (Ult N0 1586))
           (Ult 1583 N0))
      (Eq false (Ult 1584 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Ult 12605 N0))
                                         (Eq false (Ult 12628 N0)))
                                    (Ult N0 12628))
                               (Ult 12616 N0))
                          (Eq false (Ult 12622 N0)))
                     (Ult N0 12622))
                (Eq false (Ult 12619 N0)))
           (Ult N0 12619))
      (Eq false (Ult 12617 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Eq false (Ult 4521 N0)))
                               (Ult N0 4521))
                          (Ult 3661 N0))
                     (Eq false (Ult 3669 N0)))
                (Ult N0 3669))
           (Ult 3666 N0))
      (Eq false (Ult 3667 N0)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Ult 12605 N0))
                               (Ult 12628 N0))
                          (Ult 12640 N0))
                     (Ult 12664 N0))
                (Ult 12678 N0))
           (Ult 12685 N0))
      (Eq false (Ult 12686 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Eq false (Ult 298 N0)))
                                    (Ult N0 298))
                               (Eq false (Ult 273 N0)))
                          (Ult N0 273))
                     (Eq false (Ult 261 N0)))
                (Ult N0 261))
           (Eq false (Ult 175 N0)))
      (Ult 60 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Eq false (Ult 1114 N0)))
                                                        (Ult N0 1114))
                                                   (Eq false (Ult 1066 N0)))
                                              (Ult N0 1066))
                                         (Eq false (Ult 1042 N0)))
                                    (Ult N0 1042))
                               (Eq false (Ult 1029 N0)))
                          (Ult N0 1029))
                     (Eq false (Ult 973 N0)))
                (Ult N0 973))
           (Eq false (Ult 970 N0)))
      (Ult N0 970))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Ult 4521 N0))
                               (Eq false (Ult 4533 N0)))
                          (Ult N0 4533))
                     (Ult 4527 N0))
                (Eq false (Ult 4530 N0)))
           (Ult N0 4530))
      (Eq false (Ult 4528 N0)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Ult 1506 N0))
                               (Ult 1569 N0))
                          (Eq false (Ult 1575 N0)))
                     (Ult N0 1575))
                (Eq false (Ult 1572 N0)))
           (Ult N0 1572))
      (Eq false (Ult 1570 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Ult 12443 N0))
                               (Ult 12459 N0))
                          (Ult 12471 N0))
                     (Eq false (Ult 12477 N0)))
                (Ult N0 12477))
           (Eq false (Ult 12473 N0)))
      (Ult N0 12473))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Ult 1066 N0))
                                         (Eq false (Ult 1089 N0)))
                                    (Ult N0 1089))
                               (Eq false (Ult 1077 N0)))
                          (Ult N0 1077))
                     (Eq false (Ult 1071 N0)))
                (Ult N0 1071))
           (Eq false (Ult 1068 N0)))
      (Ult N0 1068))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Eq false (Ult 8224 N0)))
                                    (Ult N0 8224))
                               (Eq false (Ult 8202 N0)))
                          (Ult N0 8202))
                     (Ult 8195 N0))
                (Eq false (Ult 8199 N0)))
           (Ult N0 8199))
      (Eq false (Ult 8196 N0)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Ult 381 N0))
                                    (Eq false (Ult 906 N0)))
                               (Ult N0 906))
                          (Eq false (Ult 731 N0)))
                     (Ult N0 731))
                (Eq false (Ult 711 N0)))
           (Ult N0 711))
      (Eq false (Ult 382 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Eq false (Ult 8471 N0)))
                                    (Ult N0 8471))
                               (Ult 8224 N0))
                          (Eq false (Ult 8356 N0)))
                     (Ult N0 8356))
                (Ult 8248 N0))
           (Ult 8353 N0))
      (Ult 8354 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Eq false (Ult 920 N0)))
                                         (Ult N0 920))
                                    (Eq false (Ult 381 N0)))
                               (Ult N0 381))
                          (Ult 365 N0))
                     (Eq false (Ult 371 N0)))
                (Ult N0 371))
           (Ult 368 N0))
      (Eq false (Ult 369 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Eq false (Ult 8471 N0)))
                                    (Ult N0 8471))
                               (Ult 8224 N0))
                          (Ult 8356 N0))
                     (Ult 8361 N0))
                (Eq false (Ult 8364 N0)))
           (Ult N0 8364))
      (Eq false (Ult 8362 N0)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Ult 8471 N0))
                                         (Eq false (Ult 8728 N0)))
                                    (Ult N0 8728))
                               (Eq false (Ult 8539 N0)))
                          (Ult N0 8539))
                     (Ult 8533 N0))
                (Eq false (Ult 8536 N0)))
           (Ult N0 8536))
      (Eq false (Ult 8534 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Eq false (Ult 1581 N0)))
                                    (Ult N0 1581))
                               (Eq false (Ult 1506 N0)))
                          (Ult N0 1506))
                     (Ult 1494 N0))
                (Ult 1500 N0))
           (Ult 1503 N0))
      (Ult 1504 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Eq false (Ult 920 N0)))
                                         (Ult N0 920))
                                    (Ult 381 N0))
                               (Eq false (Ult 906 N0)))
                          (Ult N0 906))
                     (Ult 731 N0))
                (Ult 902 N0))
           (Eq false (Ult 904 N0)))
      (Ult N0 904))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [101]




########## Now building the constraint system ##########



########## after path processing, constraint size 8 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Eq false (Ult 8867 N0)))
                                         (Ult N0 8867))
                                    (Ult 4545 N0))
                               (Ult 8471 N0))
                          (Ult 8728 N0))
                     (Ult 8747 N0))
                (Ult 8805 N0))
           (Ult 8835 N0))
      (Ult N0 8866))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Eq false (Ult 381 N0)))
                                    (Ult N0 381))
                               (Eq false (Ult 365 N0)))
                          (Ult N0 365))
                     (Eq false (Ult 359 N0)))
                (Ult N0 359))
           (Eq false (Ult 356 N0)))
      (Ult N0 356))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Eq false (Ult 1609 N0)))
                               (Ult N0 1609))
                          (Ult 1592 N0))
                     (Ult 1603 N0))
                (Eq false (Ult 1606 N0)))
           (Ult N0 1606))
      (Ult 1604 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Ult 920 N0))
                                    (Eq false (Ult 944 N0)))
                               (Ult N0 944))
                          (Eq false (Ult 932 N0)))
                     (Ult N0 932))
                (Ult 925 N0))
           (Ult 928 N0))
      (Eq false (Ult 929 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Eq false (Ult 298 N0)))
                               (Ult N0 298))
                          (Ult 273 N0))
                     (Ult 286 N0))
                (Ult 292 N0))
           (Ult 295 N0))
      (Eq false (Ult 296 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Ult 12443 N0))
                                    (Eq false (Ult 12459 N0)))
                               (Ult N0 12459))
                          (Eq false (Ult 12453 N0)))
                     (Ult N0 12453))
                (Eq false (Ult 12450 N0)))
           (Ult N0 12450))
      (Eq false (Ult 12444 N0)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Ult 1066 N0))
                                         (Eq false (Ult 1089 N0)))
                                    (Ult N0 1089))
                               (Eq false (Ult 1077 N0)))
                          (Ult N0 1077))
                     (Ult 1071 N0))
                (Eq false (Ult 1074 N0)))
           (Ult N0 1074))
      (Eq false (Ult 1072 N0)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Eq false (Ult 4545 N0)))
                                                        (Ult N0 4545))
                                                   (Eq false (Ult 3650 N0)))
                                              (Ult N0 3650))
                                         (Eq false (Ult 3622 N0)))
                                    (Ult N0 3622))
                               (Eq false (Ult 3610 N0)))
                          (Ult N0 3610))
                     (Eq false (Ult 3604 N0)))
                (Ult N0 3604))
           (Eq false (Ult 3601 N0)))
      (Ult N0 3601))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Ult 9492 N0))
                                    (Eq false (Ult 9644 N0)))
                               (Ult N0 9644))
                          (Eq false (Ult 9532 N0)))
                     (Ult N0 9532))
                (Ult 9508 N0))
           (Eq false (Ult 9516 N0)))
      (Eq false (Ult N0 9516)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Ult 1066 N0))
                                    (Eq false (Ult 1089 N0)))
                               (Ult N0 1089))
                          (Eq false (Ult 1077 N0)))
                     (Ult N0 1077))
                (Ult 1071 N0))
           (Ult 1074 N0))
      (Eq false (Ult 1075 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Ult 920 N0))
                                         (Eq false (Ult 944 N0)))
                                    (Ult N0 944))
                               (Eq false (Ult 932 N0)))
                          (Ult N0 932))
                     (Ult 925 N0))
                (Eq false (Ult 928 N0)))
           (Ult N0 928))
      (Eq false (Ult 926 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Eq false (Ult 968 N0)))
                                                                  (Ult N0 968))
                                                             (Eq false (Ult 354 N0)))
                                                        (Ult N0 354))
                                                   (Eq false (Ult 298 N0)))
                                              (Ult N0 298))
                                         (Eq false (Ult 273 N0)))
                                    (Ult N0 273))
                               (Eq false (Ult 261 N0)))
                          (Ult N0 261))
                     (Ult 175 N0))
                (Eq false (Ult 258 N0)))
           (Ult N0 258))
      (Eq false (Ult 256 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Ult 1066 N0))
                               (Ult 1089 N0))
                          (Eq false (Ult 1101 N0)))
                     (Ult N0 1101))
                (Ult 1095 N0))
           (Ult 1098 N0))
      (Ult 1099 N0))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Eq false (Ult 1581 N0)))
                                    (Ult N0 1581))
                               (Ult 1506 N0))
                          (Ult 1569 N0))
                     (Eq false (Ult 1575 N0)))
                (Ult N0 1575))
           (Ult 1572 N0))
      (Ult 1573 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Ult 381 N0))
                                    (Eq false (Ult 906 N0)))
                               (Ult N0 906))
                          (Eq false (Ult 731 N0)))
                     (Ult N0 731))
                (Ult 711 N0))
           (Eq false (Ult 728 N0)))
      (Eq false (Ult N0 728)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Eq false (Ult 9492 N0)))
                                    (Ult N0 9492))
                               (Ult 9225 N0))
                          (Eq false (Ult 9252 N0)))
                     (Ult N0 9252))
                (Ult 9228 N0))
           (Ult 9229 N0))
      (Ult 9250 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Ult 12605 N0))
                               (Eq false (Ult 12628 N0)))
                          (Ult N0 12628))
                     (Ult 12616 N0))
                (Ult 12622 N0))
           (Ult 12625 N0))
      (Ult 12626 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Eq false (Ult 3650 N0)))
                                    (Ult N0 3650))
                               (Ult 3622 N0))
                          (Eq false (Ult 3634 N0)))
                     (Ult N0 3634))
                (Ult 3628 N0))
           (Ult 3631 N0))
      (Ult 3632 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Ult 8471 N0))
                                         (Eq false (Ult 8728 N0)))
                                    (Ult N0 8728))
                               (Ult 8539 N0))
                          (Ult 8594 N0))
                     (Ult 8660 N0))
                (Ult 8706 N0))
           (Eq false (Ult 8711 N0)))
      (Eq false (Ult N0 8711)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Ult 8471 N0))
                                              (Ult 8728 N0))
                                         (Eq false (Ult 8747 N0)))
                                    (Ult N0 8747))
                               (Eq false (Ult 8744 N0)))
                          (Ult N0 8744))
                     (Eq false (Ult 8734 N0)))
                (Ult N0 8734))
           (Eq false (Ult 8730 N0)))
      (Ult N0 8730))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Eq false (Ult 12443 N0)))
                                    (Ult N0 12443))
                               (Ult 9829 N0))
                          (Ult 10013 N0))
                     (Eq false (Ult 12290 N0)))
                (Ult N0 12290))
           (Eq false (Ult 10016 N0)))
      (Ult N0 10016))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Eq false (Ult 1066 N0)))
                                         (Ult N0 1066))
                                    (Eq false (Ult 1042 N0)))
                               (Ult N0 1042))
                          (Ult 1029 N0))
                     (Eq false (Ult 1035 N0)))
                (Ult N0 1035))
           (Ult 1032 N0))
      (Ult 1033 N0))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Ult 8471 N0))
                                         (Eq false (Ult 8728 N0)))
                                    (Ult N0 8728))
                               (Ult 8539 N0))
                          (Ult 8594 N0))
                     (Eq false (Ult 8660 N0)))
                (Ult N0 8660))
           (Ult 8595 N0))
      (Ult 8658 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Eq false (Ult 920 N0)))
                                    (Ult N0 920))
                               (Eq false (Ult 381 N0)))
                          (Ult N0 381))
                     (Ult 365 N0))
                (Ult 371 N0))
           (Ult 378 N0))
      (Ult 379 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Eq false (Ult 920 N0)))
                                    (Ult N0 920))
                               (Ult 381 N0))
                          (Ult 906 N0))
                     (Eq false (Ult 914 N0)))
                (Ult N0 914))
           (Ult 911 N0))
      (Ult 912 N0))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Eq false (Ult 9492 N0)))
                               (Ult N0 9492))
                          (Ult 9225 N0))
                     (Ult 9252 N0))
                (Ult 9474 N0))
           (Eq false (Ult 9484 N0)))
      (Ult N0 9484))
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Eq false (Ult 1114 N0)))
                                                        (Ult N0 1114))
                                                   (Eq false (Ult 1066 N0)))
                                              (Ult N0 1066))
                                         (Eq false (Ult 1042 N0)))
                                    (Ult N0 1042))
                               (Eq false (Ult 1029 N0)))
                          (Ult N0 1029))
                     (Eq false (Ult 973 N0)))
                (Ult N0 973))
           (Ult 970 N0))
      (Eq false (Ult 971 N0)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Ult 9675 N0))
                                                   (Eq false (Ult 12443 N0)))
                                              (Ult N0 12443))
                                         (Eq false (Ult 9829 N0)))
                                    (Ult N0 9829))
                               (Eq false (Ult 9747 N0)))
                          (Ult N0 9747))
                     (Eq false (Ult 9702 N0)))
                (Ult N0 9702))
           (Eq false (Ult 9679 N0)))
      (Eq false (Ult N0 9679)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Ult 298 N0))
                               (Ult 327 N0))
                          (Ult 342 N0))
                     (Ult 348 N0))
                (Eq false (Ult 351 N0)))
           (Ult N0 351))
      (Ult 349 N0))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Ult 3650 N0))
                                         (Eq false (Ult 4521 N0)))
                                    (Ult N0 4521))
                               (Eq false (Ult 3661 N0)))
                          (Ult N0 3661))
                     (Eq false (Ult 3655 N0)))
                (Ult N0 3655))
           (Ult 3652 N0))
      (Eq false (Ult 3653 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Eq false (Ult 381 N0)))
                                    (Ult N0 381))
                               (Ult 365 N0))
                          (Ult 371 N0))
                     (Eq false (Ult 378 N0)))
                (Ult N0 378))
           (Eq false (Ult 376 N0)))
      (Ult N0 376))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Ult 920 N0))
                                    (Ult 944 N0))
                               (Eq false (Ult 956 N0)))
                          (Ult N0 956))
                     (Eq false (Ult 950 N0)))
                (Ult N0 950))
           (Ult 947 N0))
      (Eq false (Ult 948 N0)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Ult 1066 N0))
                                         (Ult 1089 N0))
                                    (Eq false (Ult 1101 N0)))
                               (Ult N0 1101))
                          (Eq false (Ult 1095 N0)))
                     (Ult N0 1095))
                (Eq false (Ult 1092 N0)))
           (Ult N0 1092))
      (Eq false (Ult 1090 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Eq false (Ult 12519 N0)))
                               (Ult N0 12519))
                          (Ult 12501 N0))
                     (Eq false (Ult 12513 N0)))
                (Ult N0 12513))
           (Ult 12510 N0))
      (Eq false (Ult 12511 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Eq false (Ult 381 N0)))
                                    (Ult N0 381))
                               (Ult 365 N0))
                          (Ult 371 N0))
                     (Eq false (Ult 378 N0)))
                (Ult N0 378))
           (Eq false (Ult 376 N0)))
      (Eq false (Ult N0 376)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Ult 8471 N0))
                                         (Eq false (Ult 8728 N0)))
                                    (Ult N0 8728))
                               (Ult 8539 N0))
                          (Eq false (Ult 8594 N0)))
                     (Ult N0 8594))
                (Eq false (Ult 8542 N0)))
           (Ult N0 8542))
      (Eq false (Ult 8540 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Ult 12628 N0))
                               (Eq false (Ult 12640 N0)))
                          (Ult N0 12640))
                     (Ult 12634 N0))
                (Eq false (Ult 12637 N0)))
           (Ult N0 12637))
      (Eq false (Ult 12635 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Ult 3650 N0))
                                         (Eq false (Ult 4521 N0)))
                                    (Ult N0 4521))
                               (Eq false (Ult 3661 N0)))
                          (Ult N0 3661))
                     (Ult 3655 N0))
                (Eq false (Ult 3658 N0)))
           (Ult N0 3658))
      (Eq false (Ult 3656 N0)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Ult 1114 N0))
                                                   (Eq false (Ult 1581 N0)))
                                              (Ult N0 1581))
                                         (Eq false (Ult 1506 N0)))
                                    (Ult N0 1506))
                               (Eq false (Ult 1494 N0)))
                          (Ult N0 1494))
                     (Ult 1488 N0))
                (Eq false (Ult 1491 N0)))
           (Ult N0 1491))
      (Eq false (Ult 1489 N0)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Ult 12605 N0))
                                         (Ult 12628 N0))
                                    (Eq false (Ult 12640 N0)))
                               (Ult N0 12640))
                          (Eq false (Ult 12634 N0)))
                     (Ult N0 12634))
                (Eq false (Ult 12631 N0)))
           (Ult N0 12631))
      (Eq false (Ult 12629 N0)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Ult 12443 N0))
                               (Eq false (Ult 12459 N0)))
                          (Ult N0 12459))
                     (Ult 12453 N0))
                (Eq false (Ult 12456 N0)))
           (Ult N0 12456))
      (Eq false (Ult 12454 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Ult 1581 N0))
                                         (Eq false (Ult 1609 N0)))
                                    (Ult N0 1609))
                               (Eq false (Ult 1592 N0)))
                          (Ult N0 1592))
                     (Eq false (Ult 1586 N0)))
                (Ult N0 1586))
           (Eq false (Ult 1583 N0)))
      (Ult N0 1583))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Ult 9492 N0))
                                    (Eq false (Ult 9644 N0)))
                               (Ult N0 9644))
                          (Eq false (Ult 9532 N0)))
                     (Ult N0 9532))
                (Ult 9508 N0))
           (Eq false (Ult 9516 N0)))
      (Ult N0 9516))
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Ult 920 N0))
                                         (Eq false (Ult 944 N0)))
                                    (Ult N0 944))
                               (Ult 932 N0))
                          (Eq false (Ult 938 N0)))
                     (Ult N0 938))
                (Eq false (Ult 935 N0)))
           (Ult N0 935))
      (Eq false (Ult 933 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Ult 4521 N0))
                               (Ult 4533 N0))
                          (Eq false (Ult 4539 N0)))
                     (Ult N0 4539))
                (Eq false (Ult 4536 N0)))
           (Ult N0 4536))
      (Eq false (Ult 4534 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Ult 12605 N0))
                                         (Eq false (Ult 12628 N0)))
                                    (Ult N0 12628))
                               (Eq false (Ult 12616 N0)))
                          (Ult N0 12616))
                     (Ult 12610 N0))
                (Eq false (Ult 12613 N0)))
           (Ult N0 12613))
      (Ult 12611 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Ult 381 N0))
                                    (Eq false (Ult 906 N0)))
                               (Ult N0 906))
                          (Ult 731 N0))
                     (Eq false (Ult 902 N0)))
                (Ult N0 902))
           (Eq false (Ult 733 N0)))
      (Eq false (Ult N0 733)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Eq false (Ult 1114 N0)))
                                         (Ult N0 1114))
                                    (Ult 1066 N0))
                               (Ult 1089 N0))
                          (Ult 1101 N0))
                     (Ult 1108 N0))
                (Eq false (Ult 1111 N0)))
           (Ult N0 1111))
      (Ult 1109 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Eq false (Ult 8471 N0)))
                                    (Ult N0 8471))
                               (Ult 8224 N0))
                          (Ult 8356 N0))
                     (Ult 8361 N0))
                (Ult 8364 N0))
           (Ult 8453 N0))
      (Eq false (Ult N0 8470)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Ult 8224 N0))
                                    (Eq false (Ult 8356 N0)))
                               (Ult N0 8356))
                          (Ult 8248 N0))
                     (Eq false (Ult 8353 N0)))
                (Ult N0 8353))
           (Eq false (Ult 8254 N0)))
      (Eq false (Ult N0 8254)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Eq false (Ult 1066 N0)))
                                    (Ult N0 1066))
                               (Ult 1042 N0))
                          (Eq false (Ult 1054 N0)))
                     (Ult N0 1054))
                (Ult 1048 N0))
           (Ult 1051 N0))
      (Eq false (Ult 1052 N0)))
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Eq false (Ult 12443 N0)))
                                    (Ult N0 12443))
                               (Eq false (Ult 9829 N0)))
                          (Ult N0 9829))
                     (Ult 9747 N0))
                (Ult 9792 N0))
           (Eq false (Ult 9794 N0)))
      (Ult N0 9794))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Ult 3599 N0))
                                              (Ult 8867 N0))
                                         (Ult 12483 N0))
                                    (Ult 12605 N0))
                               (Ult 12628 N0))
                          (Eq false (Ult 12640 N0)))
                     (Ult N0 12640))
                (Ult 12634 N0))
           (Ult 12637 N0))
      (Ult 12638 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Ult 12483 N0))
                                                   (Eq false (Ult 12605 N0)))
                                              (Ult N0 12605))
                                         (Ult 12519 N0))
                                    (Eq false (Ult 12593 N0)))
                               (Ult N0 12593))
                          (Eq false (Ult 12525 N0)))
                     (Ult N0 12525))
                (Eq false (Ult 12522 N0)))
           (Ult N0 12522))
      (Eq false (Ult 12520 N0)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Ult 920 N0))
                                         (Eq false (Ult 944 N0)))
                                    (Ult N0 944))
                               (Eq false (Ult 932 N0)))
                          (Ult N0 932))
                     (Ult 925 N0))
                (Ult 928 N0))
           (Ult 929 N0))
      (Eq false (Ult N0 931)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Ult 12519 N0))
                               (Ult 12593 N0))
                          (Eq false (Ult 12599 N0)))
                     (Ult N0 12599))
                (Eq false (Ult 12596 N0)))
           (Ult N0 12596))
      (Ult 12594 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Eq false (Ult 9492 N0)))
                                         (Ult N0 9492))
                                    (Eq false (Ult 9225 N0)))
                               (Ult N0 9225))
                          (Eq false (Ult 8981 N0)))
                     (Ult N0 8981))
                (Ult 8869 N0))
           (Ult 8968 N0))
      (Ult 8970 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Eq false (Ult 8471 N0)))
                                         (Ult N0 8471))
                                    (Eq false (Ult 8224 N0)))
                               (Ult N0 8224))
                          (Ult 8202 N0))
                     (Ult 8216 N0))
                (Ult 8220 N0))
           (Ult 8221 N0))
      (Eq false (Ult 8222 N0)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Ult 1581 N0))
                                         (Eq false (Ult 1609 N0)))
                                    (Ult N0 1609))
                               (Eq false (Ult 1592 N0)))
                          (Ult N0 1592))
                     (Ult 1586 N0))
                (Eq false (Ult 1589 N0)))
           (Ult N0 1589))
      (Eq false (Ult 1587 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Eq false (Ult 4545 N0)))
                                                        (Ult N0 4545))
                                                   (Eq false (Ult 3650 N0)))
                                              (Ult N0 3650))
                                         (Eq false (Ult 3622 N0)))
                                    (Ult N0 3622))
                               (Eq false (Ult 3610 N0)))
                          (Ult N0 3610))
                     (Eq false (Ult 3604 N0)))
                (Ult N0 3604))
           (Ult 3601 N0))
      (Eq false (Ult 3602 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Eq false (Ult 1066 N0)))
                                         (Ult N0 1066))
                                    (Eq false (Ult 1042 N0)))
                               (Ult N0 1042))
                          (Ult 1029 N0))
                     (Ult 1035 N0))
                (Eq false (Ult 1039 N0)))
           (Ult N0 1039))
      (Eq false (Ult 1036 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Ult 12628 N0))
                               (Ult 12640 N0))
                          (Ult 12664 N0))
                     (Eq false (Ult 12678 N0)))
                (Ult N0 12678))
           (Eq false (Ult 12671 N0)))
      (Eq false (Ult N0 12671)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Ult 1581 N0))
                               (Ult 1609 N0))
                          (Eq false (Ult 3587 N0)))
                     (Ult N0 3587))
                (Ult 1615 N0))
           (Ult 1618 N0))
      (Ult 3585 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Ult 3622 N0))
                               (Eq false (Ult 3634 N0)))
                          (Ult N0 3634))
                     (Ult 3628 N0))
                (Eq false (Ult 3631 N0)))
           (Ult N0 3631))
      (Eq false (Ult 3629 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Eq false (Ult 381 N0)))
                                    (Ult N0 381))
                               (Eq false (Ult 365 N0)))
                          (Ult N0 365))
                     (Eq false (Ult 359 N0)))
                (Ult N0 359))
           (Ult 356 N0))
      (Eq false (Ult 357 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Ult 8471 N0))
                                              (Ult 8728 N0))
                                         (Eq false (Ult 8747 N0)))
                                    (Ult N0 8747))
                               (Eq false (Ult 8744 N0)))
                          (Ult N0 8744))
                     (Eq false (Ult 8734 N0)))
                (Ult N0 8734))
           (Eq false (Ult 8730 N0)))
      (Eq false (Ult N0 8730)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Eq false (Ult 1609 N0)))
                               (Ult N0 1609))
                          (Ult 1592 N0))
                     (Eq false (Ult 1603 N0)))
                (Ult N0 1603))
           (Ult 1600 N0))
      (Ult 1601 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Eq false (Ult 381 N0)))
                                    (Ult N0 381))
                               (Eq false (Ult 365 N0)))
                          (Ult N0 365))
                     (Ult 359 N0))
                (Eq false (Ult 362 N0)))
           (Ult N0 362))
      (Eq false (Ult 360 N0)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Eq false (Ult 12443 N0)))
                               (Ult N0 12443))
                          (Ult 9829 N0))
                     (Ult 10013 N0))
                (Ult 12290 N0))
           (Eq false (Ult 12300 N0)))
      (Ult N0 12300))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Ult 4545 N0))
                                                        (Eq false (Ult 8471 N0)))
                                                   (Ult N0 8471))
                                              (Eq false (Ult 8224 N0)))
                                         (Ult N0 8224))
                                    (Ult 8202 N0))
                               (Eq false (Ult 8216 N0)))
                          (Ult N0 8216))
                     (Eq false (Ult 8212 N0)))
                (Ult N0 8212))
           (Eq false (Ult 8210 N0)))
      (Ult N0 8210))
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Ult 12483 N0))
                                                   (Eq false (Ult 12605 N0)))
                                              (Ult N0 12605))
                                         (Eq false (Ult 12519 N0)))
                                    (Ult N0 12519))
                               (Eq false (Ult 12501 N0)))
                          (Ult N0 12501))
                     (Ult 12491 N0))
                (Eq false (Ult 12494 N0)))
           (Ult N0 12494))
      (Eq false (Ult 12492 N0)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Ult 3650 N0))
                               (Ult 4521 N0))
                          (Ult 4533 N0))
                     (Eq false (Ult 4539 N0)))
                (Ult N0 4539))
           (Ult 4536 N0))
      (Ult 4537 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Ult 1581 N0))
                                         (Eq false (Ult 1609 N0)))
                                    (Ult N0 1609))
                               (Ult 1592 N0))
                          (Eq false (Ult 1603 N0)))
                     (Ult N0 1603))
                (Eq false (Ult 1600 N0)))
           (Ult N0 1600))
      (Eq false (Ult 1593 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Eq false (Ult 12519 N0)))
                               (Ult N0 12519))
                          (Ult 12501 N0))
                     (Ult 12513 N0))
                (Eq false (Ult 12516 N0)))
           (Ult N0 12516))
      (Eq false (Ult 12514 N0)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Eq false (Ult 273 N0)))
                               (Ult N0 273))
                          (Eq false (Ult 261 N0)))
                     (Ult N0 261))
                (Ult 175 N0))
           (Ult 258 N0))
      (Ult 259 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Ult 12483 N0))
                                                        (Eq false (Ult 12605 N0)))
                                                   (Ult N0 12605))
                                              (Eq false (Ult 12519 N0)))
                                         (Ult N0 12519))
                                    (Eq false (Ult 12501 N0)))
                               (Ult N0 12501))
                          (Eq false (Ult 12491 N0)))
                     (Ult N0 12491))
                (Eq false (Ult 12486 N0)))
           (Ult N0 12486))
      (Ult 12484 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Eq false (Ult 12443 N0)))
                                    (Ult N0 12443))
                               (Eq false (Ult 9829 N0)))
                          (Ult N0 9829))
                     (Ult 9747 N0))
                (Ult 9792 N0))
           (Eq false (Ult 9794 N0)))
      (Eq false (Ult N0 9794)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Ult 298 N0))
                                    (Ult 327 N0))
                               (Ult 342 N0))
                          (Eq false (Ult 348 N0)))
                     (Ult N0 348))
                (Eq false (Ult 345 N0)))
           (Ult N0 345))
      (Eq false (Ult 343 N0)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Ult 920 N0))
                               (Ult 944 N0))
                          (Ult 956 N0))
                     (Eq false (Ult 962 N0)))
                (Ult N0 962))
           (Ult 959 N0))
      (Ult 960 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Eq false (Ult 12605 N0)))
                                    (Ult N0 12605))
                               (Ult 12519 N0))
                          (Ult 12593 N0))
                     (Eq false (Ult 12599 N0)))
                (Ult N0 12599))
           (Ult 12596 N0))
      (Ult 12597 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Ult 12519 N0))
                               (Eq false (Ult 12593 N0)))
                          (Ult N0 12593))
                     (Ult 12525 N0))
                (Ult 12531 N0))
           (Ult 12539 N0))
      (Ult 12540 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Eq false (Ult 298 N0)))
                                    (Ult N0 298))
                               (Ult 273 N0))
                          (Ult 286 N0))
                     (Ult 292 N0))
                (Eq false (Ult 295 N0)))
           (Ult N0 295))
      (Eq false (Ult 293 N0)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Eq false (Ult 8471 N0)))
                                         (Ult N0 8471))
                                    (Eq false (Ult 8224 N0)))
                               (Ult N0 8224))
                          (Ult 8202 N0))
                     (Ult 8216 N0))
                (Eq false (Ult 8220 N0)))
           (Ult N0 8220))
      (Eq false (Ult 8217 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [81]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Eq false (Ult 12483 N0)))
                                         (Ult N0 12483))
                                    (Eq false (Ult 9675 N0)))
                               (Ult N0 9675))
                          (Ult 9492 N0))
                     (Ult 9644 N0))
                (Ult 9660 N0))
           (Ult 9665 N0))
      (Ult 9670 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Ult 8471 N0))
                                    (Ult 8728 N0))
                               (Ult 8747 N0))
                          (Eq false (Ult 8805 N0)))
                     (Ult N0 8805))
                (Ult 8800 N0))
           (Ult 8801 N0))
      (Eq false (Ult N0 8804)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Ult 381 N0))
                                    (Eq false (Ult 906 N0)))
                               (Ult N0 906))
                          (Ult 731 N0))
                     (Eq false (Ult 902 N0)))
                (Ult N0 902))
           (Eq false (Ult 733 N0)))
      (Ult N0 733))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Eq false (Ult 1506 N0)))
                               (Ult N0 1506))
                          (Ult 1494 N0))
                     (Ult 1500 N0))
                (Eq false (Ult 1503 N0)))
           (Ult N0 1503))
      (Ult 1501 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Ult 920 N0))
                                    (Eq false (Ult 944 N0)))
                               (Ult N0 944))
                          (Ult 932 N0))
                     (Eq false (Ult 938 N0)))
                (Ult N0 938))
           (Ult 935 N0))
      (Ult 936 N0))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Ult 3650 N0))
                               (Eq false (Ult 4521 N0)))
                          (Ult N0 4521))
                     (Ult 3661 N0))
                (Ult 3669 N0))
           (Ult 3672 N0))
      (Eq false (Ult 3673 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Ult 1114 N0))
                                                   (Eq false (Ult 1581 N0)))
                                              (Ult N0 1581))
                                         (Ult 1506 N0))
                                    (Eq false (Ult 1569 N0)))
                               (Ult N0 1569))
                          (Eq false (Ult 1512 N0)))
                     (Ult N0 1512))
                (Eq false (Ult 1509 N0)))
           (Ult N0 1509))
      (Eq false (Ult 1507 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Eq false (Ult 8471 N0)))
                                         (Ult N0 8471))
                                    (Ult 8224 N0))
                               (Ult 8356 N0))
                          (Eq false (Ult 8361 N0)))
                     (Ult N0 8361))
                (Eq false (Ult 8359 N0)))
           (Ult N0 8359))
      (Eq false (Ult 8357 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Eq false (Ult 12628 N0)))
                               (Ult N0 12628))
                          (Ult 12616 N0))
                     (Ult 12622 N0))
                (Eq false (Ult 12625 N0)))
           (Ult N0 12625))
      (Ult 12623 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Ult 4545 N0))
                                                        (Eq false (Ult 8471 N0)))
                                                   (Ult N0 8471))
                                              (Eq false (Ult 8224 N0)))
                                         (Ult N0 8224))
                                    (Eq false (Ult 8202 N0)))
                               (Ult N0 8202))
                          (Eq false (Ult 8195 N0)))
                     (Ult N0 8195))
                (Ult 4587 N0))
           (Eq false (Ult 4601 N0)))
      (Ult N0 4601))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Eq false (Ult 12605 N0)))
                                    (Ult N0 12605))
                               (Eq false (Ult 12519 N0)))
                          (Ult N0 12519))
                     (Ult 12501 N0))
                (Ult 12513 N0))
           (Ult 12516 N0))
      (Ult 12517 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Eq false (Ult 9675 N0)))
                                    (Ult N0 9675))
                               (Ult 9492 N0))
                          (Eq false (Ult 9644 N0)))
                     (Ult N0 9644))
                (Ult 9532 N0))
           (Ult 9633 N0))
      (Ult 9642 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Eq false (Ult 12628 N0)))
                               (Ult N0 12628))
                          (Ult 12616 N0))
                     (Eq false (Ult 12622 N0)))
                (Ult N0 12622))
           (Ult 12619 N0))
      (Ult 12620 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Eq false (Ult 3650 N0)))
                                    (Ult N0 3650))
                               (Eq false (Ult 3622 N0)))
                          (Ult N0 3622))
                     (Ult 3610 N0))
                (Ult 3616 N0))
           (Ult 3619 N0))
      (Ult 3620 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Eq false (Ult 920 N0)))
                                    (Ult N0 920))
                               (Ult 381 N0))
                          (Ult 906 N0))
                     (Ult 914 N0))
                (Eq false (Ult 917 N0)))
           (Ult N0 917))
      (Eq false (Ult 915 N0)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Ult 9492 N0))
                                    (Eq false (Ult 9644 N0)))
                               (Ult N0 9644))
                          (Ult 9532 N0))
                     (Eq false (Ult 9633 N0)))
                (Ult N0 9633))
           (Eq false (Ult 9618 N0)))
      (Eq false (Ult N0 9618)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Ult 3622 N0))
                               (Ult 3634 N0))
                          (Ult 3640 N0))
                     (Eq false (Ult 3647 N0)))
                (Ult N0 3647))
           (Ult 3641 N0))
      (Eq false (Ult 3642 N0)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Eq false (Ult 1114 N0)))
                                                        (Ult N0 1114))
                                                   (Eq false (Ult 1066 N0)))
                                              (Ult N0 1066))
                                         (Eq false (Ult 1042 N0)))
                                    (Ult N0 1042))
                               (Eq false (Ult 1029 N0)))
                          (Ult N0 1029))
                     (Ult 973 N0))
                (Eq false (Ult 1026 N0)))
           (Ult N0 1026))
      (Eq false (Ult 974 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Ult 3622 N0))
                               (Ult 3634 N0))
                          (Ult 3640 N0))
                     (Eq false (Ult 3647 N0)))
                (Ult N0 3647))
           (Ult 3641 N0))
      (Ult 3642 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Eq false (Ult 4545 N0)))
                                                        (Ult N0 4545))
                                                   (Eq false (Ult 3650 N0)))
                                              (Ult N0 3650))
                                         (Eq false (Ult 3622 N0)))
                                    (Ult N0 3622))
                               (Ult 3610 N0))
                          (Eq false (Ult 3616 N0)))
                     (Ult N0 3616))
                (Eq false (Ult 3613 N0)))
           (Ult N0 3613))
      (Eq false (Ult 3611 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Eq false (Ult 9492 N0)))
                               (Ult N0 9492))
                          (Ult 9225 N0))
                     (Ult 9252 N0))
                (Ult 9474 N0))
           (Ult 9484 N0))
      (Ult 9488 N0))
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Ult 920 N0))
                                    (Eq false (Ult 944 N0)))
                               (Ult N0 944))
                          (Ult 932 N0))
                     (Ult 938 N0))
                (Eq false (Ult 941 N0)))
           (Ult N0 941))
      (Ult 939 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Eq false (Ult 968 N0)))
                                                                  (Ult N0 968))
                                                             (Eq false (Ult 354 N0)))
                                                        (Ult N0 354))
                                                   (Eq false (Ult 298 N0)))
                                              (Ult N0 298))
                                         (Ult 273 N0))
                                    (Eq false (Ult 286 N0)))
                               (Ult N0 286))
                          (Eq false (Ult 280 N0)))
                     (Ult N0 280))
                (Ult 275 N0))
           (Eq false (Ult 278 N0)))
      (Eq false (Ult N0 278)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Ult 381 N0))
                                    (Eq false (Ult 906 N0)))
                               (Ult N0 906))
                          (Eq false (Ult 731 N0)))
                     (Ult N0 731))
                (Ult 711 N0))
           (Eq false (Ult 728 N0)))
      (Ult N0 728))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Eq false (Ult 4545 N0)))
                                                        (Ult N0 4545))
                                                   (Eq false (Ult 3650 N0)))
                                              (Ult N0 3650))
                                         (Ult 3622 N0))
                                    (Eq false (Ult 3634 N0)))
                               (Ult N0 3634))
                          (Eq false (Ult 3628 N0)))
                     (Ult N0 3628))
                (Eq false (Ult 3625 N0)))
           (Ult N0 3625))
      (Eq false (Ult 3623 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Eq false (Ult 4521 N0)))
                               (Ult N0 4521))
                          (Eq false (Ult 3661 N0)))
                     (Ult N0 3661))
                (Ult 3655 N0))
           (Ult 3658 N0))
      (Ult 3659 N0))
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Eq false (Ult 12443 N0)))
                                         (Ult N0 12443))
                                    (Eq false (Ult 9829 N0)))
                               (Ult N0 9829))
                          (Eq false (Ult 9747 N0)))
                     (Ult N0 9747))
                (Ult 9702 N0))
           (Eq false (Ult 9734 N0)))
      (Eq false (Ult N0 9734)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Eq false (Ult 4545 N0)))
                                                        (Ult N0 4545))
                                                   (Ult 3650 N0))
                                              (Eq false (Ult 4521 N0)))
                                         (Ult N0 4521))
                                    (Ult 3661 N0))
                               (Eq false (Ult 3669 N0)))
                          (Ult N0 3669))
                     (Eq false (Ult 3666 N0)))
                (Ult N0 3666))
           (Eq false (Ult 3664 N0)))
      (Eq false (Ult N0 3664)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Ult 12628 N0))
                               (Ult 12640 N0))
                          (Ult 12664 N0))
                     (Eq false (Ult 12678 N0)))
                (Ult N0 12678))
           (Eq false (Ult 12671 N0)))
      (Ult N0 12671))
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [78]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Eq false (Ult 298 N0)))
                               (Ult N0 298))
                          (Ult 273 N0))
                     (Ult 286 N0))
                (Ult 292 N0))
           (Ult 295 N0))
      (Ult 296 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Eq false (Ult 273 N0)))
                               (Ult N0 273))
                          (Ult 261 N0))
                     (Eq false (Ult 267 N0)))
                (Ult N0 267))
           (Ult 264 N0))
      (Eq false (Ult 265 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Ult 1506 N0))
                               (Eq false (Ult 1569 N0)))
                          (Ult N0 1569))
                     (Ult 1512 N0))
                (Eq false (Ult 1548 N0)))
           (Ult N0 1548))
      (Eq false (Ult 1513 N0)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Eq false (Ult 9492 N0)))
                                         (Ult N0 9492))
                                    (Ult 9225 N0))
                               (Eq false (Ult 9252 N0)))
                          (Ult N0 9252))
                     (Ult 9228 N0))
                (Ult 9229 N0))
           (Eq false (Ult 9250 N0)))
      (Eq false (Ult N0 9250)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Ult 298 N0))
                               (Ult 327 N0))
                          (Ult 342 N0))
                     (Eq false (Ult 348 N0)))
                (Ult N0 348))
           (Ult 345 N0))
      (Ult 346 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Ult 8471 N0))
                                         (Ult 8728 N0))
                                    (Ult 8747 N0))
                               (Eq false (Ult 8805 N0)))
                          (Ult N0 8805))
                     (Eq false (Ult 8800 N0)))
                (Ult N0 8800))
           (Eq false (Ult 8756 N0)))
      (Eq false (Ult N0 8756)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Eq false (Ult 968 N0)))
                                                                  (Ult N0 968))
                                                             (Eq false (Ult 354 N0)))
                                                        (Ult N0 354))
                                                   (Eq false (Ult 298 N0)))
                                              (Ult N0 298))
                                         (Eq false (Ult 273 N0)))
                                    (Ult N0 273))
                               (Eq false (Ult 261 N0)))
                          (Ult N0 261))
                     (Ult 175 N0))
                (Eq false (Ult 258 N0)))
           (Ult N0 258))
      (Ult 256 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [61]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Ult 920 N0))
                                         (Eq false (Ult 944 N0)))
                                    (Ult N0 944))
                               (Eq false (Ult 932 N0)))
                          (Ult N0 932))
                     (Ult 925 N0))
                (Ult 928 N0))
           (Ult 929 N0))
      (Ult N0 931))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Ult 12628 N0))
                               (Ult 12640 N0))
                          (Eq false (Ult 12664 N0)))
                     (Ult N0 12664))
                (Eq false (Ult 12643 N0)))
           (Ult N0 12643))
      (Ult 12641 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Ult 1066 N0))
                                    (Ult 1089 N0))
                               (Eq false (Ult 1101 N0)))
                          (Ult N0 1101))
                     (Ult 1095 N0))
                (Eq false (Ult 1098 N0)))
           (Ult N0 1098))
      (Ult 1096 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Eq false (Ult 3650 N0)))
                                    (Ult N0 3650))
                               (Ult 3622 N0))
                          (Ult 3634 N0))
                     (Eq false (Ult 3640 N0)))
                (Ult N0 3640))
           (Ult 3637 N0))
      (Ult 3638 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Ult 12628 N0))
                               (Ult 12640 N0))
                          (Eq false (Ult 12664 N0)))
                     (Ult N0 12664))
                (Ult 12643 N0))
           (Ult 12653 N0))
      (Ult 12657 N0))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Ult 8224 N0))
                                    (Eq false (Ult 8356 N0)))
                               (Ult N0 8356))
                          (Ult 8248 N0))
                     (Eq false (Ult 8353 N0)))
                (Ult N0 8353))
           (Eq false (Ult 8254 N0)))
      (Ult N0 8254))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Ult 4521 N0))
                               (Ult 4533 N0))
                          (Eq false (Ult 4539 N0)))
                     (Ult N0 4539))
                (Eq false (Ult 4536 N0)))
           (Ult N0 4536))
      (Ult 4534 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Eq false (Ult 4521 N0)))
                               (Ult N0 4521))
                          (Ult 3661 N0))
                     (Ult 3669 N0))
                (Ult 3672 N0))
           (Ult 3673 N0))
      (Eq false (Ult N0 4520)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Eq false (Ult 298 N0)))
                                    (Ult N0 298))
                               (Eq false (Ult 273 N0)))
                          (Ult N0 273))
                     (Ult 261 N0))
                (Ult 267 N0))
           (Ult 270 N0))
      (Ult 271 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Eq false (Ult 273 N0)))
                               (Ult N0 273))
                          (Ult 261 N0))
                     (Ult 267 N0))
                (Eq false (Ult 270 N0)))
           (Ult N0 270))
      (Ult 268 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Eq false (Ult 1114 N0)))
                                                        (Ult N0 1114))
                                                   (Eq false (Ult 1066 N0)))
                                              (Ult N0 1066))
                                         (Eq false (Ult 1042 N0)))
                                    (Ult N0 1042))
                               (Ult 1029 N0))
                          (Eq false (Ult 1035 N0)))
                     (Ult N0 1035))
                (Eq false (Ult 1032 N0)))
           (Ult N0 1032))
      (Ult 1030 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Ult 298 N0))
                               (Ult 327 N0))
                          (Eq false (Ult 342 N0)))
                     (Ult N0 342))
                (Ult 336 N0))
           (Ult 339 N0))
      (Ult 340 N0))
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [98]




########## Now building the constraint system ##########



########## after path processing, constraint size 8 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Eq false (Ult 968 N0)))
                                         (Ult N0 968))
                                    (Ult 354 N0))
                               (Ult 920 N0))
                          (Ult 944 N0))
                     (Ult 956 N0))
                (Ult 962 N0))
           (Ult 965 N0))
      (Ult 966 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Eq false (Ult 3622 N0)))
                               (Ult N0 3622))
                          (Eq false (Ult 3610 N0)))
                     (Ult N0 3610))
                (Ult 3604 N0))
           (Ult 3607 N0))
      (Eq false (Ult 3608 N0)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Ult 12605 N0))
                                         (Eq false (Ult 12628 N0)))
                                    (Ult N0 12628))
                               (Ult 12616 N0))
                          (Eq false (Ult 12622 N0)))
                     (Ult N0 12622))
                (Eq false (Ult 12619 N0)))
           (Ult N0 12619))
      (Ult 12617 N0))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Ult 8224 N0))
                                    (Eq false (Ult 8356 N0)))
                               (Ult N0 8356))
                          (Eq false (Ult 8248 N0)))
                     (Ult N0 8248))
                (Eq false (Ult 8230 N0)))
           (Ult N0 8230))
      (Eq false (Ult 8225 N0)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Ult 8471 N0))
                                    (Eq false (Ult 8728 N0)))
                               (Ult N0 8728))
                          (Ult 8539 N0))
                     (Eq false (Ult 8594 N0)))
                (Ult N0 8594))
           (Ult 8542 N0))
      (Ult 8592 N0))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Eq false (Ult 1066 N0)))
                                    (Ult N0 1066))
                               (Eq false (Ult 1042 N0)))
                          (Ult N0 1042))
                     (Ult 1029 N0))
                (Ult 1035 N0))
           (Ult 1039 N0))
      (Ult 1040 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Eq false (Ult 920 N0)))
                                    (Ult N0 920))
                               (Ult 381 N0))
                          (Eq false (Ult 906 N0)))
                     (Ult N0 906))
                (Ult 731 N0))
           (Ult 902 N0))
      (Ult 904 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Eq false (Ult 968 N0)))
                                                                  (Ult N0 968))
                                                             (Eq false (Ult 354 N0)))
                                                        (Ult N0 354))
                                                   (Ult 298 N0))
                                              (Eq false (Ult 327 N0)))
                                         (Ult N0 327))
                                    (Eq false (Ult 313 N0)))
                               (Ult N0 313))
                          (Eq false (Ult 305 N0)))
                     (Ult N0 305))
                (Eq false (Ult 302 N0)))
           (Ult N0 302))
      (Eq false (Ult 299 N0)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Ult 920 N0))
                                         (Eq false (Ult 944 N0)))
                                    (Ult N0 944))
                               (Eq false (Ult 932 N0)))
                          (Ult N0 932))
                     (Eq false (Ult 925 N0)))
                (Ult N0 925))
           (Eq false (Ult 922 N0)))
      (Ult N0 922))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Ult 273 N0))
                               (Eq false (Ult 286 N0)))
                          (Ult N0 286))
                     (Eq false (Ult 280 N0)))
                (Ult N0 280))
           (Eq false (Ult 275 N0)))
      (Ult N0 275))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Ult 12483 N0))
                                                   (Eq false (Ult 12605 N0)))
                                              (Ult N0 12605))
                                         (Ult 12519 N0))
                                    (Eq false (Ult 12593 N0)))
                               (Ult N0 12593))
                          (Ult 12525 N0))
                     (Eq false (Ult 12531 N0)))
                (Ult N0 12531))
           (Eq false (Ult 12527 N0)))
      (Eq false (Ult N0 12527)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Ult 1581 N0))
                                         (Eq false (Ult 1609 N0)))
                                    (Ult N0 1609))
                               (Eq false (Ult 1592 N0)))
                          (Ult N0 1592))
                     (Eq false (Ult 1586 N0)))
                (Ult N0 1586))
           (Ult 1583 N0))
      (Ult 1584 N0))
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Eq false (Ult 12443 N0)))
                                    (Ult N0 12443))
                               (Ult 9829 N0))
                          (Eq false (Ult 10013 N0)))
                     (Ult N0 10013))
                (Ult 9839 N0))
           (Eq false (Ult 10003 N0)))
      (Eq false (Ult N0 10003)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Ult 1066 N0))
                                         (Ult 1089 N0))
                                    (Ult 1101 N0))
                               (Eq false (Ult 1108 N0)))
                          (Ult N0 1108))
                     (Eq false (Ult 1105 N0)))
                (Ult N0 1105))
           (Ult 1102 N0))
      (Ult 1103 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Eq false (Ult 1066 N0)))
                                         (Ult N0 1066))
                                    (Ult 1042 N0))
                               (Ult 1054 N0))
                          (Eq false (Ult 1060 N0)))
                     (Ult N0 1060))
                (Eq false (Ult 1057 N0)))
           (Ult N0 1057))
      (Eq false (Ult 1055 N0)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [81]




########## Now building the constraint system ##########



########## after path processing, constraint size 7 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Eq false (Ult 8471 N0)))
                                    (Ult N0 8471))
                               (Ult 8224 N0))
                          (Ult 8356 N0))
                     (Ult 8361 N0))
                (Ult 8364 N0))
           (Ult 8453 N0))
      (Ult N0 8470))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Ult 9492 N0))
                                    (Eq false (Ult 9644 N0)))
                               (Ult N0 9644))
                          (Ult 9532 N0))
                     (Eq false (Ult 9633 N0)))
                (Ult N0 9633))
           (Eq false (Ult 9618 N0)))
      (Ult N0 9618))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Ult 12628 N0))
                               (Ult 12640 N0))
                          (Ult 12664 N0))
                     (Eq false (Ult 12678 N0)))
                (Ult N0 12678))
           (Ult 12671 N0))
      (Ult 12676 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Eq false (Ult 4545 N0)))
                                                        (Ult N0 4545))
                                                   (Eq false (Ult 3650 N0)))
                                              (Ult N0 3650))
                                         (Eq false (Ult 3622 N0)))
                                    (Ult N0 3622))
                               (Eq false (Ult 3610 N0)))
                          (Ult N0 3610))
                     (Ult 3604 N0))
                (Eq false (Ult 3607 N0)))
           (Ult N0 3607))
      (Eq false (Ult 3605 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Ult 8224 N0))
                                    (Eq false (Ult 8356 N0)))
                               (Ult N0 8356))
                          (Eq false (Ult 8248 N0)))
                     (Ult N0 8248))
                (Ult 8230 N0))
           (Eq false (Ult 8242 N0)))
      (Ult N0 8242))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Eq false (Ult 8471 N0)))
                                         (Ult N0 8471))
                                    (Eq false (Ult 8224 N0)))
                               (Ult N0 8224))
                          (Ult 8202 N0))
                     (Ult 8216 N0))
                (Ult 8220 N0))
           (Ult 8221 N0))
      (Ult 8222 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Ult 8471 N0))
                                              (Ult 8728 N0))
                                         (Eq false (Ult 8747 N0)))
                                    (Ult N0 8747))
                               (Eq false (Ult 8744 N0)))
                          (Ult N0 8744))
                     (Eq false (Ult 8734 N0)))
                (Ult N0 8734))
           (Ult 8730 N0))
      (Eq false (Ult N0 8733)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Ult 12628 N0))
                               (Eq false (Ult 12640 N0)))
                          (Ult N0 12640))
                     (Eq false (Ult 12634 N0)))
                (Ult N0 12634))
           (Ult 12631 N0))
      (Ult 12632 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Ult 12483 N0))
                                                   (Eq false (Ult 12605 N0)))
                                              (Ult N0 12605))
                                         (Ult 12519 N0))
                                    (Eq false (Ult 12593 N0)))
                               (Ult N0 12593))
                          (Ult 12525 N0))
                     (Eq false (Ult 12531 N0)))
                (Ult N0 12531))
           (Eq false (Ult 12527 N0)))
      (Ult N0 12527))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Ult 12519 N0))
                               (Eq false (Ult 12593 N0)))
                          (Ult N0 12593))
                     (Ult 12525 N0))
                (Ult 12531 N0))
           (Ult 12539 N0))
      (Eq false (Ult 12540 N0)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Eq false (Ult 9492 N0)))
                                    (Ult N0 9492))
                               (Ult 9225 N0))
                          (Ult 9252 N0))
                     (Eq false (Ult 9474 N0)))
                (Ult N0 9474))
           (Eq false (Ult 9472 N0)))
      (Eq false (Ult N0 9472)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Eq false (Ult 968 N0)))
                                                                  (Ult N0 968))
                                                             (Eq false (Ult 354 N0)))
                                                        (Ult N0 354))
                                                   (Ult 298 N0))
                                              (Eq false (Ult 327 N0)))
                                         (Ult N0 327))
                                    (Eq false (Ult 313 N0)))
                               (Ult N0 313))
                          (Eq false (Ult 305 N0)))
                     (Ult N0 305))
                (Eq false (Ult 302 N0)))
           (Ult N0 302))
      (Ult 299 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Ult 1066 N0))
                                         (Ult 1089 N0))
                                    (Ult 1101 N0))
                               (Eq false (Ult 1108 N0)))
                          (Ult N0 1108))
                     (Eq false (Ult 1105 N0)))
                (Ult N0 1105))
           (Ult 1102 N0))
      (Eq false (Ult 1103 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Ult 273 N0))
                               (Eq false (Ult 286 N0)))
                          (Ult N0 286))
                     (Ult 280 N0))
                (Eq false (Ult 283 N0)))
           (Ult N0 283))
      (Eq false (Ult 281 N0)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Eq false (Ult 968 N0)))
                                                                  (Ult N0 968))
                                                             (Eq false (Ult 354 N0)))
                                                        (Ult N0 354))
                                                   (Ult 298 N0))
                                              (Eq false (Ult 327 N0)))
                                         (Ult N0 327))
                                    (Eq false (Ult 313 N0)))
                               (Ult N0 313))
                          (Ult 305 N0))
                     (Eq false (Ult 310 N0)))
                (Ult N0 310))
           (Eq false (Ult 308 N0)))
      (Ult N0 308))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Ult 12443 N0))
                               (Eq false (Ult 12459 N0)))
                          (Ult N0 12459))
                     (Ult 12453 N0))
                (Eq false (Ult 12456 N0)))
           (Ult N0 12456))
      (Ult 12454 N0))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Ult 4521 N0))
                               (Eq false (Ult 4533 N0)))
                          (Ult N0 4533))
                     (Eq false (Ult 4527 N0)))
                (Ult N0 4527))
           (Ult 4524 N0))
      (Ult 4525 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Ult 1066 N0))
                                         (Eq false (Ult 1089 N0)))
                                    (Ult N0 1089))
                               (Eq false (Ult 1077 N0)))
                          (Ult N0 1077))
                     (Eq false (Ult 1071 N0)))
                (Ult N0 1071))
           (Ult 1068 N0))
      (Ult 1069 N0))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [88]




########## Now building the constraint system ##########



########## after path processing, constraint size 8 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Eq false (Ult 12483 N0)))
                                         (Ult N0 12483))
                                    (Ult 9675 N0))
                               (Ult 12443 N0))
                          (Ult 12459 N0))
                     (Ult 12471 N0))
                (Ult 12477 N0))
           (Ult 12479 N0))
      (Ult 12481 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Ult 298 N0))
                                    (Eq false (Ult 327 N0)))
                               (Ult N0 327))
                          (Eq false (Ult 313 N0)))
                     (Ult N0 313))
                (Ult 305 N0))
           (Ult 310 N0))
      (Ult 311 N0))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Eq false (Ult 12443 N0)))
                                    (Ult N0 12443))
                               (Ult 9829 N0))
                          (Ult 10013 N0))
                     (Eq false (Ult 12290 N0)))
                (Ult N0 12290))
           (Eq false (Ult 10016 N0)))
      (Eq false (Ult N0 10016)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Ult 273 N0))
                               (Ult 286 N0))
                          (Eq false (Ult 292 N0)))
                     (Ult N0 292))
                (Eq false (Ult 289 N0)))
           (Ult N0 289))
      (Eq false (Ult 287 N0)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Ult 4545 N0))
                                                        (Eq false (Ult 8471 N0)))
                                                   (Ult N0 8471))
                                              (Eq false (Ult 8224 N0)))
                                         (Ult N0 8224))
                                    (Ult 8202 N0))
                               (Eq false (Ult 8216 N0)))
                          (Ult N0 8216))
                     (Eq false (Ult 8212 N0)))
                (Ult N0 8212))
           (Eq false (Ult 8210 N0)))
      (Eq false (Ult N0 8210)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Ult 1114 N0))
                                                   (Eq false (Ult 1581 N0)))
                                              (Ult N0 1581))
                                         (Ult 1506 N0))
                                    (Eq false (Ult 1569 N0)))
                               (Ult N0 1569))
                          (Eq false (Ult 1512 N0)))
                     (Ult N0 1512))
                (Eq false (Ult 1509 N0)))
           (Ult N0 1509))
      (Ult 1507 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Ult 8471 N0))
                                              (Eq false (Ult 8728 N0)))
                                         (Ult N0 8728))
                                    (Eq false (Ult 8539 N0)))
                               (Ult N0 8539))
                          (Eq false (Ult 8533 N0)))
                     (Ult N0 8533))
                (Ult 8482 N0))
           (Eq false (Ult 8531 N0)))
      (Ult N0 8531))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Eq false (Ult 3622 N0)))
                               (Ult N0 3622))
                          (Ult 3610 N0))
                     (Eq false (Ult 3616 N0)))
                (Ult N0 3616))
           (Ult 3613 N0))
      (Eq false (Ult 3614 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [108]




########## Now building the constraint system ##########



########## after path processing, constraint size 9 ##########

(And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                            (And (Ult 31
                                                                      N0:(ReadLSB w32 0 keystroke))
                                                                 (Ule N0 126)))
                                                        (Eq false
                                                            (And (Ult 159 N0) (Ule N0 255))))
                                                   (Eq false (Ult 3599 N0)))
                                              (Ult N0 3599))
                                         (Ult 968 N0))
                                    (Ult 1114 N0))
                               (Ult 1581 N0))
                          (Ult 1609 N0))
                     (Ult 3587 N0))
                (Ult 3593 N0))
           (Ult 3596 N0))
      (Ult 3597 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Ult 12443 N0))
                               (Eq false (Ult 12459 N0)))
                          (Ult N0 12459))
                     (Eq false (Ult 12453 N0)))
                (Ult N0 12453))
           (Ult 12450 N0))
      (Ult 12451 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Ult 8471 N0))
                                              (Eq false (Ult 8728 N0)))
                                         (Ult N0 8728))
                                    (Eq false (Ult 8539 N0)))
                               (Ult N0 8539))
                          (Eq false (Ult 8533 N0)))
                     (Ult N0 8533))
                (Ult 8482 N0))
           (Eq false (Ult 8531 N0)))
      (Eq false (Ult N0 8531)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Ult 1066 N0))
                                    (Eq false (Ult 1089 N0)))
                               (Ult N0 1089))
                          (Ult 1077 N0))
                     (Ult 1083 N0))
                (Eq false (Ult 1086 N0)))
           (Ult N0 1086))
      (Ult 1084 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Ult 8471 N0))
                                         (Eq false (Ult 8728 N0)))
                                    (Ult N0 8728))
                               (Eq false (Ult 8539 N0)))
                          (Ult N0 8539))
                     (Ult 8533 N0))
                (Eq false (Ult 8536 N0)))
           (Ult N0 8536))
      (Ult 8534 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Ult 1066 N0))
                                    (Eq false (Ult 1089 N0)))
                               (Ult N0 1089))
                          (Eq false (Ult 1077 N0)))
                     (Ult N0 1077))
                (Ult 1071 N0))
           (Ult 1074 N0))
      (Ult 1075 N0))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Ult 920 N0))
                               (Ult 944 N0))
                          (Ult 956 N0))
                     (Ult 962 N0))
                (Eq false (Ult 965 N0)))
           (Ult N0 965))
      (Ult 963 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Eq false (Ult 9492 N0)))
                                         (Ult N0 9492))
                                    (Ult 9225 N0))
                               (Eq false (Ult 9252 N0)))
                          (Ult N0 9252))
                     (Ult 9228 N0))
                (Ult 9229 N0))
           (Eq false (Ult 9250 N0)))
      (Ult N0 9250))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [78]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Eq false (Ult 1581 N0)))
                               (Ult N0 1581))
                          (Ult 1506 N0))
                     (Ult 1569 N0))
                (Ult 1575 N0))
           (Ult 1578 N0))
      (Ult 1579 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Ult 8471 N0))
                                         (Eq false (Ult 8728 N0)))
                                    (Ult N0 8728))
                               (Ult 8539 N0))
                          (Ult 8594 N0))
                     (Ult 8660 N0))
                (Ult 8706 N0))
           (Eq false (Ult 8711 N0)))
      (Ult N0 8711))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Ult 12605 N0))
                                         (Ult 12628 N0))
                                    (Ult 12640 N0))
                               (Eq false (Ult 12664 N0)))
                          (Ult N0 12664))
                     (Ult 12643 N0))
                (Ult 12653 N0))
           (Eq false (Ult 12657 N0)))
      (Eq false (Ult N0 12657)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Eq false (Ult 9492 N0)))
                                         (Ult N0 9492))
                                    (Eq false (Ult 9225 N0)))
                               (Ult N0 9225))
                          (Ult 8981 N0))
                     (Eq false (Ult 9001 N0)))
                (Ult N0 9001))
           (Eq false (Ult 8992 N0)))
      (Ult N0 8992))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Eq false (Ult 4545 N0)))
                                         (Ult N0 4545))
                                    (Ult 3650 N0))
                               (Ult 4521 N0))
                          (Eq false (Ult 4533 N0)))
                     (Ult N0 4533))
                (Ult 4527 N0))
           (Ult 4530 N0))
      (Ult 4531 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Eq false (Ult 9492 N0)))
                                    (Ult N0 9492))
                               (Ult 9225 N0))
                          (Ult 9252 N0))
                     (Eq false (Ult 9474 N0)))
                (Ult N0 9474))
           (Eq false (Ult 9472 N0)))
      (Ult N0 9472))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Eq false (Ult 920 N0)))
                                         (Ult N0 920))
                                    (Eq false (Ult 381 N0)))
                               (Ult N0 381))
                          (Eq false (Ult 365 N0)))
                     (Ult N0 365))
                (Ult 359 N0))
           (Ult 362 N0))
      (Ult 363 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Ult 9492 N0))
                                         (Eq false (Ult 9644 N0)))
                                    (Ult N0 9644))
                               (Eq false (Ult 9532 N0)))
                          (Ult N0 9532))
                     (Eq false (Ult 9508 N0)))
                (Ult N0 9508))
           (Eq false (Ult 9496 N0)))
      (Eq false (Ult N0 9496)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Ult 381 N0))
                                    (Ult 906 N0))
                               (Eq false (Ult 914 N0)))
                          (Ult N0 914))
                     (Eq false (Ult 911 N0)))
                (Ult N0 911))
           (Eq false (Ult 908 N0)))
      (Eq false (Ult N0 908)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Ult 1066 N0))
                                    (Eq false (Ult 1089 N0)))
                               (Ult N0 1089))
                          (Ult 1077 N0))
                     (Eq false (Ult 1083 N0)))
                (Ult N0 1083))
           (Ult 1080 N0))
      (Ult 1081 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Ult 298 N0))
                                    (Ult 327 N0))
                               (Ult 342 N0))
                          (Eq false (Ult 348 N0)))
                     (Ult N0 348))
                (Eq false (Ult 345 N0)))
           (Ult N0 345))
      (Ult 343 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Ult 1581 N0))
                                         (Eq false (Ult 1609 N0)))
                                    (Ult N0 1609))
                               (Eq false (Ult 1592 N0)))
                          (Ult N0 1592))
                     (Ult 1586 N0))
                (Eq false (Ult 1589 N0)))
           (Ult N0 1589))
      (Ult 1587 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Eq false (Ult 1066 N0)))
                                    (Ult N0 1066))
                               (Ult 1042 N0))
                          (Ult 1054 N0))
                     (Ult 1060 N0))
                (Eq false (Ult 1063 N0)))
           (Ult N0 1063))
      (Ult 1061 N0))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Eq false (Ult 12519 N0)))
                               (Ult N0 12519))
                          (Ult 12501 N0))
                     (Ult 12513 N0))
                (Eq false (Ult 12516 N0)))
           (Ult N0 12516))
      (Ult 12514 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Eq false (Ult 3622 N0)))
                               (Ult N0 3622))
                          (Eq false (Ult 3610 N0)))
                     (Ult N0 3610))
                (Ult 3604 N0))
           (Ult 3607 N0))
      (Ult 3608 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [78]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Eq false (Ult 920 N0)))
                               (Ult N0 920))
                          (Ult 381 N0))
                     (Ult 906 N0))
                (Ult 914 N0))
           (Ult 917 N0))
      (Ult 918 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Ult 1506 N0))
                               (Eq false (Ult 1569 N0)))
                          (Ult N0 1569))
                     (Eq false (Ult 1512 N0)))
                (Ult N0 1512))
           (Ult 1509 N0))
      (Ult 1510 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Eq false (Ult 1506 N0)))
                               (Ult N0 1506))
                          (Ult 1494 N0))
                     (Eq false (Ult 1500 N0)))
                (Ult N0 1500))
           (Ult 1497 N0))
      (Ult 1498 N0))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Ult 8471 N0))
                                              (Ult 8728 N0))
                                         (Eq false (Ult 8747 N0)))
                                    (Ult N0 8747))
                               (Eq false (Ult 8744 N0)))
                          (Ult N0 8744))
                     (Eq false (Ult 8734 N0)))
                (Ult N0 8734))
           (Ult 8730 N0))
      (Ult N0 8733))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [71]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Eq false (Ult 4521 N0)))
                               (Ult N0 4521))
                          (Ult 3661 N0))
                     (Ult 3669 N0))
                (Ult 3672 N0))
           (Ult 3673 N0))
      (Ult N0 4520))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Eq false (Ult 9492 N0)))
                                         (Ult N0 9492))
                                    (Eq false (Ult 9225 N0)))
                               (Ult N0 9225))
                          (Ult 8981 N0))
                     (Eq false (Ult 9001 N0)))
                (Ult N0 9001))
           (Eq false (Ult 8992 N0)))
      (Eq false (Ult N0 8992)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [51]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Ult 8471 N0))
                                    (Ult 8728 N0))
                               (Ult 8747 N0))
                          (Eq false (Ult 8805 N0)))
                     (Ult N0 8805))
                (Ult 8800 N0))
           (Ult 8801 N0))
      (Ult N0 8804))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Ult 12519 N0))
                               (Eq false (Ult 12593 N0)))
                          (Ult N0 12593))
                     (Eq false (Ult 12525 N0)))
                (Ult N0 12525))
           (Ult 12522 N0))
      (Ult 12523 N0))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Ult 920 N0))
                                    (Ult 944 N0))
                               (Ult 956 N0))
                          (Eq false (Ult 962 N0)))
                     (Ult N0 962))
                (Eq false (Ult 959 N0)))
           (Ult N0 959))
      (Ult 957 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Eq false (Ult 8471 N0)))
                                         (Ult N0 8471))
                                    (Ult 8224 N0))
                               (Ult 8356 N0))
                          (Eq false (Ult 8361 N0)))
                     (Ult N0 8361))
                (Eq false (Ult 8359 N0)))
           (Ult N0 8359))
      (Ult 8357 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 6 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Eq false (Ult 12443 N0)))
                               (Ult N0 12443))
                          (Ult 9829 N0))
                     (Ult 10013 N0))
                (Ult 12290 N0))
           (Ult 12300 N0))
      (Ult 12301 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Ult 12483 N0))
                                                   (Eq false (Ult 12605 N0)))
                                              (Ult N0 12605))
                                         (Eq false (Ult 12519 N0)))
                                    (Ult N0 12519))
                               (Eq false (Ult 12501 N0)))
                          (Ult N0 12501))
                     (Ult 12491 N0))
                (Ult 12494 N0))
           (Ult 12495 N0))
      (Ult 12498 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Ult 1066 N0))
                                    (Ult 1089 N0))
                               (Eq false (Ult 1101 N0)))
                          (Ult N0 1101))
                     (Eq false (Ult 1095 N0)))
                (Ult N0 1095))
           (Ult 1092 N0))
      (Ult 1093 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Eq false (Ult 298 N0)))
                                    (Ult N0 298))
                               (Ult 273 N0))
                          (Eq false (Ult 286 N0)))
                     (Ult N0 286))
                (Ult 280 N0))
           (Ult 283 N0))
      (Ult 284 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Ult 8471 N0))
                                         (Ult 8728 N0))
                                    (Ult 8747 N0))
                               (Eq false (Ult 8805 N0)))
                          (Ult N0 8805))
                     (Eq false (Ult 8800 N0)))
                (Ult N0 8800))
           (Eq false (Ult 8756 N0)))
      (Ult N0 8756))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Eq false (Ult 12443 N0)))
                                    (Ult N0 12443))
                               (Ult 9829 N0))
                          (Eq false (Ult 10013 N0)))
                     (Ult N0 10013))
                (Ult 9839 N0))
           (Eq false (Ult 10003 N0)))
      (Ult N0 10003))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Eq false (Ult 9492 N0)))
                                    (Ult N0 9492))
                               (Ult 9225 N0))
                          (Ult 9252 N0))
                     (Ult 9474 N0))
                (Ult 9484 N0))
           (Eq false (Ult 9488 N0)))
      (Ult N0 9488))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Ult 12483 N0))
                                                        (Eq false (Ult 12605 N0)))
                                                   (Ult N0 12605))
                                              (Eq false (Ult 12519 N0)))
                                         (Ult N0 12519))
                                    (Eq false (Ult 12501 N0)))
                               (Ult N0 12501))
                          (Eq false (Ult 12491 N0)))
                     (Ult N0 12491))
                (Ult 12486 N0))
           (Eq false (Ult 12488 N0)))
      (Eq false (Ult N0 12488)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Ult 8471 N0))
                                              (Eq false (Ult 8728 N0)))
                                         (Ult N0 8728))
                                    (Eq false (Ult 8539 N0)))
                               (Ult N0 8539))
                          (Eq false (Ult 8533 N0)))
                     (Ult N0 8533))
                (Eq false (Ult 8482 N0)))
           (Ult N0 8482))
      (Ult 8478 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Ult 3622 N0))
                               (Ult 3634 N0))
                          (Eq false (Ult 3640 N0)))
                     (Ult N0 3640))
                (Eq false (Ult 3637 N0)))
           (Ult N0 3637))
      (Eq false (Ult 3635 N0)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Ult 8471 N0))
                                    (Eq false (Ult 8728 N0)))
                               (Ult N0 8728))
                          (Eq false (Ult 8539 N0)))
                     (Ult N0 8539))
                (Ult 8533 N0))
           (Ult 8536 N0))
      (Ult 8537 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb6, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Ult 920 N0))
                                         (Eq false (Ult 944 N0)))
                                    (Ult N0 944))
                               (Eq false (Ult 932 N0)))
                          (Ult N0 932))
                     (Eq false (Ult 925 N0)))
                (Ult N0 925))
           (Ult 922 N0))
      (Ult 923 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Eq false (Ult 12443 N0)))
                                    (Ult N0 12443))
                               (Ult 9829 N0))
                          (Ult 10013 N0))
                     (Eq false (Ult 12290 N0)))
                (Ult N0 12290))
           (Ult 10016 N0))
      (Eq false (Ult N0 12289)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Ult 920 N0))
                                         (Eq false (Ult 944 N0)))
                                    (Ult N0 944))
                               (Ult 932 N0))
                          (Eq false (Ult 938 N0)))
                     (Ult N0 938))
                (Eq false (Ult 935 N0)))
           (Ult N0 935))
      (Ult 933 N0))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Eq false (Ult 1066 N0)))
                                         (Ult N0 1066))
                                    (Ult 1042 N0))
                               (Eq false (Ult 1054 N0)))
                          (Ult N0 1054))
                     (Eq false (Ult 1048 N0)))
                (Ult N0 1048))
           (Ult 1045 N0))
      (Eq false (Ult 1046 N0)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Eq false (Ult 968 N0)))
                                                                  (Ult N0 968))
                                                             (Eq false (Ult 354 N0)))
                                                        (Ult N0 354))
                                                   (Eq false (Ult 298 N0)))
                                              (Ult N0 298))
                                         (Eq false (Ult 273 N0)))
                                    (Ult N0 273))
                               (Ult 261 N0))
                          (Eq false (Ult 267 N0)))
                     (Ult N0 267))
                (Eq false (Ult 264 N0)))
           (Ult N0 264))
      (Eq false (Ult 262 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Eq false (Ult 8471 N0)))
                                         (Ult N0 8471))
                                    (Eq false (Ult 8224 N0)))
                               (Ult N0 8224))
                          (Eq false (Ult 8202 N0)))
                     (Ult N0 8202))
                (Ult 8195 N0))
           (Ult 8199 N0))
      (Ult 8200 N0))
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Ult 298 N0))
                                         (Eq false (Ult 327 N0)))
                                    (Ult N0 327))
                               (Eq false (Ult 313 N0)))
                          (Ult N0 313))
                     (Eq false (Ult 305 N0)))
                (Ult N0 305))
           (Ult 302 N0))
      (Ult 303 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Ult 12483 N0))
                                                        (Eq false (Ult 12605 N0)))
                                                   (Ult N0 12605))
                                              (Eq false (Ult 12519 N0)))
                                         (Ult N0 12519))
                                    (Eq false (Ult 12501 N0)))
                               (Ult N0 12501))
                          (Eq false (Ult 12491 N0)))
                     (Ult N0 12491))
                (Eq false (Ult 12486 N0)))
           (Ult N0 12486))
      (Eq false (Ult 12484 N0)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Eq false (Ult 920 N0)))
                                         (Ult N0 920))
                                    (Eq false (Ult 381 N0)))
                               (Ult N0 381))
                          (Ult 365 N0))
                     (Ult 371 N0))
                (Eq false (Ult 378 N0)))
           (Ult N0 378))
      (Ult 376 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Eq false (Ult 4545 N0)))
                                                        (Ult N0 4545))
                                                   (Ult 3650 N0))
                                              (Eq false (Ult 4521 N0)))
                                         (Ult N0 4521))
                                    (Ult 3661 N0))
                               (Eq false (Ult 3669 N0)))
                          (Ult N0 3669))
                     (Eq false (Ult 3666 N0)))
                (Ult N0 3666))
           (Eq false (Ult 3664 N0)))
      (Ult N0 3664))
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Ult 3599 N0))
                                                                            (Ult 8867 N0))
                                                                       (Eq false (Ult 12483 N0)))
                                                                  (Ult N0 12483))
                                                             (Eq false (Ult 9675 N0)))
                                                        (Ult N0 9675))
                                                   (Eq false (Ult 9492 N0)))
                                              (Ult N0 9492))
                                         (Eq false (Ult 9225 N0)))
                                    (Ult N0 9225))
                               (Eq false (Ult 8981 N0)))
                          (Ult N0 8981))
                     (Ult 8869 N0))
                (Ult 8968 N0))
           (Eq false (Ult 8970 N0)))
      (Ult N0 8970))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Ult 1066 N0))
                                         (Eq false (Ult 1089 N0)))
                                    (Ult N0 1089))
                               (Eq false (Ult 1077 N0)))
                          (Ult N0 1077))
                     (Ult 1071 N0))
                (Eq false (Ult 1074 N0)))
           (Ult N0 1074))
      (Ult 1072 N0))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Ult 298 N0))
                                    (Eq false (Ult 327 N0)))
                               (Ult N0 327))
                          (Ult 313 N0))
                     (Ult 321 N0))
                (Eq false (Ult 324 N0)))
           (Ult N0 324))
      (Ult 322 N0))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Ult 298 N0))
                                         (Ult 327 N0))
                                    (Eq false (Ult 342 N0)))
                               (Ult N0 342))
                          (Eq false (Ult 336 N0)))
                     (Ult N0 336))
                (Ult 331 N0))
           (Ult 332 N0))
      (Eq false (Ult 333 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Ult 12605 N0))
                                         (Ult 12628 N0))
                                    (Ult 12640 N0))
                               (Eq false (Ult 12664 N0)))
                          (Ult N0 12664))
                     (Ult 12643 N0))
                (Ult 12653 N0))
           (Eq false (Ult 12657 N0)))
      (Ult N0 12657))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Ult 920 N0))
                                         (Eq false (Ult 944 N0)))
                                    (Ult N0 944))
                               (Eq false (Ult 932 N0)))
                          (Ult N0 932))
                     (Ult 925 N0))
                (Eq false (Ult 928 N0)))
           (Ult N0 928))
      (Ult 926 N0))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Ult 298 N0))
                                    (Ult 327 N0))
                               (Eq false (Ult 342 N0)))
                          (Ult N0 342))
                     (Ult 336 N0))
                (Eq false (Ult 339 N0)))
           (Ult N0 339))
      (Ult 337 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Eq false (Ult 4521 N0)))
                               (Ult N0 4521))
                          (Ult 3661 N0))
                     (Ult 3669 N0))
                (Eq false (Ult 3672 N0)))
           (Ult N0 3672))
      (Ult 3670 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Ult 381 N0))
                                    (Eq false (Ult 906 N0)))
                               (Ult N0 906))
                          (Ult 731 N0))
                     (Eq false (Ult 902 N0)))
                (Ult N0 902))
           (Ult 733 N0))
      (Eq false (Ult N0 901)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Eq false (Ult 8867 N0)))
                                                   (Ult N0 8867))
                                              (Ult 4545 N0))
                                         (Eq false (Ult 8471 N0)))
                                    (Ult N0 8471))
                               (Ult 8224 N0))
                          (Ult 8356 N0))
                     (Ult 8361 N0))
                (Eq false (Ult 8364 N0)))
           (Ult N0 8364))
      (Ult 8362 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Eq false (Ult 1114 N0)))
                                                        (Ult N0 1114))
                                                   (Eq false (Ult 1066 N0)))
                                              (Ult N0 1066))
                                         (Eq false (Ult 1042 N0)))
                                    (Ult N0 1042))
                               (Ult 1029 N0))
                          (Ult 1035 N0))
                     (Eq false (Ult 1039 N0)))
                (Ult N0 1039))
           (Ult 1036 N0))
      (Eq false (Ult N0 1038)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Ult 4545 N0))
                                                        (Eq false (Ult 8471 N0)))
                                                   (Ult N0 8471))
                                              (Eq false (Ult 8224 N0)))
                                         (Ult N0 8224))
                                    (Eq false (Ult 8202 N0)))
                               (Ult N0 8202))
                          (Eq false (Ult 8195 N0)))
                     (Ult N0 8195))
                (Eq false (Ult 4587 N0)))
           (Ult N0 4587))
      (Ult 4546 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Ult 12483 N0))
                                                        (Eq false (Ult 12605 N0)))
                                                   (Ult N0 12605))
                                              (Eq false (Ult 12519 N0)))
                                         (Ult N0 12519))
                                    (Ult 12501 N0))
                               (Eq false (Ult 12513 N0)))
                          (Ult N0 12513))
                     (Eq false (Ult 12510 N0)))
                (Ult N0 12510))
           (Eq false (Ult 12504 N0)))
      (Eq false (Ult N0 12504)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Ult 1609 N0))
                               (Eq false (Ult 3587 N0)))
                          (Ult N0 3587))
                     (Eq false (Ult 1615 N0)))
                (Ult N0 1615))
           (Ult 1612 N0))
      (Ult 1613 N0))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Eq false (Ult 1506 N0)))
                               (Ult N0 1506))
                          (Eq false (Ult 1494 N0)))
                     (Ult N0 1494))
                (Ult 1488 N0))
           (Ult 1491 N0))
      (Ult 1492 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Ult 298 N0))
                                         (Eq false (Ult 327 N0)))
                                    (Ult N0 327))
                               (Eq false (Ult 313 N0)))
                          (Ult N0 313))
                     (Ult 305 N0))
                (Eq false (Ult 310 N0)))
           (Ult N0 310))
      (Ult 308 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Eq false (Ult 1114 N0)))
                                                        (Ult N0 1114))
                                                   (Eq false (Ult 1066 N0)))
                                              (Ult N0 1066))
                                         (Eq false (Ult 1042 N0)))
                                    (Ult N0 1042))
                               (Eq false (Ult 1029 N0)))
                          (Ult N0 1029))
                     (Eq false (Ult 973 N0)))
                (Ult N0 973))
           (Ult 970 N0))
      (Ult 971 N0))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Ult 12443 N0))
                                    (Ult 12459 N0))
                               (Eq false (Ult 12471 N0)))
                          (Ult N0 12471))
                     (Ult 12465 N0))
                (Ult 12467 N0))
           (Eq false (Ult 12469 N0)))
      (Eq false (Ult N0 12469)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Ult 1066 N0))
                                         (Eq false (Ult 1089 N0)))
                                    (Ult N0 1089))
                               (Ult 1077 N0))
                          (Eq false (Ult 1083 N0)))
                     (Ult N0 1083))
                (Eq false (Ult 1080 N0)))
           (Ult N0 1080))
      (Ult 1078 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Eq false (Ult 968 N0)))
                                              (Ult N0 968))
                                         (Ult 354 N0))
                                    (Ult 920 N0))
                               (Ult 944 N0))
                          (Eq false (Ult 956 N0)))
                     (Ult N0 956))
                (Ult 950 N0))
           (Ult 953 N0))
      (Ult 954 N0))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Eq false (Ult 273 N0)))
                               (Ult N0 273))
                          (Ult 261 N0))
                     (Eq false (Ult 267 N0)))
                (Ult N0 267))
           (Ult 264 N0))
      (Ult 265 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Ult 1066 N0))
                                         (Ult 1089 N0))
                                    (Eq false (Ult 1101 N0)))
                               (Ult N0 1101))
                          (Eq false (Ult 1095 N0)))
                     (Ult N0 1095))
                (Eq false (Ult 1092 N0)))
           (Ult N0 1092))
      (Ult 1090 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Eq false (Ult 9492 N0)))
                                    (Ult N0 9492))
                               (Ult 9225 N0))
                          (Ult 9252 N0))
                     (Ult 9474 N0))
                (Ult 9484 N0))
           (Eq false (Ult 9488 N0)))
      (Eq false (Ult N0 9488)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Eq false (Ult 1581 N0)))
                                    (Ult N0 1581))
                               (Ult 1506 N0))
                          (Ult 1569 N0))
                     (Ult 1575 N0))
                (Eq false (Ult 1578 N0)))
           (Ult N0 1578))
      (Ult 1576 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Ult 8471 N0))
                                              (Eq false (Ult 8728 N0)))
                                         (Ult N0 8728))
                                    (Ult 8539 N0))
                               (Ult 8594 N0))
                          (Eq false (Ult 8660 N0)))
                     (Ult N0 8660))
                (Ult 8595 N0))
           (Eq false (Ult 8658 N0)))
      (Ult N0 8658))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Ult 1581 N0))
                                         (Ult 1609 N0))
                                    (Eq false (Ult 3587 N0)))
                               (Ult N0 3587))
                          (Eq false (Ult 1615 N0)))
                     (Ult N0 1615))
                (Eq false (Ult 1612 N0)))
           (Ult N0 1612))
      (Ult 1610 N0))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Eq false (Ult 298 N0)))
                                    (Ult N0 298))
                               (Ult 273 N0))
                          (Ult 286 N0))
                     (Eq false (Ult 292 N0)))
                (Ult N0 292))
           (Ult 289 N0))
      (Ult 290 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Eq false (Ult 1066 N0)))
                                    (Ult N0 1066))
                               (Ult 1042 N0))
                          (Ult 1054 N0))
                     (Eq false (Ult 1060 N0)))
                (Ult N0 1060))
           (Ult 1057 N0))
      (Ult 1058 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Eq false (Ult 1609 N0)))
                               (Ult N0 1609))
                          (Eq false (Ult 1592 N0)))
                     (Ult N0 1592))
                (Ult 1586 N0))
           (Ult 1589 N0))
      (Ult 1590 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Ult 920 N0))
                                         (Ult 944 N0))
                                    (Eq false (Ult 956 N0)))
                               (Ult N0 956))
                          (Eq false (Ult 950 N0)))
                     (Ult N0 950))
                (Eq false (Ult 947 N0)))
           (Ult N0 947))
      (Eq false (Ult 945 N0)))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Ult 1609 N0))
                               (Ult 3587 N0))
                          (Eq false (Ult 3593 N0)))
                     (Ult N0 3593))
                (Eq false (Ult 3590 N0)))
           (Ult N0 3590))
      (Ult 3588 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Ult 3650 N0))
                                         (Ult 4521 N0))
                                    (Eq false (Ult 4533 N0)))
                               (Ult N0 4533))
                          (Eq false (Ult 4527 N0)))
                     (Ult N0 4527))
                (Eq false (Ult 4524 N0)))
           (Ult N0 4524))
      (Eq false (Ult 4522 N0)))
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Ult 1114 N0))
                                                   (Eq false (Ult 1581 N0)))
                                              (Ult N0 1581))
                                         (Eq false (Ult 1506 N0)))
                                    (Ult N0 1506))
                               (Ult 1494 N0))
                          (Eq false (Ult 1500 N0)))
                     (Ult N0 1500))
                (Eq false (Ult 1497 N0)))
           (Ult N0 1497))
      (Ult 1495 N0))
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Ult 8471 N0))
                                              (Eq false (Ult 8728 N0)))
                                         (Ult N0 8728))
                                    (Ult 8539 N0))
                               (Ult 8594 N0))
                          (Eq false (Ult 8660 N0)))
                     (Ult N0 8660))
                (Ult 8595 N0))
           (Eq false (Ult 8658 N0)))
      (Eq false (Ult N0 8658)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Eq false (Ult 3599 N0)))
                                                   (Ult N0 3599))
                                              (Ult 968 N0))
                                         (Ult 1114 N0))
                                    (Ult 1581 N0))
                               (Ult 1609 N0))
                          (Ult 3587 N0))
                     (Ult 3593 N0))
                (Eq false (Ult 3596 N0)))
           (Ult N0 3596))
      (Ult 3594 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Ult 9492 N0))
                                         (Eq false (Ult 9644 N0)))
                                    (Ult N0 9644))
                               (Eq false (Ult 9532 N0)))
                          (Ult N0 9532))
                     (Eq false (Ult 9508 N0)))
                (Ult N0 9508))
           (Eq false (Ult 9496 N0)))
      (Ult N0 9496))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Ult 1114 N0))
                                                        (Eq false (Ult 1581 N0)))
                                                   (Ult N0 1581))
                                              (Eq false (Ult 1506 N0)))
                                         (Ult N0 1506))
                                    (Eq false (Ult 1494 N0)))
                               (Ult N0 1494))
                          (Eq false (Ult 1488 N0)))
                     (Ult N0 1488))
                (Ult 1116 N0))
           (Eq false (Ult 1118 N0)))
      (Eq false (Ult N0 1118)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Ult 298 N0))
                                    (Eq false (Ult 327 N0)))
                               (Ult N0 327))
                          (Ult 313 N0))
                     (Eq false (Ult 321 N0)))
                (Ult N0 321))
           (Ult 316 N0))
      (Eq false (Ult 317 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Eq false (Ult 3622 N0)))
                               (Ult N0 3622))
                          (Ult 3610 N0))
                     (Ult 3616 N0))
                (Eq false (Ult 3619 N0)))
           (Ult N0 3619))
      (Eq false (Ult 3617 N0)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Eq false (Ult 1114 N0)))
                                                        (Ult N0 1114))
                                                   (Eq false (Ult 1066 N0)))
                                              (Ult N0 1066))
                                         (Eq false (Ult 1042 N0)))
                                    (Ult N0 1042))
                               (Ult 1029 N0))
                          (Ult 1035 N0))
                     (Eq false (Ult 1039 N0)))
                (Ult N0 1039))
           (Ult 1036 N0))
      (Ult N0 1038))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Eq false (Ult 1114 N0)))
                                              (Ult N0 1114))
                                         (Eq false (Ult 1066 N0)))
                                    (Ult N0 1066))
                               (Ult 1042 N0))
                          (Eq false (Ult 1054 N0)))
                     (Ult N0 1054))
                (Ult 1048 N0))
           (Ult 1051 N0))
      (Ult 1052 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Ult 8224 N0))
                                    (Eq false (Ult 8356 N0)))
                               (Ult N0 8356))
                          (Eq false (Ult 8248 N0)))
                     (Ult N0 8248))
                (Ult 8230 N0))
           (Ult 8242 N0))
      (Ult 8243 N0))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [68]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Eq false (Ult 354 N0)))
                                         (Ult N0 354))
                                    (Ult 298 N0))
                               (Eq false (Ult 327 N0)))
                          (Ult N0 327))
                     (Ult 313 N0))
                (Ult 321 N0))
           (Ult 324 N0))
      (Ult 325 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Ult 8471 N0))
                                         (Ult 8728 N0))
                                    (Ult 8747 N0))
                               (Eq false (Ult 8805 N0)))
                          (Ult N0 8805))
                     (Eq false (Ult 8800 N0)))
                (Ult N0 8800))
           (Ult 8756 N0))
      (Ult 8773 N0))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Eq false (Ult 1066 N0)))
                                         (Ult N0 1066))
                                    (Eq false (Ult 1042 N0)))
                               (Ult N0 1042))
                          (Eq false (Ult 1029 N0)))
                     (Ult N0 1029))
                (Ult 973 N0))
           (Ult 1026 N0))
      (Ult 1027 N0))
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Eq false (Ult 8224 N0)))
                                    (Ult N0 8224))
                               (Ult 8202 N0))
                          (Eq false (Ult 8216 N0)))
                     (Ult N0 8216))
                (Ult 8212 N0))
           (Ult 8213 N0))
      (Eq false (Ult N0 8215)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Ult 3650 N0))
                                         (Eq false (Ult 4521 N0)))
                                    (Ult N0 4521))
                               (Eq false (Ult 3661 N0)))
                          (Ult N0 3661))
                     (Eq false (Ult 3655 N0)))
                (Ult N0 3655))
           (Ult 3652 N0))
      (Ult 3653 N0))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Ult 1114 N0))
                                                   (Ult 1581 N0))
                                              (Eq false (Ult 1609 N0)))
                                         (Ult N0 1609))
                                    (Ult 1592 N0))
                               (Eq false (Ult 1603 N0)))
                          (Ult N0 1603))
                     (Eq false (Ult 1600 N0)))
                (Ult N0 1600))
           (Ult 1593 N0))
      (Ult 1594 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Ult 8471 N0))
                                         (Eq false (Ult 8728 N0)))
                                    (Ult N0 8728))
                               (Ult 8539 N0))
                          (Eq false (Ult 8594 N0)))
                     (Ult N0 8594))
                (Eq false (Ult 8542 N0)))
           (Ult N0 8542))
      (Ult 8540 N0))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Ult 1506 N0))
                               (Ult 1569 N0))
                          (Eq false (Ult 1575 N0)))
                     (Ult N0 1575))
                (Eq false (Ult 1572 N0)))
           (Ult N0 1572))
      (Ult 1570 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Eq false (Ult 381 N0)))
                                    (Ult N0 381))
                               (Ult 365 N0))
                          (Eq false (Ult 371 N0)))
                     (Ult N0 371))
                (Eq false (Ult 368 N0)))
           (Ult N0 368))
      (Eq false (Ult 366 N0)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Ult 381 N0))
                                    (Ult 906 N0))
                               (Eq false (Ult 914 N0)))
                          (Ult N0 914))
                     (Eq false (Ult 911 N0)))
                (Ult N0 911))
           (Eq false (Ult 908 N0)))
      (Ult N0 908))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Eq false (Ult 1066 N0)))
                                         (Ult N0 1066))
                                    (Ult 1042 N0))
                               (Eq false (Ult 1054 N0)))
                          (Ult N0 1054))
                     (Ult 1048 N0))
                (Eq false (Ult 1051 N0)))
           (Ult N0 1051))
      (Eq false (Ult 1049 N0)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Ult 298 N0))
                                         (Eq false (Ult 327 N0)))
                                    (Ult N0 327))
                               (Ult 313 N0))
                          (Eq false (Ult 321 N0)))
                     (Ult N0 321))
                (Eq false (Ult 316 N0)))
           (Ult N0 316))
      (Eq false (Ult 314 N0)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Eq false (Ult 381 N0)))
                                    (Ult N0 381))
                               (Eq false (Ult 365 N0)))
                          (Ult N0 365))
                     (Eq false (Ult 359 N0)))
                (Ult N0 359))
           (Ult 356 N0))
      (Ult 357 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Eq false (Ult 4545 N0)))
                                                        (Ult N0 4545))
                                                   (Eq false (Ult 3650 N0)))
                                              (Ult N0 3650))
                                         (Eq false (Ult 3622 N0)))
                                    (Ult N0 3622))
                               (Eq false (Ult 3610 N0)))
                          (Ult N0 3610))
                     (Ult 3604 N0))
                (Eq false (Ult 3607 N0)))
           (Ult N0 3607))
      (Ult 3605 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Ult 12443 N0))
                               (Ult 12459 N0))
                          (Ult 12471 N0))
                     (Eq false (Ult 12477 N0)))
                (Ult N0 12477))
           (Ult 12473 N0))
      (Ult 12475 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Eq false (Ult 4521 N0)))
                               (Ult N0 4521))
                          (Ult 3661 N0))
                     (Eq false (Ult 3669 N0)))
                (Ult N0 3669))
           (Ult 3666 N0))
      (Ult 3667 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Eq false (Ult 968 N0)))
                                                                  (Ult N0 968))
                                                             (Eq false (Ult 354 N0)))
                                                        (Ult N0 354))
                                                   (Eq false (Ult 298 N0)))
                                              (Ult N0 298))
                                         (Ult 273 N0))
                                    (Eq false (Ult 286 N0)))
                               (Ult N0 286))
                          (Eq false (Ult 280 N0)))
                     (Ult N0 280))
                (Ult 275 N0))
           (Eq false (Ult 278 N0)))
      (Ult N0 278))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Eq false (Ult 12443 N0)))
                                         (Ult N0 12443))
                                    (Eq false (Ult 9829 N0)))
                               (Ult N0 9829))
                          (Ult 9747 N0))
                     (Eq false (Ult 9792 N0)))
                (Ult N0 9792))
           (Eq false (Ult 9756 N0)))
      (Eq false (Ult N0 9756)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Ult 298 N0))
                                         (Ult 327 N0))
                                    (Eq false (Ult 342 N0)))
                               (Ult N0 342))
                          (Eq false (Ult 336 N0)))
                     (Ult N0 336))
                (Ult 331 N0))
           (Ult 332 N0))
      (Ult 333 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Ult 9492 N0))
                               (Ult 9644 N0))
                          (Eq false (Ult 9660 N0)))
                     (Ult N0 9660))
                (Ult 9651 N0))
           (Eq false (Ult 9654 N0)))
      (Eq false (Ult N0 9654)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Eq false (Ult 3599 N0)))
                                                        (Ult N0 3599))
                                                   (Ult 968 N0))
                                              (Ult 1114 N0))
                                         (Ult 1581 N0))
                                    (Ult 1609 N0))
                               (Eq false (Ult 3587 N0)))
                          (Ult N0 3587))
                     (Ult 1615 N0))
                (Eq false (Ult 1618 N0)))
           (Ult N0 1618))
      (Ult 1616 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Ult 1114 N0))
                                                   (Ult 1581 N0))
                                              (Eq false (Ult 1609 N0)))
                                         (Ult N0 1609))
                                    (Ult 1592 N0))
                               (Eq false (Ult 1603 N0)))
                          (Ult N0 1603))
                     (Eq false (Ult 1600 N0)))
                (Ult N0 1600))
           (Ult 1593 N0))
      (Eq false (Ult 1594 N0)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Ult 920 N0))
                                    (Ult 944 N0))
                               (Eq false (Ult 956 N0)))
                          (Ult N0 956))
                     (Eq false (Ult 950 N0)))
                (Ult N0 950))
           (Ult 947 N0))
      (Ult 948 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Ult 968 N0))
                                                   (Ult 1114 N0))
                                              (Eq false (Ult 1581 N0)))
                                         (Ult N0 1581))
                                    (Ult 1506 N0))
                               (Eq false (Ult 1569 N0)))
                          (Ult N0 1569))
                     (Ult 1512 N0))
                (Ult 1548 N0))
           (Ult 1563 N0))
      (Ult 1567 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Eq false (Ult 4545 N0)))
                                              (Ult N0 4545))
                                         (Ult 3650 N0))
                                    (Ult 4521 N0))
                               (Eq false (Ult 4533 N0)))
                          (Ult N0 4533))
                     (Ult 4527 N0))
                (Eq false (Ult 4530 N0)))
           (Ult N0 4530))
      (Ult 4528 N0))
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Ult 1114 N0))
                                                   (Eq false (Ult 1581 N0)))
                                              (Ult N0 1581))
                                         (Eq false (Ult 1506 N0)))
                                    (Ult N0 1506))
                               (Eq false (Ult 1494 N0)))
                          (Ult N0 1494))
                     (Ult 1488 N0))
                (Eq false (Ult 1491 N0)))
           (Ult N0 1491))
      (Ult 1489 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Eq false (Ult 12605 N0)))
                                         (Ult N0 12605))
                                    (Eq false (Ult 12519 N0)))
                               (Ult N0 12519))
                          (Ult 12501 N0))
                     (Eq false (Ult 12513 N0)))
                (Ult N0 12513))
           (Ult 12510 N0))
      (Ult 12511 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Ult 1114 N0))
                                                   (Eq false (Ult 1581 N0)))
                                              (Ult N0 1581))
                                         (Eq false (Ult 1506 N0)))
                                    (Ult N0 1506))
                               (Eq false (Ult 1494 N0)))
                          (Ult N0 1494))
                     (Eq false (Ult 1488 N0)))
                (Ult N0 1488))
           (Eq false (Ult 1116 N0)))
      (Ult N0 1116))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Ult 12605 N0))
                                         (Ult 12628 N0))
                                    (Eq false (Ult 12640 N0)))
                               (Ult N0 12640))
                          (Eq false (Ult 12634 N0)))
                     (Ult N0 12634))
                (Eq false (Ult 12631 N0)))
           (Ult N0 12631))
      (Ult 12629 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Eq false (Ult 1066 N0)))
                                         (Ult N0 1066))
                                    (Ult 1042 N0))
                               (Ult 1054 N0))
                          (Eq false (Ult 1060 N0)))
                     (Ult N0 1060))
                (Eq false (Ult 1057 N0)))
           (Ult N0 1057))
      (Ult 1055 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Ult 1114 N0))
                                                        (Eq false (Ult 1581 N0)))
                                                   (Ult N0 1581))
                                              (Eq false (Ult 1506 N0)))
                                         (Ult N0 1506))
                                    (Eq false (Ult 1494 N0)))
                               (Ult N0 1494))
                          (Eq false (Ult 1488 N0)))
                     (Ult N0 1488))
                (Ult 1116 N0))
           (Eq false (Ult 1118 N0)))
      (Ult N0 1118))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Ult 12605 N0))
                                         (Ult 12628 N0))
                                    (Ult 12640 N0))
                               (Ult 12664 N0))
                          (Eq false (Ult 12678 N0)))
                     (Ult N0 12678))
                (Ult 12671 N0))
           (Eq false (Ult 12676 N0)))
      (Eq false (Ult N0 12676)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Ult 9492 N0))
                               (Ult 9644 N0))
                          (Ult 9660 N0))
                     (Eq false (Ult 9665 N0)))
                (Ult N0 9665))
           (Ult 9661 N0))
      (Eq false (Ult N0 9664)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Ult 920 N0))
                                    (Ult 944 N0))
                               (Eq false (Ult 956 N0)))
                          (Ult N0 956))
                     (Ult 950 N0))
                (Eq false (Ult 953 N0)))
           (Ult N0 953))
      (Ult 951 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Eq false (Ult 8867 N0)))
                                                        (Ult N0 8867))
                                                   (Ult 4545 N0))
                                              (Ult 8471 N0))
                                         (Eq false (Ult 8728 N0)))
                                    (Ult N0 8728))
                               (Eq false (Ult 8539 N0)))
                          (Ult N0 8539))
                     (Eq false (Ult 8533 N0)))
                (Ult N0 8533))
           (Ult 8482 N0))
      (Ult 8531 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Ult 9492 N0))
                                    (Eq false (Ult 9644 N0)))
                               (Ult N0 9644))
                          (Eq false (Ult 9532 N0)))
                     (Ult N0 9532))
                (Ult 9508 N0))
           (Ult 9516 N0))
      (Ult 9524 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                 (And (Ult 31
                                                                           N0:(ReadLSB w32 0 keystroke))
                                                                      (Ule N0 126)))
                                                             (Eq false
                                                                 (And (Ult 159 N0) (Ule N0 255))))
                                                        (Ult 3599 N0))
                                                   (Ult 8867 N0))
                                              (Ult 12483 N0))
                                         (Ult 12605 N0))
                                    (Ult 12628 N0))
                               (Eq false (Ult 12640 N0)))
                          (Ult N0 12640))
                     (Ult 12634 N0))
                (Eq false (Ult 12637 N0)))
           (Ult N0 12637))
      (Ult 12635 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Ult 12483 N0))
                                              (Ult 12605 N0))
                                         (Ult 12628 N0))
                                    (Ult 12640 N0))
                               (Ult 12664 N0))
                          (Eq false (Ult 12678 N0)))
                     (Ult N0 12678))
                (Ult 12671 N0))
           (Eq false (Ult 12676 N0)))
      (Ult N0 12676))
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Ult 12483 N0))
                                                        (Eq false (Ult 12605 N0)))
                                                   (Ult N0 12605))
                                              (Eq false (Ult 12519 N0)))
                                         (Ult N0 12519))
                                    (Ult 12501 N0))
                               (Eq false (Ult 12513 N0)))
                          (Ult N0 12513))
                     (Eq false (Ult 12510 N0)))
                (Ult N0 12510))
           (Eq false (Ult 12504 N0)))
      (Ult N0 12504))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb5, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Eq false (Ult 354 N0)))
                                              (Ult N0 354))
                                         (Eq false (Ult 298 N0)))
                                    (Ult N0 298))
                               (Ult 273 N0))
                          (Ult 286 N0))
                     (Ult 292 N0))
                (Eq false (Ult 295 N0)))
           (Ult N0 295))
      (Ult 293 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Ult 12483 N0))
                                                   (Eq false (Ult 12605 N0)))
                                              (Ult N0 12605))
                                         (Ult 12519 N0))
                                    (Eq false (Ult 12593 N0)))
                               (Ult N0 12593))
                          (Ult 12525 N0))
                     (Eq false (Ult 12531 N0)))
                (Ult N0 12531))
           (Ult 12527 N0))
      (Eq false (Ult N0 12530)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Ult 920 N0))
                                         (Ult 944 N0))
                                    (Eq false (Ult 956 N0)))
                               (Ult N0 956))
                          (Eq false (Ult 950 N0)))
                     (Ult N0 950))
                (Eq false (Ult 947 N0)))
           (Ult N0 947))
      (Ult 945 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Ult 9492 N0))
                                         (Eq false (Ult 9644 N0)))
                                    (Ult N0 9644))
                               (Eq false (Ult 9532 N0)))
                          (Ult N0 9532))
                     (Ult 9508 N0))
                (Ult 9516 N0))
           (Eq false (Ult 9524 N0)))
      (Eq false (Ult N0 9524)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Ult 1114 N0))
                                                        (Eq false (Ult 1581 N0)))
                                                   (Ult N0 1581))
                                              (Eq false (Ult 1506 N0)))
                                         (Ult N0 1506))
                                    (Eq false (Ult 1494 N0)))
                               (Ult N0 1494))
                          (Eq false (Ult 1488 N0)))
                     (Ult N0 1488))
                (Ult 1116 N0))
           (Ult 1118 N0))
      (Eq false (Ult 1119 N0)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Ult 1114 N0))
                                                   (Eq false (Ult 1581 N0)))
                                              (Ult N0 1581))
                                         (Ult 1506 N0))
                                    (Eq false (Ult 1569 N0)))
                               (Ult N0 1569))
                          (Ult 1512 N0))
                     (Ult 1548 N0))
                (Ult 1563 N0))
           (Eq false (Ult 1567 N0)))
      (Eq false (Ult N0 1567)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Ult 4545 N0))
                                                        (Ult 8471 N0))
                                                   (Eq false (Ult 8728 N0)))
                                              (Ult N0 8728))
                                         (Eq false (Ult 8539 N0)))
                                    (Ult N0 8539))
                               (Eq false (Ult 8533 N0)))
                          (Ult N0 8533))
                     (Eq false (Ult 8482 N0)))
                (Ult N0 8482))
           (Eq false (Ult 8478 N0)))
      (Ult N0 8478))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Ult 12483 N0))
                                                   (Eq false (Ult 12605 N0)))
                                              (Ult N0 12605))
                                         (Ult 12519 N0))
                                    (Eq false (Ult 12593 N0)))
                               (Ult N0 12593))
                          (Eq false (Ult 12525 N0)))
                     (Ult N0 12525))
                (Eq false (Ult 12522 N0)))
           (Ult N0 12522))
      (Ult 12520 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Ult 968 N0))
                                                                  (Eq false (Ult 1114 N0)))
                                                             (Ult N0 1114))
                                                        (Eq false (Ult 1066 N0)))
                                                   (Ult N0 1066))
                                              (Eq false (Ult 1042 N0)))
                                         (Ult N0 1042))
                                    (Eq false (Ult 1029 N0)))
                               (Ult N0 1029))
                          (Ult 973 N0))
                     (Eq false (Ult 1026 N0)))
                (Ult N0 1026))
           (Ult 974 N0))
      (Ult N0 1025))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Ult 968 N0))
                                                                  (Eq false (Ult 1114 N0)))
                                                             (Ult N0 1114))
                                                        (Eq false (Ult 1066 N0)))
                                                   (Ult N0 1066))
                                              (Eq false (Ult 1042 N0)))
                                         (Ult N0 1042))
                                    (Eq false (Ult 1029 N0)))
                               (Ult N0 1029))
                          (Ult 973 N0))
                     (Eq false (Ult 1026 N0)))
                (Ult N0 1026))
           (Ult 974 N0))
      (Eq false (Ult N0 1025)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Ult 12483 N0))
                                                   (Eq false (Ult 12605 N0)))
                                              (Ult N0 12605))
                                         (Ult 12519 N0))
                                    (Eq false (Ult 12593 N0)))
                               (Ult N0 12593))
                          (Ult 12525 N0))
                     (Eq false (Ult 12531 N0)))
                (Ult N0 12531))
           (Ult 12527 N0))
      (Ult N0 12530))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Eq false (Ult 3599 N0)))
                                                             (Ult N0 3599))
                                                        (Eq false (Ult 968 N0)))
                                                   (Ult N0 968))
                                              (Ult 354 N0))
                                         (Eq false (Ult 920 N0)))
                                    (Ult N0 920))
                               (Ult 381 N0))
                          (Ult 906 N0))
                     (Ult 914 N0))
                (Eq false (Ult 917 N0)))
           (Ult N0 917))
      (Ult 915 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Ult 3599 N0))
                                                                            (Ult 8867 N0))
                                                                       (Eq false (Ult 12483 N0)))
                                                                  (Ult N0 12483))
                                                             (Eq false (Ult 9675 N0)))
                                                        (Ult N0 9675))
                                                   (Eq false (Ult 9492 N0)))
                                              (Ult N0 9492))
                                         (Eq false (Ult 9225 N0)))
                                    (Ult N0 9225))
                               (Eq false (Ult 8981 N0)))
                          (Ult N0 8981))
                     (Ult 8869 N0))
                (Ult 8968 N0))
           (Eq false (Ult 8970 N0)))
      (Eq false (Ult N0 8970)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Ult 4545 N0))
                                                        (Eq false (Ult 8471 N0)))
                                                   (Ult N0 8471))
                                              (Eq false (Ult 8224 N0)))
                                         (Ult N0 8224))
                                    (Eq false (Ult 8202 N0)))
                               (Ult N0 8202))
                          (Eq false (Ult 8195 N0)))
                     (Ult N0 8195))
                (Ult 4587 N0))
           (Eq false (Ult 4601 N0)))
      (Eq false (Ult N0 4601)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Eq false (Ult 4545 N0)))
                                                        (Ult N0 4545))
                                                   (Eq false (Ult 3650 N0)))
                                              (Ult N0 3650))
                                         (Eq false (Ult 3622 N0)))
                                    (Ult N0 3622))
                               (Eq false (Ult 3610 N0)))
                          (Ult N0 3610))
                     (Eq false (Ult 3604 N0)))
                (Ult N0 3604))
           (Ult 3601 N0))
      (Ult 3602 N0))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Eq false (Ult 12443 N0)))
                                    (Ult N0 12443))
                               (Ult 9829 N0))
                          (Ult 10013 N0))
                     (Eq false (Ult 12290 N0)))
                (Ult N0 12290))
           (Ult 10016 N0))
      (Ult N0 12289))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Ult 3622 N0))
                               (Ult 3634 N0))
                          (Eq false (Ult 3640 N0)))
                     (Ult N0 3640))
                (Eq false (Ult 3637 N0)))
           (Ult N0 3637))
      (Ult 3635 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Eq false (Ult 9492 N0)))
                                    (Ult N0 9492))
                               (Eq false (Ult 9225 N0)))
                          (Ult N0 9225))
                     (Ult 8981 N0))
                (Ult 9001 N0))
           (Ult 9002 N0))
      (Ult 9109 N0))
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Eq false (Ult 1066 N0)))
                                         (Ult N0 1066))
                                    (Ult 1042 N0))
                               (Eq false (Ult 1054 N0)))
                          (Ult N0 1054))
                     (Ult 1048 N0))
                (Eq false (Ult 1051 N0)))
           (Ult N0 1051))
      (Ult 1049 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Eq false (Ult 9492 N0)))
                                         (Ult N0 9492))
                                    (Eq false (Ult 9225 N0)))
                               (Ult N0 9225))
                          (Ult 8981 N0))
                     (Ult 9001 N0))
                (Ult 9002 N0))
           (Eq false (Ult 9109 N0)))
      (Eq false (Ult N0 9109)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Eq false (Ult 1114 N0)))
                                                        (Ult N0 1114))
                                                   (Eq false (Ult 1066 N0)))
                                              (Ult N0 1066))
                                         (Ult 1042 N0))
                                    (Eq false (Ult 1054 N0)))
                               (Ult N0 1054))
                          (Eq false (Ult 1048 N0)))
                     (Ult N0 1048))
                (Eq false (Ult 1045 N0)))
           (Ult N0 1045))
      (Eq false (Ult 1043 N0)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Ult 12443 N0))
                                         (Eq false (Ult 12459 N0)))
                                    (Ult N0 12459))
                               (Eq false (Ult 12453 N0)))
                          (Ult N0 12453))
                     (Eq false (Ult 12450 N0)))
                (Ult N0 12450))
           (Ult 12444 N0))
      (Eq false (Ult N0 12449)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Eq false (Ult 12443 N0)))
                               (Ult N0 12443))
                          (Ult 9829 N0))
                     (Ult 10013 N0))
                (Ult 12290 N0))
           (Ult 12300 N0))
      (Eq false (Ult 12301 N0)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Eq false (Ult 8224 N0)))
                                    (Ult N0 8224))
                               (Ult 8202 N0))
                          (Eq false (Ult 8216 N0)))
                     (Ult N0 8216))
                (Eq false (Ult 8212 N0)))
           (Ult N0 8212))
      (Ult 8210 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Ult 273 N0))
                               (Eq false (Ult 286 N0)))
                          (Ult N0 286))
                     (Ult 280 N0))
                (Eq false (Ult 283 N0)))
           (Ult N0 283))
      (Ult 281 N0))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Ult 12443 N0))
                                         (Eq false (Ult 12459 N0)))
                                    (Ult N0 12459))
                               (Eq false (Ult 12453 N0)))
                          (Ult N0 12453))
                     (Eq false (Ult 12450 N0)))
                (Ult N0 12450))
           (Ult 12444 N0))
      (Ult N0 12449))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Ult 1114 N0))
                                                        (Eq false (Ult 1581 N0)))
                                                   (Ult N0 1581))
                                              (Eq false (Ult 1506 N0)))
                                         (Ult N0 1506))
                                    (Eq false (Ult 1494 N0)))
                               (Ult N0 1494))
                          (Eq false (Ult 1488 N0)))
                     (Ult N0 1488))
                (Ult 1116 N0))
           (Ult 1118 N0))
      (Ult 1119 N0))
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Eq false (Ult 12443 N0)))
                                         (Ult N0 12443))
                                    (Eq false (Ult 9829 N0)))
                               (Ult N0 9829))
                          (Eq false (Ult 9747 N0)))
                     (Ult N0 9747))
                (Ult 9702 N0))
           (Eq false (Ult 9734 N0)))
      (Ult N0 9734))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Ult 9492 N0))
                               (Ult 9644 N0))
                          (Eq false (Ult 9660 N0)))
                     (Ult N0 9660))
                (Ult 9651 N0))
           (Eq false (Ult 9654 N0)))
      (Ult N0 9654))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Eq false (Ult 968 N0)))
                                                                  (Ult N0 968))
                                                             (Ult 354 N0))
                                                        (Eq false (Ult 920 N0)))
                                                   (Ult N0 920))
                                              (Ult 381 N0))
                                         (Eq false (Ult 906 N0)))
                                    (Ult N0 906))
                               (Eq false (Ult 731 N0)))
                          (Ult N0 731))
                     (Eq false (Ult 711 N0)))
                (Ult N0 711))
           (Ult 382 N0))
      (Ult 402 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Ult 3622 N0))
                               (Eq false (Ult 3634 N0)))
                          (Ult N0 3634))
                     (Eq false (Ult 3628 N0)))
                (Ult N0 3628))
           (Ult 3625 N0))
      (Ult 3626 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Ult 12443 N0))
                               (Ult 12459 N0))
                          (Ult 12471 N0))
                     (Ult 12477 N0))
                (Ult 12479 N0))
           (Eq false (Ult 12481 N0)))
      (Eq false (Ult N0 12481)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Ult 1114 N0))
                                                   (Eq false (Ult 1581 N0)))
                                              (Ult N0 1581))
                                         (Ult 1506 N0))
                                    (Eq false (Ult 1569 N0)))
                               (Ult N0 1569))
                          (Ult 1512 N0))
                     (Ult 1548 N0))
                (Ult 1563 N0))
           (Eq false (Ult 1567 N0)))
      (Ult N0 1567))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Eq false (Ult 968 N0)))
                                                        (Ult N0 968))
                                                   (Ult 354 N0))
                                              (Eq false (Ult 920 N0)))
                                         (Ult N0 920))
                                    (Eq false (Ult 381 N0)))
                               (Ult N0 381))
                          (Ult 365 N0))
                     (Eq false (Ult 371 N0)))
                (Ult N0 371))
           (Ult 368 N0))
      (Ult 369 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Ult 9492 N0))
                                         (Eq false (Ult 9644 N0)))
                                    (Ult N0 9644))
                               (Eq false (Ult 9532 N0)))
                          (Ult N0 9532))
                     (Eq false (Ult 9508 N0)))
                (Ult N0 9508))
           (Ult 9496 N0))
      (Ult 9500 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Eq false (Ult 8224 N0)))
                                    (Ult N0 8224))
                               (Ult 8202 N0))
                          (Ult 8216 N0))
                     (Eq false (Ult 8220 N0)))
                (Ult N0 8220))
           (Ult 8217 N0))
      (Ult 8218 N0))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Ult 4545 N0))
                                                        (Ult 8471 N0))
                                                   (Eq false (Ult 8728 N0)))
                                              (Ult N0 8728))
                                         (Eq false (Ult 8539 N0)))
                                    (Ult N0 8539))
                               (Eq false (Ult 8533 N0)))
                          (Ult N0 8533))
                     (Eq false (Ult 8482 N0)))
                (Ult N0 8482))
           (Eq false (Ult 8478 N0)))
      (Eq false (Ult N0 8478)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [28]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Eq false (Ult 12443 N0)))
                                         (Ult N0 12443))
                                    (Eq false (Ult 9829 N0)))
                               (Ult N0 9829))
                          (Eq false (Ult 9747 N0)))
                     (Ult N0 9747))
                (Eq false (Ult 9702 N0)))
           (Ult N0 9702))
      (Ult 9679 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: wc_addr
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Ult 298 N0))
                                         (Eq false (Ult 327 N0)))
                                    (Ult N0 327))
                               (Ult 313 N0))
                          (Eq false (Ult 321 N0)))
                     (Ult N0 321))
                (Ult 316 N0))
           (Ult 317 N0))
      (Ult 318 N0))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Ult 4545 N0))
                                                        (Eq false (Ult 8471 N0)))
                                                   (Ult N0 8471))
                                              (Eq false (Ult 8224 N0)))
                                         (Ult N0 8224))
                                    (Eq false (Ult 8202 N0)))
                               (Ult N0 8202))
                          (Ult 8195 N0))
                     (Eq false (Ult 8199 N0)))
                (Ult N0 8199))
           (Ult 8196 N0))
      (Eq false (Ult 8197 N0)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Ult 12483 N0))
                                                        (Eq false (Ult 12605 N0)))
                                                   (Ult N0 12605))
                                              (Eq false (Ult 12519 N0)))
                                         (Ult N0 12519))
                                    (Eq false (Ult 12501 N0)))
                               (Ult N0 12501))
                          (Eq false (Ult 12491 N0)))
                     (Ult N0 12491))
                (Ult 12486 N0))
           (Ult 12488 N0))
      (Eq false (Ult N0 12490)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Eq false (Ult 9492 N0)))
                                         (Ult N0 9492))
                                    (Eq false (Ult 9225 N0)))
                               (Ult N0 9225))
                          (Ult 8981 N0))
                     (Eq false (Ult 9001 N0)))
                (Ult N0 9001))
           (Ult 8992 N0))
      (Ult 8993 N0))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [51]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Eq false (Ult 8224 N0)))
                                    (Ult N0 8224))
                               (Ult 8202 N0))
                          (Eq false (Ult 8216 N0)))
                     (Ult N0 8216))
                (Ult 8212 N0))
           (Ult 8213 N0))
      (Ult N0 8215))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Eq false (Ult 381 N0)))
                                    (Ult N0 381))
                               (Eq false (Ult 365 N0)))
                          (Ult N0 365))
                     (Ult 359 N0))
                (Eq false (Ult 362 N0)))
           (Ult N0 362))
      (Ult 360 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Ult 8471 N0))
                                              (Ult 8728 N0))
                                         (Ult 8747 N0))
                                    (Eq false (Ult 8805 N0)))
                               (Ult N0 8805))
                          (Eq false (Ult 8800 N0)))
                     (Ult N0 8800))
                (Ult 8756 N0))
           (Eq false (Ult 8773 N0)))
      (Ult N0 8773))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Ult 3650 N0))
                                         (Ult 4521 N0))
                                    (Eq false (Ult 4533 N0)))
                               (Ult N0 4533))
                          (Eq false (Ult 4527 N0)))
                     (Ult N0 4527))
                (Eq false (Ult 4524 N0)))
           (Ult N0 4524))
      (Ult 4522 N0))
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Ult 9492 N0))
                               (Ult 9644 N0))
                          (Eq false (Ult 9660 N0)))
                     (Ult N0 9660))
                (Eq false (Ult 9651 N0)))
           (Ult N0 9651))
      (Eq false (Ult 9645 N0)))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb7, variable: mid
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Eq false (Ult 968 N0)))
                                                                  (Ult N0 968))
                                                             (Eq false (Ult 354 N0)))
                                                        (Ult N0 354))
                                                   (Eq false (Ult 298 N0)))
                                              (Ult N0 298))
                                         (Eq false (Ult 273 N0)))
                                    (Ult N0 273))
                               (Ult 261 N0))
                          (Eq false (Ult 267 N0)))
                     (Ult N0 267))
                (Eq false (Ult 264 N0)))
           (Ult N0 264))
      (Ult 262 N0))
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Ult 8224 N0))
                                    (Eq false (Ult 8356 N0)))
                               (Ult N0 8356))
                          (Ult 8248 N0))
                     (Eq false (Ult 8353 N0)))
                (Ult N0 8353))
           (Ult 8254 N0))
      (Eq false (Ult N0 8352)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Ult 8224 N0))
                                    (Eq false (Ult 8356 N0)))
                               (Ult N0 8356))
                          (Eq false (Ult 8248 N0)))
                     (Ult N0 8248))
                (Ult 8230 N0))
           (Ult 8242 N0))
      (Eq false (Ult 8243 N0)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Eq false (Ult 12443 N0)))
                                         (Ult N0 12443))
                                    (Eq false (Ult 9829 N0)))
                               (Ult N0 9829))
                          (Ult 9747 N0))
                     (Eq false (Ult 9792 N0)))
                (Ult N0 9792))
           (Eq false (Ult 9756 N0)))
      (Ult N0 9756))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Ult 381 N0))
                                    (Eq false (Ult 906 N0)))
                               (Ult N0 906))
                          (Ult 731 N0))
                     (Eq false (Ult 902 N0)))
                (Ult N0 902))
           (Ult 733 N0))
      (Ult N0 901))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [51]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Ult 12483 N0))
                                                        (Eq false (Ult 12605 N0)))
                                                   (Ult N0 12605))
                                              (Eq false (Ult 12519 N0)))
                                         (Ult N0 12519))
                                    (Eq false (Ult 12501 N0)))
                               (Ult N0 12501))
                          (Eq false (Ult 12491 N0)))
                     (Ult N0 12491))
                (Ult 12486 N0))
           (Ult 12488 N0))
      (Ult N0 12490))
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Ult 3650 N0))
                                         (Eq false (Ult 4521 N0)))
                                    (Ult N0 4521))
                               (Eq false (Ult 3661 N0)))
                          (Ult N0 3661))
                     (Ult 3655 N0))
                (Eq false (Ult 3658 N0)))
           (Ult N0 3658))
      (Ult 3656 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Ult 1114 N0))
                                                   (Eq false (Ult 1581 N0)))
                                              (Ult N0 1581))
                                         (Ult 1506 N0))
                                    (Eq false (Ult 1569 N0)))
                               (Ult N0 1569))
                          (Ult 1512 N0))
                     (Eq false (Ult 1548 N0)))
                (Ult N0 1548))
           (Ult 1513 N0))
      (Ult 1514 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Ult 9492 N0))
                               (Ult 9644 N0))
                          (Ult 9660 N0))
                     (Eq false (Ult 9665 N0)))
                (Ult N0 9665))
           (Ult 9661 N0))
      (Ult N0 9664))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Ult 12483 N0))
                                                        (Eq false (Ult 12605 N0)))
                                                   (Ult N0 12605))
                                              (Eq false (Ult 12519 N0)))
                                         (Ult N0 12519))
                                    (Ult 12501 N0))
                               (Eq false (Ult 12513 N0)))
                          (Ult N0 12513))
                     (Eq false (Ult 12510 N0)))
                (Ult N0 12510))
           (Ult 12504 N0))
      (Ult 12507 N0))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Ult 4545 N0))
                                                        (Eq false (Ult 8471 N0)))
                                                   (Ult N0 8471))
                                              (Eq false (Ult 8224 N0)))
                                         (Ult N0 8224))
                                    (Eq false (Ult 8202 N0)))
                               (Ult N0 8202))
                          (Eq false (Ult 8195 N0)))
                     (Ult N0 8195))
                (Eq false (Ult 4587 N0)))
           (Ult N0 4587))
      (Eq false (Ult 4546 N0)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Ult 1114 N0))
                                                   (Eq false (Ult 1581 N0)))
                                              (Ult N0 1581))
                                         (Ult 1506 N0))
                                    (Eq false (Ult 1569 N0)))
                               (Ult N0 1569))
                          (Ult 1512 N0))
                     (Eq false (Ult 1548 N0)))
                (Ult N0 1548))
           (Ult 1513 N0))
      (Eq false (Ult 1514 N0)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Ult 8224 N0))
                                    (Eq false (Ult 8356 N0)))
                               (Ult N0 8356))
                          (Ult 8248 N0))
                     (Eq false (Ult 8353 N0)))
                (Ult N0 8353))
           (Ult 8254 N0))
      (Ult N0 8352))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Ult 8471 N0))
                                              (Ult 8728 N0))
                                         (Ult 8747 N0))
                                    (Eq false (Ult 8805 N0)))
                               (Ult N0 8805))
                          (Eq false (Ult 8800 N0)))
                     (Ult N0 8800))
                (Ult 8756 N0))
           (Eq false (Ult 8773 N0)))
      (Eq false (Ult N0 8773)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Ult 9675 N0))
                                                   (Eq false (Ult 12443 N0)))
                                              (Ult N0 12443))
                                         (Eq false (Ult 9829 N0)))
                                    (Ult N0 9829))
                               (Eq false (Ult 9747 N0)))
                          (Ult N0 9747))
                     (Eq false (Ult 9702 N0)))
                (Ult N0 9702))
           (Eq false (Ult 9679 N0)))
      (Ult N0 9679))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Ult 12443 N0))
                                    (Ult 12459 N0))
                               (Eq false (Ult 12471 N0)))
                          (Ult N0 12471))
                     (Eq false (Ult 12465 N0)))
                (Ult N0 12465))
           (Eq false (Ult 12461 N0)))
      (Eq false (Ult N0 12461)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Ult 298 N0))
                                         (Eq false (Ult 327 N0)))
                                    (Ult N0 327))
                               (Ult 313 N0))
                          (Eq false (Ult 321 N0)))
                     (Ult N0 321))
                (Ult 316 N0))
           (Ult 317 N0))
      (Eq false (Ult 318 N0)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Ult 381 N0))
                                    (Eq false (Ult 906 N0)))
                               (Ult N0 906))
                          (Eq false (Ult 731 N0)))
                     (Ult N0 731))
                (Ult 711 N0))
           (Ult 728 N0))
      (Ult 729 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Eq false (Ult 3599 N0)))
                                                                  (Ult N0 3599))
                                                             (Ult 968 N0))
                                                        (Eq false (Ult 1114 N0)))
                                                   (Ult N0 1114))
                                              (Eq false (Ult 1066 N0)))
                                         (Ult N0 1066))
                                    (Ult 1042 N0))
                               (Eq false (Ult 1054 N0)))
                          (Ult N0 1054))
                     (Eq false (Ult 1048 N0)))
                (Ult N0 1048))
           (Ult 1045 N0))
      (Ult 1046 N0))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Ult 968 N0))
                                                             (Eq false (Ult 1114 N0)))
                                                        (Ult N0 1114))
                                                   (Eq false (Ult 1066 N0)))
                                              (Ult N0 1066))
                                         (Ult 1042 N0))
                                    (Eq false (Ult 1054 N0)))
                               (Ult N0 1054))
                          (Eq false (Ult 1048 N0)))
                     (Ult N0 1048))
                (Eq false (Ult 1045 N0)))
           (Ult N0 1045))
      (Ult 1043 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Ult 273 N0))
                               (Eq false (Ult 286 N0)))
                          (Ult N0 286))
                     (Eq false (Ult 280 N0)))
                (Ult N0 280))
           (Ult 275 N0))
      (Ult 278 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Ult 12483 N0))
                                                   (Eq false (Ult 12605 N0)))
                                              (Ult N0 12605))
                                         (Eq false (Ult 12519 N0)))
                                    (Ult N0 12519))
                               (Eq false (Ult 12501 N0)))
                          (Ult N0 12501))
                     (Ult 12491 N0))
                (Eq false (Ult 12494 N0)))
           (Ult N0 12494))
      (Ult 12492 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Ult 381 N0))
                                    (Ult 906 N0))
                               (Eq false (Ult 914 N0)))
                          (Ult N0 914))
                     (Eq false (Ult 911 N0)))
                (Ult N0 911))
           (Ult 908 N0))
      (Eq false (Ult N0 910)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Ult 12483 N0))
                                                        (Eq false (Ult 12605 N0)))
                                                   (Ult N0 12605))
                                              (Eq false (Ult 12519 N0)))
                                         (Ult N0 12519))
                                    (Eq false (Ult 12501 N0)))
                               (Ult N0 12501))
                          (Ult 12491 N0))
                     (Ult 12494 N0))
                (Ult 12495 N0))
           (Eq false (Ult 12498 N0)))
      (Eq false (Ult N0 12498)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Ult 381 N0))
                                    (Ult 906 N0))
                               (Eq false (Ult 914 N0)))
                          (Ult N0 914))
                     (Eq false (Ult 911 N0)))
                (Ult N0 911))
           (Ult 908 N0))
      (Ult N0 910))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Eq false (Ult 298 N0)))
                                         (Ult N0 298))
                                    (Ult 273 N0))
                               (Ult 286 N0))
                          (Eq false (Ult 292 N0)))
                     (Ult N0 292))
                (Eq false (Ult 289 N0)))
           (Ult N0 289))
      (Ult 287 N0))
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Ult 12483 N0))
                                                        (Eq false (Ult 12605 N0)))
                                                   (Ult N0 12605))
                                              (Eq false (Ult 12519 N0)))
                                         (Ult N0 12519))
                                    (Eq false (Ult 12501 N0)))
                               (Ult N0 12501))
                          (Ult 12491 N0))
                     (Ult 12494 N0))
                (Ult 12495 N0))
           (Eq false (Ult 12498 N0)))
      (Ult N0 12498))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Eq false (Ult 968 N0)))
                                                                  (Ult N0 968))
                                                             (Eq false (Ult 354 N0)))
                                                        (Ult N0 354))
                                                   (Ult 298 N0))
                                              (Ult 327 N0))
                                         (Eq false (Ult 342 N0)))
                                    (Ult N0 342))
                               (Eq false (Ult 336 N0)))
                          (Ult N0 336))
                     (Eq false (Ult 331 N0)))
                (Ult N0 331))
           (Ult 328 N0))
      (Eq false (Ult N0 330)))


##### Triggering information leak detection for direct-mapped caches #####

=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Eq false (Ult 4545 N0)))
                                                        (Ult N0 4545))
                                                   (Eq false (Ult 3650 N0)))
                                              (Ult N0 3650))
                                         (Ult 3622 N0))
                                    (Eq false (Ult 3634 N0)))
                               (Ult N0 3634))
                          (Eq false (Ult 3628 N0)))
                     (Ult N0 3628))
                (Eq false (Ult 3625 N0)))
           (Ult N0 3625))
      (Ult 3623 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Eq false (Ult 12443 N0)))
                                         (Ult N0 12443))
                                    (Eq false (Ult 9829 N0)))
                               (Ult N0 9829))
                          (Eq false (Ult 9747 N0)))
                     (Ult N0 9747))
                (Ult 9702 N0))
           (Ult 9734 N0))
      (Ult 9742 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Eq false (Ult 9492 N0)))
                               (Ult N0 9492))
                          (Ult 9225 N0))
                     (Ult 9252 N0))
                (Eq false (Ult 9474 N0)))
           (Ult N0 9474))
      (Ult 9472 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb8, variable: max


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Ult 3622 N0))
                               (Eq false (Ult 3634 N0)))
                          (Ult N0 3634))
                     (Ult 3628 N0))
                (Eq false (Ult 3631 N0)))
           (Ult N0 3631))
      (Ult 3629 N0))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Ult 12483 N0))
                                                             (Eq false (Ult 12605 N0)))
                                                        (Ult N0 12605))
                                                   (Eq false (Ult 12519 N0)))
                                              (Ult N0 12519))
                                         (Ult 12501 N0))
                                    (Eq false (Ult 12513 N0)))
                               (Ult N0 12513))
                          (Eq false (Ult 12510 N0)))
                     (Ult N0 12510))
                (Ult 12504 N0))
           (Eq false (Ult 12507 N0)))
      (Ult N0 12507))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Eq false (Ult 12443 N0)))
                                    (Ult N0 12443))
                               (Ult 9829 N0))
                          (Eq false (Ult 10013 N0)))
                     (Ult N0 10013))
                (Ult 9839 N0))
           (Ult 10003 N0))
      (Ult 10007 N0))
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Ult 12443 N0))
                                    (Ult 12459 N0))
                               (Eq false (Ult 12471 N0)))
                          (Ult N0 12471))
                     (Ult 12465 N0))
                (Ult 12467 N0))
           (Eq false (Ult 12469 N0)))
      (Ult N0 12469))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Eq false (Ult 12443 N0)))
                                         (Ult N0 12443))
                                    (Ult 9829 N0))
                               (Eq false (Ult 10013 N0)))
                          (Ult N0 10013))
                     (Eq false (Ult 9839 N0)))
                (Ult N0 9839))
           (Ult 9830 N0))
      (Ult 9837 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: max
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb10, variable: min


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Eq false (Ult 3599 N0)))
                                                                            (Ult N0 3599))
                                                                       (Eq false (Ult 968 N0)))
                                                                  (Ult N0 968))
                                                             (Eq false (Ult 354 N0)))
                                                        (Ult N0 354))
                                                   (Ult 298 N0))
                                              (Ult 327 N0))
                                         (Eq false (Ult 342 N0)))
                                    (Ult N0 342))
                               (Eq false (Ult 336 N0)))
                          (Ult N0 336))
                     (Eq false (Ult 331 N0)))
                (Ult N0 331))
           (Ult 328 N0))
      (Ult N0 330))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Ult 12443 N0))
                                    (Ult 12459 N0))
                               (Ult 12471 N0))
                          (Eq false (Ult 12477 N0)))
                     (Ult N0 12477))
                (Ult 12473 N0))
           (Eq false (Ult 12475 N0)))
      (Eq false (Ult N0 12475)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Eq false (Ult 354 N0)))
                                                   (Ult N0 354))
                                              (Ult 298 N0))
                                         (Eq false (Ult 327 N0)))
                                    (Ult N0 327))
                               (Ult 313 N0))
                          (Eq false (Ult 321 N0)))
                     (Ult N0 321))
                (Eq false (Ult 316 N0)))
           (Ult N0 316))
      (Ult 314 N0))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Eq false (Ult 12443 N0)))
                                         (Ult N0 12443))
                                    (Ult 9829 N0))
                               (Eq false (Ult 10013 N0)))
                          (Ult N0 10013))
                     (Ult 9839 N0))
                (Ult 10003 N0))
           (Eq false (Ult 10007 N0)))
      (Eq false (Ult N0 10007)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Eq false (Ult 381 N0)))
                                    (Ult N0 381))
                               (Ult 365 N0))
                          (Eq false (Ult 371 N0)))
                     (Ult N0 371))
                (Eq false (Ult 368 N0)))
           (Ult N0 368))
      (Ult 366 N0))
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Eq false (Ult 3599 N0)))
                                                                       (Ult N0 3599))
                                                                  (Eq false (Ult 968 N0)))
                                                             (Ult N0 968))
                                                        (Ult 354 N0))
                                                   (Eq false (Ult 920 N0)))
                                              (Ult N0 920))
                                         (Ult 381 N0))
                                    (Eq false (Ult 906 N0)))
                               (Ult N0 906))
                          (Eq false (Ult 731 N0)))
                     (Ult N0 731))
                (Ult 711 N0))
           (Ult 728 N0))
      (Eq false (Ult 729 N0)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [58]




########## Now building the constraint system ##########



########## after path processing, constraint size 5 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Eq false (Ult 12443 N0)))
                                    (Ult N0 12443))
                               (Eq false (Ult 9829 N0)))
                          (Ult N0 9829))
                     (Ult 9747 N0))
                (Ult 9792 N0))
           (Ult 9794 N0))
      (Ult 9827 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                               (And (Ult 31
                                                                                                         N0:(ReadLSB w32 0 keystroke))
                                                                                                    (Ule N0 126)))
                                                                                           (Eq false
                                                                                               (And (Ult 159 N0) (Ule N0 255))))
                                                                                      (Eq false (Ult 3599 N0)))
                                                                                 (Ult N0 3599))
                                                                            (Eq false (Ult 968 N0)))
                                                                       (Ult N0 968))
                                                                  (Ult 354 N0))
                                                             (Eq false (Ult 920 N0)))
                                                        (Ult N0 920))
                                                   (Ult 381 N0))
                                              (Eq false (Ult 906 N0)))
                                         (Ult N0 906))
                                    (Eq false (Ult 731 N0)))
                               (Ult N0 731))
                          (Eq false (Ult 711 N0)))
                     (Ult N0 711))
                (Ult 382 N0))
           (Eq false (Ult 402 N0)))
      (Ult N0 402))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Ult 4545 N0))
                                                        (Eq false (Ult 8471 N0)))
                                                   (Ult N0 8471))
                                              (Eq false (Ult 8224 N0)))
                                         (Ult N0 8224))
                                    (Eq false (Ult 8202 N0)))
                               (Ult N0 8202))
                          (Ult 8195 N0))
                     (Eq false (Ult 8199 N0)))
                (Ult N0 8199))
           (Ult 8196 N0))
      (Ult 8197 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Ult 4545 N0))
                                                        (Eq false (Ult 8471 N0)))
                                                   (Ult N0 8471))
                                              (Eq false (Ult 8224 N0)))
                                         (Ult N0 8224))
                                    (Eq false (Ult 8202 N0)))
                               (Ult N0 8202))
                          (Eq false (Ult 8195 N0)))
                     (Ult N0 8195))
                (Ult 4587 N0))
           (Ult 4601 N0))
      (Eq false (Ult N0 8194)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                               (And (Ult 31
                                                                                                         N0:(ReadLSB w32 0 keystroke))
                                                                                                    (Ule N0 126)))
                                                                                           (Eq false
                                                                                               (And (Ult 159 N0) (Ule N0 255))))
                                                                                      (Eq false (Ult 3599 N0)))
                                                                                 (Ult N0 3599))
                                                                            (Eq false (Ult 968 N0)))
                                                                       (Ult N0 968))
                                                                  (Ult 354 N0))
                                                             (Eq false (Ult 920 N0)))
                                                        (Ult N0 920))
                                                   (Ult 381 N0))
                                              (Eq false (Ult 906 N0)))
                                         (Ult N0 906))
                                    (Eq false (Ult 731 N0)))
                               (Ult N0 731))
                          (Eq false (Ult 711 N0)))
                     (Ult N0 711))
                (Ult 382 N0))
           (Eq false (Ult 402 N0)))
      (Eq false (Ult N0 402)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Ult 12443 N0))
                               (Ult 12459 N0))
                          (Ult 12471 N0))
                     (Ult 12477 N0))
                (Ult 12479 N0))
           (Eq false (Ult 12481 N0)))
      (Ult N0 12481))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Eq false (Ult 12443 N0)))
                                         (Ult N0 12443))
                                    (Eq false (Ult 9829 N0)))
                               (Ult N0 9829))
                          (Ult 9747 N0))
                     (Ult 9792 N0))
                (Ult 9794 N0))
           (Eq false (Ult 9827 N0)))
      (Ult N0 9827))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Eq false (Ult 9492 N0)))
                                    (Ult N0 9492))
                               (Ult 9225 N0))
                          (Eq false (Ult 9252 N0)))
                     (Ult N0 9252))
                (Eq false (Ult 9228 N0)))
           (Ult N0 9228))
      (Ult 9226 N0))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Ult 12483 N0))
                                                             (Eq false (Ult 12605 N0)))
                                                        (Ult N0 12605))
                                                   (Eq false (Ult 12519 N0)))
                                              (Ult N0 12519))
                                         (Ult 12501 N0))
                                    (Eq false (Ult 12513 N0)))
                               (Ult N0 12513))
                          (Eq false (Ult 12510 N0)))
                     (Ult N0 12510))
                (Ult 12504 N0))
           (Eq false (Ult 12507 N0)))
      (Eq false (Ult N0 12507)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Ult 4545 N0))
                                                   (Eq false (Ult 8471 N0)))
                                              (Ult N0 8471))
                                         (Eq false (Ult 8224 N0)))
                                    (Ult N0 8224))
                               (Ult 8202 N0))
                          (Ult 8216 N0))
                     (Eq false (Ult 8220 N0)))
                (Ult N0 8220))
           (Ult 8217 N0))
      (Eq false (Ult 8218 N0)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Ult 9492 N0))
                               (Ult 9644 N0))
                          (Eq false (Ult 9660 N0)))
                     (Ult N0 9660))
                (Ult 9651 N0))
           (Ult 9654 N0))
      (Ult 9655 N0))
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb9, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Ult 3650 N0))
                                         (Eq false (Ult 4521 N0)))
                                    (Ult N0 4521))
                               (Ult 3661 N0))
                          (Eq false (Ult 3669 N0)))
                     (Ult N0 3669))
                (Eq false (Ult 3666 N0)))
           (Ult N0 3666))
      (Ult 3664 N0))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Eq false (Ult 9675 N0)))
                                         (Ult N0 9675))
                                    (Ult 9492 N0))
                               (Ult 9644 N0))
                          (Eq false (Ult 9660 N0)))
                     (Ult N0 9660))
                (Ult 9651 N0))
           (Ult 9654 N0))
      (Eq false (Ult 9655 N0)))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Eq false (Ult 9492 N0)))
                                         (Ult N0 9492))
                                    (Eq false (Ult 9225 N0)))
                               (Ult N0 9225))
                          (Ult 8981 N0))
                     (Ult 9001 N0))
                (Ult 9002 N0))
           (Eq false (Ult 9109 N0)))
      (Ult N0 9109))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                      (And (Ult 31
                                                                                N0:(ReadLSB w32 0 keystroke))
                                                                           (Ule N0 126)))
                                                                  (Eq false
                                                                      (And (Ult 159 N0) (Ule N0 255))))
                                                             (Ult 3599 N0))
                                                        (Ult 8867 N0))
                                                   (Eq false (Ult 12483 N0)))
                                              (Ult N0 12483))
                                         (Ult 9675 N0))
                                    (Ult 12443 N0))
                               (Ult 12459 N0))
                          (Eq false (Ult 12471 N0)))
                     (Ult N0 12471))
                (Ult 12465 N0))
           (Ult 12467 N0))
      (Ult 12469 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [48]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Eq false (Ult 3622 N0)))
                               (Ult N0 3622))
                          (Ult 3610 N0))
                     (Eq false (Ult 3616 N0)))
                (Ult N0 3616))
           (Ult 3613 N0))
      (Ult 3614 N0))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb11, variable: wc_addr
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Ult 12443 N0))
                                    (Ult 12459 N0))
                               (Eq false (Ult 12471 N0)))
                          (Ult N0 12471))
                     (Eq false (Ult 12465 N0)))
                (Ult N0 12465))
           (Ult 12461 N0))
      (Ult 12463 N0))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Eq false (Ult 9492 N0)))
                                         (Ult N0 9492))
                                    (Eq false (Ult 9225 N0)))
                               (Ult N0 9225))
                          (Ult 8981 N0))
                     (Eq false (Ult 9001 N0)))
                (Ult N0 9001))
           (Ult 8992 N0))
      (Eq false (Ult 8993 N0)))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Eq false (Ult 12443 N0)))
                                         (Ult N0 12443))
                                    (Eq false (Ult 9829 N0)))
                               (Ult N0 9829))
                          (Ult 9747 N0))
                     (Ult 9792 N0))
                (Ult 9794 N0))
           (Eq false (Ult 9827 N0)))
      (Eq false (Ult N0 9827)))
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Ult 4545 N0))
                                                        (Eq false (Ult 8471 N0)))
                                                   (Ult N0 8471))
                                              (Ult 8224 N0))
                                         (Eq false (Ult 8356 N0)))
                                    (Ult N0 8356))
                               (Eq false (Ult 8248 N0)))
                          (Ult N0 8248))
                     (Eq false (Ult 8230 N0)))
                (Ult N0 8230))
           (Ult 8225 N0))
      (Ult 8226 N0))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Eq false (Ult 8867 N0)))
                                                             (Ult N0 8867))
                                                        (Eq false (Ult 4545 N0)))
                                                   (Ult N0 4545))
                                              (Eq false (Ult 3650 N0)))
                                         (Ult N0 3650))
                                    (Eq false (Ult 3622 N0)))
                               (Ult N0 3622))
                          (Ult 3610 N0))
                     (Ult 3616 N0))
                (Eq false (Ult 3619 N0)))
           (Ult N0 3619))
      (Ult 3617 N0))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [15]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Ult 4545 N0))
                                                        (Eq false (Ult 8471 N0)))
                                                   (Ult N0 8471))
                                              (Ult 8224 N0))
                                         (Eq false (Ult 8356 N0)))
                                    (Ult N0 8356))
                               (Eq false (Ult 8248 N0)))
                          (Ult N0 8248))
                     (Eq false (Ult 8230 N0)))
                (Ult N0 8230))
           (Ult 8225 N0))
      (Eq false (Ult 8226 N0)))
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [51]




########## Now building the constraint system ##########



########## after path processing, constraint size 4 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Ult 4545 N0))
                                                        (Eq false (Ult 8471 N0)))
                                                   (Ult N0 8471))
                                              (Eq false (Ult 8224 N0)))
                                         (Ult N0 8224))
                                    (Eq false (Ult 8202 N0)))
                               (Ult N0 8202))
                          (Eq false (Ult 8195 N0)))
                     (Ult N0 8195))
                (Ult 4587 N0))
           (Ult 4601 N0))
      (Ult N0 8194))
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Ult 9492 N0))
                                    (Ult 9644 N0))
                               (Eq false (Ult 9660 N0)))
                          (Ult N0 9660))
                     (Eq false (Ult 9651 N0)))
                (Ult N0 9651))
           (Ult 9645 N0))
      (Eq false (Ult N0 9650)))
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Ult 12443 N0))
                                    (Ult 12459 N0))
                               (Ult 12471 N0))
                          (Eq false (Ult 12477 N0)))
                     (Ult N0 12477))
                (Ult 12473 N0))
           (Eq false (Ult 12475 N0)))
      (Ult N0 12475))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                           (And (Ult 31
                                                                                     N0:(ReadLSB w32 0 keystroke))
                                                                                (Ule N0 126)))
                                                                       (Eq false
                                                                           (And (Ult 159 N0) (Ule N0 255))))
                                                                  (Ult 3599 N0))
                                                             (Ult 8867 N0))
                                                        (Eq false (Ult 12483 N0)))
                                                   (Ult N0 12483))
                                              (Ult 9675 N0))
                                         (Ult 12443 N0))
                                    (Ult 12459 N0))
                               (Eq false (Ult 12471 N0)))
                          (Ult N0 12471))
                     (Eq false (Ult 12465 N0)))
                (Ult N0 12465))
           (Eq false (Ult 12461 N0)))
      (Ult N0 12461))
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 2 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Eq false (Ult 8867 N0)))
                                                                  (Ult N0 8867))
                                                             (Eq false (Ult 4545 N0)))
                                                        (Ult N0 4545))
                                                   (Eq false (Ult 3650 N0)))
                                              (Ult N0 3650))
                                         (Eq false (Ult 3622 N0)))
                                    (Ult N0 3622))
                               (Ult 3610 N0))
                          (Eq false (Ult 3616 N0)))
                     (Ult N0 3616))
                (Eq false (Ult 3613 N0)))
           (Ult N0 3613))
      (Ult 3611 N0))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Ult 9492 N0))
                                    (Ult 9644 N0))
                               (Eq false (Ult 9660 N0)))
                          (Ult N0 9660))
                     (Eq false (Ult 9651 N0)))
                (Ult N0 9651))
           (Ult 9645 N0))
      (Ult N0 9650))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [41]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Ult 9492 N0))
                                    (Eq false (Ult 9644 N0)))
                               (Ult N0 9644))
                          (Ult 9532 N0))
                     (Eq false (Ult 9633 N0)))
                (Ult N0 9633))
           (Ult 9618 N0))
      (Ult N0 9632))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Eq false (Ult 12443 N0)))
                                         (Ult N0 12443))
                                    (Ult 9829 N0))
                               (Eq false (Ult 10013 N0)))
                          (Ult N0 10013))
                     (Ult 9839 N0))
                (Ult 10003 N0))
           (Eq false (Ult 10007 N0)))
      (Ult N0 10007))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Ult 3599 N0))
                                                                            (Ult 8867 N0))
                                                                       (Eq false (Ult 12483 N0)))
                                                                  (Ult N0 12483))
                                                             (Eq false (Ult 9675 N0)))
                                                        (Ult N0 9675))
                                                   (Ult 9492 N0))
                                              (Eq false (Ult 9644 N0)))
                                         (Ult N0 9644))
                                    (Eq false (Ult 9532 N0)))
                               (Ult N0 9532))
                          (Eq false (Ult 9508 N0)))
                     (Ult N0 9508))
                (Ult 9496 N0))
           (Eq false (Ult 9500 N0)))
      (Ult N0 9500))


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Eq false (Ult 9675 N0)))
                                                   (Ult N0 9675))
                                              (Ult 9492 N0))
                                         (Eq false (Ult 9644 N0)))
                                    (Ult N0 9644))
                               (Eq false (Ult 9532 N0)))
                          (Ult N0 9532))
                     (Ult 9508 N0))
                (Ult 9516 N0))
           (Eq false (Ult 9524 N0)))
      (Ult N0 9524))
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb11, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                          (And (Ult 31
                                                                                                    N0:(ReadLSB w32 0 keystroke))
                                                                                               (Ule N0 126)))
                                                                                      (Eq false
                                                                                          (And (Ult 159 N0) (Ule N0 255))))
                                                                                 (Ult 3599 N0))
                                                                            (Ult 8867 N0))
                                                                       (Eq false (Ult 12483 N0)))
                                                                  (Ult N0 12483))
                                                             (Eq false (Ult 9675 N0)))
                                                        (Ult N0 9675))
                                                   (Ult 9492 N0))
                                              (Eq false (Ult 9644 N0)))
                                         (Ult N0 9644))
                                    (Eq false (Ult 9532 N0)))
                               (Ult N0 9532))
                          (Eq false (Ult 9508 N0)))
                     (Ult N0 9508))
                (Ult 9496 N0))
           (Eq false (Ult 9500 N0)))
      (Eq false (Ult N0 9500)))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Eq false (Ult 9675 N0)))
                                              (Ult N0 9675))
                                         (Ult 9492 N0))
                                    (Eq false (Ult 9644 N0)))
                               (Ult N0 9644))
                          (Ult 9532 N0))
                     (Eq false (Ult 9633 N0)))
                (Ult N0 9633))
           (Ult 9618 N0))
      (Eq false (Ult N0 9632)))
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Ult 9675 N0))
                                                   (Eq false (Ult 12443 N0)))
                                              (Ult N0 12443))
                                         (Eq false (Ult 9829 N0)))
                                    (Ult N0 9829))
                               (Eq false (Ult 9747 N0)))
                          (Ult N0 9747))
                     (Ult 9702 N0))
                (Ult 9734 N0))
           (Eq false (Ult 9742 N0)))
      (Ult N0 9742))
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: keyval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Ult 9675 N0))
                                                   (Eq false (Ult 12443 N0)))
                                              (Ult N0 12443))
                                         (Eq false (Ult 9829 N0)))
                                    (Ult N0 9829))
                               (Eq false (Ult 9747 N0)))
                          (Ult N0 9747))
                     (Ult 9702 N0))
                (Ult 9734 N0))
           (Eq false (Ult 9742 N0)))
      (Eq false (Ult N0 9742)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Ult 12443 N0))
                                         (Ult 12459 N0))
                                    (Eq false (Ult 12471 N0)))
                               (Ult N0 12471))
                          (Eq false (Ult 12465 N0)))
                     (Ult N0 12465))
                (Ult 12461 N0))
           (Eq false (Ult 12463 N0)))
      (Ult N0 12463))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: load
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Ult 12443 N0))
                                         (Ult 12459 N0))
                                    (Eq false (Ult 12471 N0)))
                               (Ult N0 12471))
                          (Eq false (Ult 12465 N0)))
                     (Ult N0 12465))
                (Ult 12461 N0))
           (Eq false (Ult 12463 N0)))
      (Eq false (Ult N0 12463)))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: 
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [38]




########## Now building the constraint system ##########



########## after path processing, constraint size 3 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                (And (Ult 31
                                                                                          N0:(ReadLSB w32 0 keystroke))
                                                                                     (Ule N0 126)))
                                                                            (Eq false
                                                                                (And (Ult 159 N0) (Ule N0 255))))
                                                                       (Ult 3599 N0))
                                                                  (Ult 8867 N0))
                                                             (Eq false (Ult 12483 N0)))
                                                        (Ult N0 12483))
                                                   (Ult 9675 N0))
                                              (Eq false (Ult 12443 N0)))
                                         (Ult N0 12443))
                                    (Eq false (Ult 9829 N0)))
                               (Ult N0 9829))
                          (Ult 9747 N0))
                     (Eq false (Ult 9792 N0)))
                (Ult N0 9792))
           (Ult 9756 N0))
      (Ult 9758 N0))
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: store
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Ult 9675 N0))
                                                   (Eq false (Ult 12443 N0)))
                                              (Ult N0 12443))
                                         (Ult 9829 N0))
                                    (Eq false (Ult 10013 N0)))
                               (Ult N0 10013))
                          (Eq false (Ult 9839 N0)))
                     (Ult N0 9839))
                (Ult 9830 N0))
           (Eq false (Ult 9837 N0)))
      (Eq false (Ult N0 9837)))
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Ult 9675 N0))
                                                   (Eq false (Ult 12443 N0)))
                                              (Ult N0 12443))
                                         (Ult 9829 N0))
                                    (Eq false (Ult 10013 N0)))
                               (Ult N0 10013))
                          (Eq false (Ult 9839 N0)))
                     (Ult N0 9839))
                (Ult 9830 N0))
           (Eq false (Ult 9837 N0)))
      (Ult N0 9837))
=> opcode: load
function: gdk_unicode_to_keyval, basicblock: bb12, variable: retval
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: keyval
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [12]




########## Now building the constraint system ##########



########## after path processing, constraint size 0 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Ult 9675 N0))
                                                   (Eq false (Ult 12443 N0)))
                                              (Ult N0 12443))
                                         (Eq false (Ult 9829 N0)))
                                    (Ult N0 9829))
                               (Ult 9747 N0))
                          (Eq false (Ult 9792 N0)))
                     (Ult N0 9792))
                (Ult 9756 N0))
           (Eq false (Ult 9758 N0)))
      (Eq false (Ult N0 9758)))
=> opcode: load
function: main, basicblock: entry, variable: keystroke
=> opcode: load
function: main, basicblock: entry, variable: unicode
=> opcode: store
function: main, basicblock: entry, variable: 
=> opcode: load
function: main, basicblock: entry, variable: 
=> opcode: store
function: main, basicblock: entry, variable: retval
=> opcode: load
function: main, basicblock: entry, variable: retval


##### Triggering information leak detection for direct-mapped caches #####



Number of symbolic addresses::=> [0]
Number of constant addresses::=> [18]




########## Now building the constraint system ##########



########## after path processing, constraint size 1 ##########

(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (And (Ult 31
                                                                                               N0:(ReadLSB w32 0 keystroke))
                                                                                          (Ule N0 126)))
                                                                                 (Eq false
                                                                                     (And (Ult 159 N0) (Ule N0 255))))
                                                                            (Ult 3599 N0))
                                                                       (Ult 8867 N0))
                                                                  (Eq false (Ult 12483 N0)))
                                                             (Ult N0 12483))
                                                        (Ult 9675 N0))
                                                   (Eq false (Ult 12443 N0)))
                                              (Ult N0 12443))
                                         (Eq false (Ult 9829 N0)))
                                    (Ult N0 9829))
                               (Ult 9747 N0))
                          (Eq false (Ult 9792 N0)))
                     (Ult N0 9792))
                (Ult 9756 N0))
           (Eq false (Ult 9758 N0)))
      (Ult N0 9758))


##### Triggering information leak detection for direct-mapped caches #####



####final state detected####


#### Now checking information leak through path constraints for ACCESS-based attacks####



 -> encountered symbolic object "keystroke"
address = 140474082286272


###### checking potential information leak via byte 0, observation [1]



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]
keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

32 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

33 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

34 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

35 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

36 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

37 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

38 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

39 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

40 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

41 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

42 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

43 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

44 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

45 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

46 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

47 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

48 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

49 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

50 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

51 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

52 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

53 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

54 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

55 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

56 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

57 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

58 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

59 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

60 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

61 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

62 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

63 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

64 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

65 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

66 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

67 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

68 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

69 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

70 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

71 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

72 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

73 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

74 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

75 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

76 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

77 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

78 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

79 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

80 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

81 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

82 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

83 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

84 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

85 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

86 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

87 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

88 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

89 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

90 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

91 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

92 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

93 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

94 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

95 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

96 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

97 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

98 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

99 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

100 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

101 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

102 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

103 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

104 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

105 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

106 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

107 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

108 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

109 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

110 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

111 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

112 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

113 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

114 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

115 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

116 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

117 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

118 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

119 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

120 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

121 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

122 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

123 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

124 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

125 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

126 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [1]
keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

160 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

161 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

162 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

163 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

164 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

165 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

166 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

167 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

168 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

169 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

170 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

171 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

172 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

173 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

174 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

175 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

176 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

177 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

178 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

179 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

180 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

181 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

182 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

183 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

184 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

185 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

186 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

187 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

188 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

189 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

190 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

191 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

192 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

193 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

194 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

195 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

196 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

197 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

198 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

199 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

200 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

201 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

202 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

203 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

204 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

205 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

206 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

207 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

208 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

209 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

210 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

211 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

212 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

213 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

214 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

215 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

216 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

217 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

218 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

219 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

220 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

221 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

222 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

223 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

224 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

225 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

226 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

227 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

228 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

229 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

230 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

231 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

232 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

233 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

234 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

235 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

236 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

237 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

238 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

239 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

240 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

241 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

242 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

243 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

244 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

245 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

246 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

247 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

248 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

249 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

250 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

251 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

252 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

253 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

254 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

255 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



###### checking potential information leak via byte 1, observation [1]

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

32 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [1]


###### checking potential information leak via byte 2, observation [1]

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

32 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [1]


###### checking potential information leak via byte 3, observation [1]

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

32 0 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [1]


###### checking potential information leak via byte 0, observation [2]



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]
keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

15 14 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [2]


###### checking potential information leak via byte 1, observation [2]



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]
keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

15 14 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [2]


###### checking potential information leak via byte 2, observation [2]

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

15 14 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [2]


###### checking potential information leak via byte 3, observation [2]

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

15 14 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [2]


###### checking potential information leak via byte 0, observation [3]



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]
keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

163 34 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [3]


###### checking potential information leak via byte 1, observation [3]



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]
keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

163 34 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [3]


###### checking potential information leak via byte 2, observation [3]

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

163 34 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [3]


###### checking potential information leak via byte 3, observation [3]

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

163 34 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [3]


###### checking potential information leak via byte 0, observation [4]



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]
keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

200 3 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [4]


###### checking potential information leak via byte 1, observation [4]



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]
keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

200 3 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [4]


###### checking potential information leak via byte 2, observation [4]

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

200 3 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [4]


###### checking potential information leak via byte 3, observation [4]

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

200 3 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [4]


###### checking potential information leak via byte 0, observation [5]



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]
keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

195 48 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 0, observation [5]


###### checking potential information leak via byte 1, observation [5]



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]
keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

195 48 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 1, observation [5]


###### checking potential information leak via byte 2, observation [5]

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

195 48 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 2, observation [5]


###### checking potential information leak via byte 3, observation [5]

keystroke = (size 4, little-endian) 

..... printing one solution for observation constraint .....

195 48 0 0 


 -> encountered symbolic object "keystroke"
address = 140474082286272
..... #keys discovered so far = 1 .....



 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]


 -> encountered symbolic object "keystroke"
address = 140474082286272


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]

KLEE: done: total instructions = 45975
KLEE: done: completed paths = 886
KLEE: done: generated tests = 886


..... observation constraint have no possible solutions .....



##### (**) information leak detected in byte 3, observation [5]
real        49.03
user        40.47
sys          7.62
